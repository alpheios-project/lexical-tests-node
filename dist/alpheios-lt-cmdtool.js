/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/alpheios-data-models/dist/alpheios-data-models.node.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/alpheios-data-models/dist/alpheios-data-models.node.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(true)\r\n\t\tmodule.exports = factory();\r\n\telse { var i, a; }\r\n})(global, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./driver.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"../node_modules/uuid/lib/bytesToUuid.js\":\r\n/*!***********************************************!*\\\r\n  !*** ../node_modules/uuid/lib/bytesToUuid.js ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Convert array of 16 byte values to UUID string format of the form:\r\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\r\n */\r\nvar byteToHex = [];\r\nfor (var i = 0; i < 256; ++i) {\r\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\r\n}\r\n\r\nfunction bytesToUuid(buf, offset) {\r\n  var i = offset || 0;\r\n  var bth = byteToHex;\r\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\r\n  return ([bth[buf[i++]], bth[buf[i++]], \r\n\tbth[buf[i++]], bth[buf[i++]], '-',\r\n\tbth[buf[i++]], bth[buf[i++]], '-',\r\n\tbth[buf[i++]], bth[buf[i++]], '-',\r\n\tbth[buf[i++]], bth[buf[i++]], '-',\r\n\tbth[buf[i++]], bth[buf[i++]],\r\n\tbth[buf[i++]], bth[buf[i++]],\r\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\r\n}\r\n\r\nmodule.exports = bytesToUuid;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/uuid/lib/rng.js\":\r\n/*!***************************************!*\\\r\n  !*** ../node_modules/uuid/lib/rng.js ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n// Unique ID creation requires a high quality random # generator.  In node.js\r\n// this is pretty straight-forward - we use the crypto API.\r\n\r\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\r\n\r\nmodule.exports = function nodeRNG() {\r\n  return crypto.randomBytes(16);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/uuid/v4.js\":\r\n/*!**********************************!*\\\r\n  !*** ../node_modules/uuid/v4.js ***!\r\n  \\**********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar rng = __webpack_require__(/*! ./lib/rng */ \"../node_modules/uuid/lib/rng.js\");\r\nvar bytesToUuid = __webpack_require__(/*! ./lib/bytesToUuid */ \"../node_modules/uuid/lib/bytesToUuid.js\");\r\n\r\nfunction v4(options, buf, offset) {\r\n  var i = buf && offset || 0;\r\n\r\n  if (typeof(options) == 'string') {\r\n    buf = options === 'binary' ? new Array(16) : null;\r\n    options = null;\r\n  }\r\n  options = options || {};\r\n\r\n  var rnds = options.random || (options.rng || rng)();\r\n\r\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\r\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\r\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\r\n\r\n  // Copy bytes to buffer, if provided\r\n  if (buf) {\r\n    for (var ii = 0; ii < 16; ++ii) {\r\n      buf[i + ii] = rnds[ii];\r\n    }\r\n  }\r\n\r\n  return buf || bytesToUuid(rnds);\r\n}\r\n\r\nmodule.exports = v4;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./arabic_language_model.js\":\r\n/*!**********************************!*\\\r\n  !*** ./arabic_language_model.js ***!\r\n  \\**********************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ArabicLanguageModel; });\r\n/* harmony import */ var _language_model_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model.js */ \"./language_model.js\");\r\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./constants.js\");\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n\r\n\r\n\r\n\r\nlet typeFeatures = new Map()\r\nlet typeFeaturesInitialized = false\r\n\r\n/**\r\n * @class  LatinLanguageModel is the lass for Latin specific behavior\r\n */\r\nclass ArabicLanguageModel extends _language_model_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  static get languageID () { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"LANG_ARABIC\"] }\r\n  static get languageCode () { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STR_LANG_CODE_ARA\"] }\r\n  static get languageCodes () { return [_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STR_LANG_CODE_ARA\"], _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STR_LANG_CODE_AR\"]] }\r\n  static get contextForward () { return 0 }\r\n  static get contextBackward () { return 0 }\r\n  static get direction () { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"LANG_DIR_RTL\"] }\r\n  static get baseUnit () { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"LANG_UNIT_WORD\"] }\r\n\r\n  static get typeFeatures () {\r\n    if (!typeFeaturesInitialized) { this.initTypeFeatures() }\r\n    return typeFeatures\r\n  }\r\n\r\n  static initTypeFeatures () {\r\n    for (const featureName of this.featureNames) {\r\n      typeFeatures.set(featureName, this.getFeature(featureName))\r\n    }\r\n    typeFeaturesInitialized = true\r\n  }\r\n\r\n  /**\r\n   * Check to see if this language tool can produce an inflection table display\r\n   * for the current node\r\n   */\r\n  static canInflect (node) {\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * @override LanguageModel#alternateWordEncodings\r\n   */\r\n  static alternateWordEncodings (word, preceding = null, following = null, encoding = null) {\r\n    // tanwin (& tatweel) - drop FATHATAN, DAMMATAN, KASRATAN, TATWEEL\r\n    let tanwin = word.replace(/[\\u{064B}\\u{064C}\\u{064D}\\u{0640}]/ug, '')\r\n    // hamzas - replace ALEF WITH MADDA ABOVE, ALEF WITH HAMZA ABOVE/BELOW with ALEF\r\n    let hamza = tanwin.replace(/[\\u{0622}\\u{0623}\\u{0625}]/ug, '\\u{0627}')\r\n    // harakat - drop FATHA, DAMMA, KASRA, SUPERSCRIPT ALEF, ALEF WASLA\r\n    let harakat = hamza.replace(/[\\u{064E}\\u{064F}\\u{0650}\\u{0670}\\u{0671}]/ug, '')\r\n    // shadda\r\n    let shadda = harakat.replace(/\\u{0651}/ug, '')\r\n    // sukun\r\n    let sukun = shadda.replace(/\\u{0652}/ug, '')\r\n    // alef\r\n    let alef = sukun.replace(/\\u{0627}/ug, '')\r\n    let alternates = new Map([\r\n      ['tanwin', tanwin],\r\n      ['hamza', hamza],\r\n      ['harakat', harakat],\r\n      ['shadda', shadda],\r\n      ['sukun', sukun],\r\n      ['alef', alef]\r\n    ])\r\n    if (encoding !== null && alternates.has(encoding)) {\r\n      return [alternates.get(encoding)]\r\n    } else {\r\n      return Array.from(alternates.values())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a list of valid puncutation for this language\r\n   * @returns {String} a string containing valid puncutation symbols\r\n   */\r\n  static getPunctuation () {\r\n    return \".,;:!?'\\\"(){}\\\\[\\\\]<>/\\\\\\u00A0\\u2010\\u2011\\u2012\\u2013\\u2014\\u2015\\u2018\\u2019\\u201C\\u201D\\u0387\\u00B7\\n\\r\"\r\n  }\r\n\r\n  /**\r\n   * Aggregate inflections for display according to language model characteristics\r\n   */\r\n  static aggregateInflectionsForDisplay (inflections) {\r\n    // TODO at some point we might want to be able to check the provider in here\r\n    // because this really only applies to the specifics of the Aramorph parser\r\n    let aggregated = []\r\n    let aggregates = { [_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"POFS_NOUN\"]]: [], [_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"POFS_ADJECTIVE\"]]: [], [_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"POFS_NOUN_PROPER\"]]: [] }\r\n    for (let infl of inflections) {\r\n      if (infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.morph] && infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.morph].value.match(/ADJ[uaiNK]/)) {\r\n        aggregates[_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"POFS_ADJECTIVE\"]].push(infl)\r\n      } else if (infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.morph] && infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.morph].value.match(/NOUN[uaiNK]/)) {\r\n        aggregates[_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"POFS_NOUN\"]].push(infl)\r\n      } else if (infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.morph] && infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.morph].value.match(/NOUN_PROP[uaiNK]/)) {\r\n        aggregates[_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"POFS_NOUN_PROPER\"]].push(infl)\r\n      } else {\r\n        // we are also going to keep the examples out of the display for now\r\n        infl.example = null\r\n        aggregated.push(infl)\r\n      }\r\n    }\r\n    for (let type of Object.keys(aggregates)) {\r\n      let base = aggregated.filter((i) => i[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.part].value === type)\r\n      if (base.length !== 1) {\r\n        // if we don't have the base form then we don't really know what to do here\r\n        // so just put the inflection back in the ones available for display\r\n        aggregated.push(...aggregates[type])\r\n      }\r\n      // we may decide we want to keep the extra suffix and morph information\r\n      // from the alternate inflections but for now we just will drop it from\r\n      // the inflections that are displayed\r\n    }\r\n    return aggregated\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./constants.js\":\r\n/*!**********************!*\\\r\n  !*** ./constants.js ***!\r\n  \\**********************/\r\n/*! exports provided: LANG_UNIT_WORD, LANG_UNIT_CHAR, LANG_DIR_LTR, LANG_DIR_RTL, LANG_UNDEFINED, LANG_LATIN, LANG_GREEK, LANG_ARABIC, LANG_PERSIAN, STR_LANG_CODE_UNDEFINED, STR_LANG_CODE_LAT, STR_LANG_CODE_LA, STR_LANG_CODE_GRC, STR_LANG_CODE_ARA, STR_LANG_CODE_AR, STR_LANG_CODE_FAS, STR_LANG_CODE_PER, STR_LANG_CODE_FA_IR, STR_LANG_CODE_FA, POFS_ADJECTIVE, POFS_ADVERB, POFS_ADVERBIAL, POFS_ARTICLE, POFS_CONJUNCTION, POFS_EXCLAMATION, POFS_INTERJECTION, POFS_NOUN, POFS_NOUN_PROPER, POFS_NUMERAL, POFS_PARTICLE, POFS_PREFIX, POFS_PREPOSITION, POFS_PRONOUN, POFS_SUFFIX, POFS_SUPINE, POFS_VERB, POFS_VERB_PARTICIPLE, GEND_MASCULINE, GEND_FEMININE, GEND_NEUTER, GEND_COMMON, GEND_ANIMATE, GEND_INANIMATE, GEND_PERSONAL_MASCULINE, GEND_ANIMATE_MASCULINE, GEND_INANIMATE_MASCULINE, COMP_POSITIVE, COMP_COMPARITIVE, COMP_SUPERLATIVE, CASE_ABESSIVE, CASE_ABLATIVE, CASE_ABSOLUTIVE, CASE_ACCUSATIVE, CASE_ADDIRECTIVE, CASE_ADELATIVE, CASE_ADESSIVE, CASE_ADVERBIAL, CASE_ALLATIVE, CASE_ANTESSIVE, CASE_APUDESSIVE, CASE_AVERSIVE, CASE_BENEFACTIVE, CASE_CARITIVE, CASE_CAUSAL, CASE_CAUSAL_FINAL, CASE_COMITATIVE, CASE_DATIVE, CASE_DELATIVE, CASE_DIRECT, CASE_DISTRIBUTIVE, CASE_DISTRIBUTIVE_TEMPORAL, CASE_ELATIVE, CASE_ERGATIVE, CASE_ESSIVE, CASE_ESSIVE_FORMAL, CASE_ESSIVE_MODAL, CASE_EQUATIVE, CASE_EVITATIVE, CASE_EXESSIVE, CASE_FINAL, CASE_FORMAL, CASE_GENITIVE, CASE_ILLATIVE, CASE_INELATIVE, CASE_INESSIVE, CASE_INSTRUCTIVE, CASE_INSTRUMENTAL, CASE_INSTRUMENTAL_COMITATIVE, CASE_INTRANSITIVE, CASE_LATIVE, CASE_LOCATIVE, CASE_MODAL, CASE_MULTIPLICATIVE, CASE_NOMINATIVE, CASE_PARTITIVE, CASE_PEGATIVE, CASE_PERLATIVE, CASE_POSSESSIVE, CASE_POSTELATIVE, CASE_POSTDIRECTIVE, CASE_POSTESSIVE, CASE_POSTPOSITIONAL, CASE_PREPOSITIONAL, CASE_PRIVATIVE, CASE_PROLATIVE, CASE_PROSECUTIVE, CASE_PROXIMATIVE, CASE_SEPARATIVE, CASE_SOCIATIVE, CASE_SUBDIRECTIVE, CASE_SUBESSIVE, CASE_SUBELATIVE, CASE_SUBLATIVE, CASE_SUPERDIRECTIVE, CASE_SUPERESSIVE, CASE_SUPERLATIVE, CASE_SUPPRESSIVE, CASE_TEMPORAL, CASE_TERMINATIVE, CASE_TRANSLATIVE, CASE_VIALIS, CASE_VOCATIVE, MOOD_ADMIRATIVE, MOOD_COHORTATIVE, MOOD_CONDITIONAL, MOOD_DECLARATIVE, MOOD_DUBITATIVE, MOOD_ENERGETIC, MOOD_EVENTIVE, MOOD_GENERIC, MOOD_GERUNDIVE, MOOD_HYPOTHETICAL, MOOD_IMPERATIVE, MOOD_INDICATIVE, MOOD_INFERENTIAL, MOOD_INFINITIVE, MOOD_INTERROGATIVE, MOOD_JUSSIVE, MOOD_NEGATIVE, MOOD_OPTATIVE, MOOD_PARTICIPLE, MOOD_PRESUMPTIVE, MOOD_RENARRATIVE, MOOD_SUBJUNCTIVE, MOOD_SUPINE, NUM_SINGULAR, NUM_PLURAL, NUM_DUAL, NUM_TRIAL, NUM_PAUCAL, NUM_SINGULATIVE, NUM_COLLECTIVE, NUM_DISTRIBUTIVE_PLURAL, NRL_CARDINAL, NRL_ORDINAL, NRL_DISTRIBUTIVE, NURL_NUMERAL_ADVERB, ORD_1ST, ORD_2ND, ORD_3RD, ORD_4TH, ORD_5TH, ORD_6TH, ORD_7TH, ORD_8TH, ORD_9TH, TENSE_AORIST, TENSE_FUTURE, TENSE_FUTURE_PERFECT, TENSE_IMPERFECT, TENSE_PAST_ABSOLUTE, TENSE_PERFECT, TENSE_PLUPERFECT, TENSE_PRESENT, VKIND_TO_BE, VKIND_COMPOUNDS_OF_TO_BE, VKIND_TAKING_ABLATIVE, VKIND_TAKING_DATIVE, VKIND_TAKING_GENITIVE, VKIND_TRANSITIVE, VKIND_INTRANSITIVE, VKIND_IMPERSONAL, VKIND_DEPONENT, VKIND_SEMIDEPONENT, VKIND_PERFECT_DEFINITE, VOICE_ACTIVE, VOICE_PASSIVE, VOICE_MEDIOPASSIVE, VOICE_IMPERSONAL_PASSIVE, VOICE_MIDDLE, VOICE_ANTIPASSIVE, VOICE_REFLEXIVE, VOICE_RECIPROCAL, VOICE_CAUSATIVE, VOICE_ADJUTATIVE, VOICE_APPLICATIVE, VOICE_CIRCUMSTANTIAL, VOICE_DEPONENT, TYPE_IRREGULAR, TYPE_REGULAR, CLASS_PERSONAL, CLASS_REFLEXIVE, CLASS_POSSESSIVE, CLASS_DEMONSTRATIVE, CLASS_RELATIVE, CLASS_INTERROGATIVE, CLASS_GENERAL_RELATIVE, CLASS_INDEFINITE, CLASS_INTENSIVE, CLASS_RECIPROCAL */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_UNIT_WORD\", function() { return LANG_UNIT_WORD; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_UNIT_CHAR\", function() { return LANG_UNIT_CHAR; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_DIR_LTR\", function() { return LANG_DIR_LTR; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_DIR_RTL\", function() { return LANG_DIR_RTL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_UNDEFINED\", function() { return LANG_UNDEFINED; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_LATIN\", function() { return LANG_LATIN; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_GREEK\", function() { return LANG_GREEK; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_ARABIC\", function() { return LANG_ARABIC; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANG_PERSIAN\", function() { return LANG_PERSIAN; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_UNDEFINED\", function() { return STR_LANG_CODE_UNDEFINED; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_LAT\", function() { return STR_LANG_CODE_LAT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_LA\", function() { return STR_LANG_CODE_LA; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_GRC\", function() { return STR_LANG_CODE_GRC; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_ARA\", function() { return STR_LANG_CODE_ARA; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_AR\", function() { return STR_LANG_CODE_AR; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_FAS\", function() { return STR_LANG_CODE_FAS; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_PER\", function() { return STR_LANG_CODE_PER; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_FA_IR\", function() { return STR_LANG_CODE_FA_IR; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STR_LANG_CODE_FA\", function() { return STR_LANG_CODE_FA; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_ADJECTIVE\", function() { return POFS_ADJECTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_ADVERB\", function() { return POFS_ADVERB; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_ADVERBIAL\", function() { return POFS_ADVERBIAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_ARTICLE\", function() { return POFS_ARTICLE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_CONJUNCTION\", function() { return POFS_CONJUNCTION; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_EXCLAMATION\", function() { return POFS_EXCLAMATION; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_INTERJECTION\", function() { return POFS_INTERJECTION; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_NOUN\", function() { return POFS_NOUN; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_NOUN_PROPER\", function() { return POFS_NOUN_PROPER; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_NUMERAL\", function() { return POFS_NUMERAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_PARTICLE\", function() { return POFS_PARTICLE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_PREFIX\", function() { return POFS_PREFIX; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_PREPOSITION\", function() { return POFS_PREPOSITION; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_PRONOUN\", function() { return POFS_PRONOUN; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_SUFFIX\", function() { return POFS_SUFFIX; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_SUPINE\", function() { return POFS_SUPINE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_VERB\", function() { return POFS_VERB; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POFS_VERB_PARTICIPLE\", function() { return POFS_VERB_PARTICIPLE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_MASCULINE\", function() { return GEND_MASCULINE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_FEMININE\", function() { return GEND_FEMININE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_NEUTER\", function() { return GEND_NEUTER; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_COMMON\", function() { return GEND_COMMON; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_ANIMATE\", function() { return GEND_ANIMATE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_INANIMATE\", function() { return GEND_INANIMATE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_PERSONAL_MASCULINE\", function() { return GEND_PERSONAL_MASCULINE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_ANIMATE_MASCULINE\", function() { return GEND_ANIMATE_MASCULINE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GEND_INANIMATE_MASCULINE\", function() { return GEND_INANIMATE_MASCULINE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMP_POSITIVE\", function() { return COMP_POSITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMP_COMPARITIVE\", function() { return COMP_COMPARITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMP_SUPERLATIVE\", function() { return COMP_SUPERLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ABESSIVE\", function() { return CASE_ABESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ABLATIVE\", function() { return CASE_ABLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ABSOLUTIVE\", function() { return CASE_ABSOLUTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ACCUSATIVE\", function() { return CASE_ACCUSATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ADDIRECTIVE\", function() { return CASE_ADDIRECTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ADELATIVE\", function() { return CASE_ADELATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ADESSIVE\", function() { return CASE_ADESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ADVERBIAL\", function() { return CASE_ADVERBIAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ALLATIVE\", function() { return CASE_ALLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ANTESSIVE\", function() { return CASE_ANTESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_APUDESSIVE\", function() { return CASE_APUDESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_AVERSIVE\", function() { return CASE_AVERSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_BENEFACTIVE\", function() { return CASE_BENEFACTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_CARITIVE\", function() { return CASE_CARITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_CAUSAL\", function() { return CASE_CAUSAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_CAUSAL_FINAL\", function() { return CASE_CAUSAL_FINAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_COMITATIVE\", function() { return CASE_COMITATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_DATIVE\", function() { return CASE_DATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_DELATIVE\", function() { return CASE_DELATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_DIRECT\", function() { return CASE_DIRECT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_DISTRIBUTIVE\", function() { return CASE_DISTRIBUTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_DISTRIBUTIVE_TEMPORAL\", function() { return CASE_DISTRIBUTIVE_TEMPORAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ELATIVE\", function() { return CASE_ELATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ERGATIVE\", function() { return CASE_ERGATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ESSIVE\", function() { return CASE_ESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ESSIVE_FORMAL\", function() { return CASE_ESSIVE_FORMAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ESSIVE_MODAL\", function() { return CASE_ESSIVE_MODAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_EQUATIVE\", function() { return CASE_EQUATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_EVITATIVE\", function() { return CASE_EVITATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_EXESSIVE\", function() { return CASE_EXESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_FINAL\", function() { return CASE_FINAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_FORMAL\", function() { return CASE_FORMAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_GENITIVE\", function() { return CASE_GENITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_ILLATIVE\", function() { return CASE_ILLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_INELATIVE\", function() { return CASE_INELATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_INESSIVE\", function() { return CASE_INESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_INSTRUCTIVE\", function() { return CASE_INSTRUCTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_INSTRUMENTAL\", function() { return CASE_INSTRUMENTAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_INSTRUMENTAL_COMITATIVE\", function() { return CASE_INSTRUMENTAL_COMITATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_INTRANSITIVE\", function() { return CASE_INTRANSITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_LATIVE\", function() { return CASE_LATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_LOCATIVE\", function() { return CASE_LOCATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_MODAL\", function() { return CASE_MODAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_MULTIPLICATIVE\", function() { return CASE_MULTIPLICATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_NOMINATIVE\", function() { return CASE_NOMINATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_PARTITIVE\", function() { return CASE_PARTITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_PEGATIVE\", function() { return CASE_PEGATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_PERLATIVE\", function() { return CASE_PERLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_POSSESSIVE\", function() { return CASE_POSSESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_POSTELATIVE\", function() { return CASE_POSTELATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_POSTDIRECTIVE\", function() { return CASE_POSTDIRECTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_POSTESSIVE\", function() { return CASE_POSTESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_POSTPOSITIONAL\", function() { return CASE_POSTPOSITIONAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_PREPOSITIONAL\", function() { return CASE_PREPOSITIONAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_PRIVATIVE\", function() { return CASE_PRIVATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_PROLATIVE\", function() { return CASE_PROLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_PROSECUTIVE\", function() { return CASE_PROSECUTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_PROXIMATIVE\", function() { return CASE_PROXIMATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SEPARATIVE\", function() { return CASE_SEPARATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SOCIATIVE\", function() { return CASE_SOCIATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SUBDIRECTIVE\", function() { return CASE_SUBDIRECTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SUBESSIVE\", function() { return CASE_SUBESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SUBELATIVE\", function() { return CASE_SUBELATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SUBLATIVE\", function() { return CASE_SUBLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SUPERDIRECTIVE\", function() { return CASE_SUPERDIRECTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SUPERESSIVE\", function() { return CASE_SUPERESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SUPERLATIVE\", function() { return CASE_SUPERLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_SUPPRESSIVE\", function() { return CASE_SUPPRESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_TEMPORAL\", function() { return CASE_TEMPORAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_TERMINATIVE\", function() { return CASE_TERMINATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_TRANSLATIVE\", function() { return CASE_TRANSLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_VIALIS\", function() { return CASE_VIALIS; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CASE_VOCATIVE\", function() { return CASE_VOCATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_ADMIRATIVE\", function() { return MOOD_ADMIRATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_COHORTATIVE\", function() { return MOOD_COHORTATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_CONDITIONAL\", function() { return MOOD_CONDITIONAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_DECLARATIVE\", function() { return MOOD_DECLARATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_DUBITATIVE\", function() { return MOOD_DUBITATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_ENERGETIC\", function() { return MOOD_ENERGETIC; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_EVENTIVE\", function() { return MOOD_EVENTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_GENERIC\", function() { return MOOD_GENERIC; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_GERUNDIVE\", function() { return MOOD_GERUNDIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_HYPOTHETICAL\", function() { return MOOD_HYPOTHETICAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_IMPERATIVE\", function() { return MOOD_IMPERATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_INDICATIVE\", function() { return MOOD_INDICATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_INFERENTIAL\", function() { return MOOD_INFERENTIAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_INFINITIVE\", function() { return MOOD_INFINITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_INTERROGATIVE\", function() { return MOOD_INTERROGATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_JUSSIVE\", function() { return MOOD_JUSSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_NEGATIVE\", function() { return MOOD_NEGATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_OPTATIVE\", function() { return MOOD_OPTATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_PARTICIPLE\", function() { return MOOD_PARTICIPLE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_PRESUMPTIVE\", function() { return MOOD_PRESUMPTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_RENARRATIVE\", function() { return MOOD_RENARRATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_SUBJUNCTIVE\", function() { return MOOD_SUBJUNCTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MOOD_SUPINE\", function() { return MOOD_SUPINE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_SINGULAR\", function() { return NUM_SINGULAR; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_PLURAL\", function() { return NUM_PLURAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_DUAL\", function() { return NUM_DUAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_TRIAL\", function() { return NUM_TRIAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_PAUCAL\", function() { return NUM_PAUCAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_SINGULATIVE\", function() { return NUM_SINGULATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_COLLECTIVE\", function() { return NUM_COLLECTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUM_DISTRIBUTIVE_PLURAL\", function() { return NUM_DISTRIBUTIVE_PLURAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NRL_CARDINAL\", function() { return NRL_CARDINAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NRL_ORDINAL\", function() { return NRL_ORDINAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NRL_DISTRIBUTIVE\", function() { return NRL_DISTRIBUTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NURL_NUMERAL_ADVERB\", function() { return NURL_NUMERAL_ADVERB; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_1ST\", function() { return ORD_1ST; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_2ND\", function() { return ORD_2ND; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_3RD\", function() { return ORD_3RD; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_4TH\", function() { return ORD_4TH; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_5TH\", function() { return ORD_5TH; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_6TH\", function() { return ORD_6TH; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_7TH\", function() { return ORD_7TH; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_8TH\", function() { return ORD_8TH; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ORD_9TH\", function() { return ORD_9TH; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TENSE_AORIST\", function() { return TENSE_AORIST; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TENSE_FUTURE\", function() { return TENSE_FUTURE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TENSE_FUTURE_PERFECT\", function() { return TENSE_FUTURE_PERFECT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TENSE_IMPERFECT\", function() { return TENSE_IMPERFECT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TENSE_PAST_ABSOLUTE\", function() { return TENSE_PAST_ABSOLUTE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TENSE_PERFECT\", function() { return TENSE_PERFECT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TENSE_PLUPERFECT\", function() { return TENSE_PLUPERFECT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TENSE_PRESENT\", function() { return TENSE_PRESENT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_TO_BE\", function() { return VKIND_TO_BE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_COMPOUNDS_OF_TO_BE\", function() { return VKIND_COMPOUNDS_OF_TO_BE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_TAKING_ABLATIVE\", function() { return VKIND_TAKING_ABLATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_TAKING_DATIVE\", function() { return VKIND_TAKING_DATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_TAKING_GENITIVE\", function() { return VKIND_TAKING_GENITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_TRANSITIVE\", function() { return VKIND_TRANSITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_INTRANSITIVE\", function() { return VKIND_INTRANSITIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_IMPERSONAL\", function() { return VKIND_IMPERSONAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_DEPONENT\", function() { return VKIND_DEPONENT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_SEMIDEPONENT\", function() { return VKIND_SEMIDEPONENT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VKIND_PERFECT_DEFINITE\", function() { return VKIND_PERFECT_DEFINITE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_ACTIVE\", function() { return VOICE_ACTIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_PASSIVE\", function() { return VOICE_PASSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_MEDIOPASSIVE\", function() { return VOICE_MEDIOPASSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_IMPERSONAL_PASSIVE\", function() { return VOICE_IMPERSONAL_PASSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_MIDDLE\", function() { return VOICE_MIDDLE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_ANTIPASSIVE\", function() { return VOICE_ANTIPASSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_REFLEXIVE\", function() { return VOICE_REFLEXIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_RECIPROCAL\", function() { return VOICE_RECIPROCAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_CAUSATIVE\", function() { return VOICE_CAUSATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_ADJUTATIVE\", function() { return VOICE_ADJUTATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_APPLICATIVE\", function() { return VOICE_APPLICATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_CIRCUMSTANTIAL\", function() { return VOICE_CIRCUMSTANTIAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VOICE_DEPONENT\", function() { return VOICE_DEPONENT; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPE_IRREGULAR\", function() { return TYPE_IRREGULAR; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPE_REGULAR\", function() { return TYPE_REGULAR; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_PERSONAL\", function() { return CLASS_PERSONAL; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_REFLEXIVE\", function() { return CLASS_REFLEXIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_POSSESSIVE\", function() { return CLASS_POSSESSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_DEMONSTRATIVE\", function() { return CLASS_DEMONSTRATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_RELATIVE\", function() { return CLASS_RELATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_INTERROGATIVE\", function() { return CLASS_INTERROGATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_GENERAL_RELATIVE\", function() { return CLASS_GENERAL_RELATIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_INDEFINITE\", function() { return CLASS_INDEFINITE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_INTENSIVE\", function() { return CLASS_INTENSIVE; });\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CLASS_RECIPROCAL\", function() { return CLASS_RECIPROCAL; });\r\n/* eslint-disable no-unused-vars */\r\nconst LANG_UNIT_WORD = Symbol('word')\r\nconst LANG_UNIT_CHAR = Symbol('char')\r\nconst LANG_DIR_LTR = Symbol('ltr')\r\nconst LANG_DIR_RTL = Symbol('rtl')\r\nconst LANG_UNDEFINED = Symbol('undefined')\r\nconst LANG_LATIN = Symbol('latin')\r\nconst LANG_GREEK = Symbol('greek')\r\nconst LANG_ARABIC = Symbol('arabic')\r\nconst LANG_PERSIAN = Symbol('persian')\r\nconst STR_LANG_CODE_UNDEFINED = 'undefined'\r\nconst STR_LANG_CODE_LAT = 'lat'\r\nconst STR_LANG_CODE_LA = 'la'\r\nconst STR_LANG_CODE_GRC = 'grc'\r\nconst STR_LANG_CODE_ARA = 'ara'\r\nconst STR_LANG_CODE_AR = 'ar'\r\nconst STR_LANG_CODE_FAS = 'fas'\r\nconst STR_LANG_CODE_PER = 'per'\r\nconst STR_LANG_CODE_FA_IR = 'fa-IR'\r\nconst STR_LANG_CODE_FA = 'fa'\r\n// parts of speech\r\nconst POFS_ADJECTIVE = 'adjective'\r\nconst POFS_ADVERB = 'adverb'\r\nconst POFS_ADVERBIAL = 'adverbial'\r\nconst POFS_ARTICLE = 'article'\r\nconst POFS_CONJUNCTION = 'conjunction'\r\nconst POFS_EXCLAMATION = 'exclamation'\r\nconst POFS_INTERJECTION = 'interjection'\r\nconst POFS_NOUN = 'noun'\r\nconst POFS_NOUN_PROPER = 'proper noun'\r\nconst POFS_NUMERAL = 'numeral'\r\nconst POFS_PARTICLE = 'particle'\r\nconst POFS_PREFIX = 'prefix'\r\nconst POFS_PREPOSITION = 'preposition'\r\nconst POFS_PRONOUN = 'pronoun'\r\nconst POFS_SUFFIX = 'suffix'\r\nconst POFS_SUPINE = 'supine'\r\nconst POFS_VERB = 'verb'\r\nconst POFS_VERB_PARTICIPLE = 'verb participle'\r\n// gender\r\nconst GEND_MASCULINE = 'masculine'\r\nconst GEND_FEMININE = 'feminine'\r\nconst GEND_NEUTER = 'neuter'\r\nconst GEND_COMMON = 'common'\r\nconst GEND_ANIMATE = 'animate'\r\nconst GEND_INANIMATE = 'inanimate'\r\n// Polish gender types\r\nconst GEND_PERSONAL_MASCULINE = 'personal masculine'\r\nconst GEND_ANIMATE_MASCULINE = 'animate masculine'\r\nconst GEND_INANIMATE_MASCULINE = 'inanimate masculine'\r\n// comparative\r\nconst COMP_POSITIVE = 'positive'\r\nconst COMP_COMPARITIVE = 'comparative'\r\nconst COMP_SUPERLATIVE = 'superlative'\r\n// case\r\nconst CASE_ABESSIVE = 'abessive'\r\nconst CASE_ABLATIVE = 'ablative'\r\nconst CASE_ABSOLUTIVE = 'absolutive'\r\nconst CASE_ACCUSATIVE = 'accusative'\r\nconst CASE_ADDIRECTIVE = 'addirective'\r\nconst CASE_ADELATIVE = 'adelative'\r\nconst CASE_ADESSIVE = 'adessive'\r\nconst CASE_ADVERBIAL = 'adverbial'\r\nconst CASE_ALLATIVE = 'allative'\r\nconst CASE_ANTESSIVE = 'antessive'\r\nconst CASE_APUDESSIVE = 'apudessive'\r\nconst CASE_AVERSIVE = 'aversive'\r\nconst CASE_BENEFACTIVE = 'benefactive'\r\nconst CASE_CARITIVE = 'caritive'\r\nconst CASE_CAUSAL = 'causal'\r\nconst CASE_CAUSAL_FINAL = 'causal-final'\r\nconst CASE_COMITATIVE = 'comitative'\r\nconst CASE_DATIVE = 'dative'\r\nconst CASE_DELATIVE = 'delative'\r\nconst CASE_DIRECT = 'direct'\r\nconst CASE_DISTRIBUTIVE = 'distributive'\r\nconst CASE_DISTRIBUTIVE_TEMPORAL = 'distributive-temporal'\r\nconst CASE_ELATIVE = 'elative'\r\nconst CASE_ERGATIVE = 'ergative'\r\nconst CASE_ESSIVE = 'essive'\r\nconst CASE_ESSIVE_FORMAL = 'essive-formal'\r\nconst CASE_ESSIVE_MODAL = 'essive-modal'\r\nconst CASE_EQUATIVE = 'equative'\r\nconst CASE_EVITATIVE = 'evitative'\r\nconst CASE_EXESSIVE = 'exessive'\r\nconst CASE_FINAL = 'final'\r\nconst CASE_FORMAL = 'formal'\r\nconst CASE_GENITIVE = 'genitive'\r\nconst CASE_ILLATIVE = 'illative'\r\nconst CASE_INELATIVE = 'inelative'\r\nconst CASE_INESSIVE = 'inessive'\r\nconst CASE_INSTRUCTIVE = 'instructive'\r\nconst CASE_INSTRUMENTAL = 'instrumental'\r\nconst CASE_INSTRUMENTAL_COMITATIVE = 'instrumental-comitative'\r\nconst CASE_INTRANSITIVE = 'intransitive'\r\nconst CASE_LATIVE = 'lative'\r\nconst CASE_LOCATIVE = 'locative'\r\nconst CASE_MODAL = 'modal'\r\nconst CASE_MULTIPLICATIVE = 'multiplicative'\r\nconst CASE_NOMINATIVE = 'nominative'\r\nconst CASE_PARTITIVE = 'partitive'\r\nconst CASE_PEGATIVE = 'pegative'\r\nconst CASE_PERLATIVE = 'perlative'\r\nconst CASE_POSSESSIVE = 'possessive'\r\nconst CASE_POSTELATIVE = 'postelative'\r\nconst CASE_POSTDIRECTIVE = 'postdirective'\r\nconst CASE_POSTESSIVE = 'postessive'\r\nconst CASE_POSTPOSITIONAL = 'postpositional'\r\nconst CASE_PREPOSITIONAL = 'prepositional'\r\nconst CASE_PRIVATIVE = 'privative'\r\nconst CASE_PROLATIVE = 'prolative'\r\nconst CASE_PROSECUTIVE = 'prosecutive'\r\nconst CASE_PROXIMATIVE = 'proximative'\r\nconst CASE_SEPARATIVE = 'separative'\r\nconst CASE_SOCIATIVE = 'sociative'\r\nconst CASE_SUBDIRECTIVE = 'subdirective'\r\nconst CASE_SUBESSIVE = 'subessive'\r\nconst CASE_SUBELATIVE = 'subelative'\r\nconst CASE_SUBLATIVE = 'sublative'\r\nconst CASE_SUPERDIRECTIVE = 'superdirective'\r\nconst CASE_SUPERESSIVE = 'superessive'\r\nconst CASE_SUPERLATIVE = 'superlative'\r\nconst CASE_SUPPRESSIVE = 'suppressive'\r\nconst CASE_TEMPORAL = 'temporal'\r\nconst CASE_TERMINATIVE = 'terminative'\r\nconst CASE_TRANSLATIVE = 'translative'\r\nconst CASE_VIALIS = 'vialis'\r\nconst CASE_VOCATIVE = 'vocative'\r\nconst MOOD_ADMIRATIVE = 'admirative'\r\nconst MOOD_COHORTATIVE = 'cohortative'\r\nconst MOOD_CONDITIONAL = 'conditional'\r\nconst MOOD_DECLARATIVE = 'declarative'\r\nconst MOOD_DUBITATIVE = 'dubitative'\r\nconst MOOD_ENERGETIC = 'energetic'\r\nconst MOOD_EVENTIVE = 'eventive'\r\nconst MOOD_GENERIC = 'generic'\r\nconst MOOD_GERUNDIVE = 'gerundive'\r\nconst MOOD_HYPOTHETICAL = 'hypothetical'\r\nconst MOOD_IMPERATIVE = 'imperative'\r\nconst MOOD_INDICATIVE = 'indicative'\r\nconst MOOD_INFERENTIAL = 'inferential'\r\nconst MOOD_INFINITIVE = 'infinitive'\r\nconst MOOD_INTERROGATIVE = 'interrogative'\r\nconst MOOD_JUSSIVE = 'jussive'\r\nconst MOOD_NEGATIVE = 'negative'\r\nconst MOOD_OPTATIVE = 'optative'\r\nconst MOOD_PARTICIPLE = 'participle'\r\nconst MOOD_PRESUMPTIVE = 'presumptive'\r\nconst MOOD_RENARRATIVE = 'renarrative'\r\nconst MOOD_SUBJUNCTIVE = 'subjunctive'\r\nconst MOOD_SUPINE = 'supine'\r\nconst NUM_SINGULAR = 'singular'\r\nconst NUM_PLURAL = 'plural'\r\nconst NUM_DUAL = 'dual'\r\nconst NUM_TRIAL = 'trial'\r\nconst NUM_PAUCAL = 'paucal'\r\nconst NUM_SINGULATIVE = 'singulative'\r\nconst NUM_COLLECTIVE = 'collective'\r\nconst NUM_DISTRIBUTIVE_PLURAL = 'distributive plural'\r\nconst NRL_CARDINAL = 'cardinal'\r\nconst NRL_ORDINAL = 'ordinal'\r\nconst NRL_DISTRIBUTIVE = 'distributive'\r\nconst NURL_NUMERAL_ADVERB = 'numeral adverb'\r\nconst ORD_1ST = '1st'\r\nconst ORD_2ND = '2nd'\r\nconst ORD_3RD = '3rd'\r\nconst ORD_4TH = '4th'\r\nconst ORD_5TH = '5th'\r\nconst ORD_6TH = '6th'\r\nconst ORD_7TH = '7th'\r\nconst ORD_8TH = '8th'\r\nconst ORD_9TH = '9th'\r\nconst TENSE_AORIST = 'aorist'\r\nconst TENSE_FUTURE = 'future'\r\nconst TENSE_FUTURE_PERFECT = 'future perfect'\r\nconst TENSE_IMPERFECT = 'imperfect'\r\nconst TENSE_PAST_ABSOLUTE = 'past absolute'\r\nconst TENSE_PERFECT = 'perfect'\r\nconst TENSE_PLUPERFECT = 'pluperfect'\r\nconst TENSE_PRESENT = 'present'\r\nconst VKIND_TO_BE = 'to be'\r\nconst VKIND_COMPOUNDS_OF_TO_BE = 'compounds of to be'\r\nconst VKIND_TAKING_ABLATIVE = 'taking ablative'\r\nconst VKIND_TAKING_DATIVE = 'taking dative'\r\nconst VKIND_TAKING_GENITIVE = 'taking genitive'\r\nconst VKIND_TRANSITIVE = 'transitive'\r\nconst VKIND_INTRANSITIVE = 'intransitive'\r\nconst VKIND_IMPERSONAL = 'impersonal'\r\nconst VKIND_DEPONENT = 'deponent'\r\nconst VKIND_SEMIDEPONENT = 'semideponent'\r\nconst VKIND_PERFECT_DEFINITE = 'perfect definite'\r\nconst VOICE_ACTIVE = 'active'\r\nconst VOICE_PASSIVE = 'passive'\r\nconst VOICE_MEDIOPASSIVE = 'mediopassive'\r\nconst VOICE_IMPERSONAL_PASSIVE = 'impersonal passive'\r\nconst VOICE_MIDDLE = 'middle'\r\nconst VOICE_ANTIPASSIVE = 'antipassive'\r\nconst VOICE_REFLEXIVE = 'reflexive'\r\nconst VOICE_RECIPROCAL = 'reciprocal'\r\nconst VOICE_CAUSATIVE = 'causative'\r\nconst VOICE_ADJUTATIVE = 'adjutative'\r\nconst VOICE_APPLICATIVE = 'applicative'\r\nconst VOICE_CIRCUMSTANTIAL = 'circumstantial'\r\nconst VOICE_DEPONENT = 'deponent'\r\nconst TYPE_IRREGULAR = 'irregular'\r\nconst TYPE_REGULAR = 'regular'\r\n// Classes\r\nconst CLASS_PERSONAL = 'personal'\r\nconst CLASS_REFLEXIVE = 'reflexive'\r\nconst CLASS_POSSESSIVE = 'possessive'\r\nconst CLASS_DEMONSTRATIVE = 'demonstrative'\r\nconst CLASS_RELATIVE = 'relative'\r\nconst CLASS_INTERROGATIVE = 'interrogative'\r\nconst CLASS_GENERAL_RELATIVE = 'general relative'\r\nconst CLASS_INDEFINITE = 'indefinite'\r\nconst CLASS_INTENSIVE = 'intensive'\r\nconst CLASS_RECIPROCAL = 'reciprocal'\r\n/* eslit-enable no-unused-vars */\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./definition-set.js\":\r\n/*!***************************!*\\\r\n  !*** ./definition-set.js ***!\r\n  \\***************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DefinitionSet; });\r\n/* harmony import */ var _definition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./definition */ \"./definition.js\");\r\n\r\n\r\nclass DefinitionSet {\r\n  constructor (lemmaWord, languageID) {\r\n    this.lemmaWord = lemmaWord\r\n    this.languageID = languageID\r\n\r\n    this.shortDefs = []\r\n    this.fullDefs = []\r\n  }\r\n\r\n  /**\r\n   * A function that is used to instantiate a DefinitionSet object from a JSON object.\r\n   * @param {Object} jsonObject - A JSON object representing DefinitionSet data.\r\n   * @return {DefinitionSet} A DefinitionSet object populated with data from JSON object.\r\n   */\r\n  static readObject (jsonObject) {\r\n    let definitionSet = new DefinitionSet(jsonObject.lemmaWord, jsonObject.languageID)\r\n\r\n    for (let shortDef of jsonObject.shortDefs) {\r\n      definitionSet.shortDefs.push(_definition__WEBPACK_IMPORTED_MODULE_0__[\"default\"].readObject(shortDef))\r\n    }\r\n    for (let fullDef of jsonObject.fullDefs) {\r\n      definitionSet.fullDefs.push(_definition__WEBPACK_IMPORTED_MODULE_0__[\"default\"].readObject(fullDef))\r\n    }\r\n\r\n    return definitionSet\r\n  }\r\n\r\n  /**\r\n   * Check to see if the DefinitionSet is empty\r\n   * @return {boolean} true if empty false if there is at least one definition\r\n   */\r\n  isEmpty () {\r\n    return this.shortDefs.length === 0 && this.fullDefs.length === 0\r\n  }\r\n\r\n  /**\r\n   * Appends one or more definitions to a list of short definitions.\r\n   * @param {Definition | Definition[]} definitions - One or more definition objects to add.\r\n   * @return {Definition[]} A list of short definitions this object has.\r\n   */\r\n  appendShortDefs (definitions) {\r\n    // TODO: check for duplicates?\r\n    if (definitions) {\r\n      if (!Array.isArray(definitions)) { definitions = [definitions] }\r\n      this.shortDefs = this.shortDefs.concat(definitions)\r\n    }\r\n    return this.shortDefs\r\n  }\r\n\r\n  /**\r\n   * clear accumulated short definitions\r\n   */\r\n  clearShortDefs () {\r\n    this.shortDefs = []\r\n  }\r\n\r\n  /**\r\n   * Appends one or more definitions to a list of full definitions.\r\n   * @param {Definition | Definition[]} definitions - One or more definition objects to add.\r\n   * @return {Definition[]} A list of full definitions this object has.\r\n   */\r\n  appendFullDefs (definitions) {\r\n    // TODO: check for duplicates?\r\n    if (definitions) {\r\n      if (!Array.isArray(definitions)) { definitions = [definitions] }\r\n      this.fullDefs = this.fullDefs.concat(definitions)\r\n    }\r\n    return this.fullDefs\r\n  }\r\n\r\n  /**\r\n   * clear accumulated full definitions\r\n   */\r\n  clearFullDefs () {\r\n    this.fullDefs = []\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./definition.js\":\r\n/*!***********************!*\\\r\n  !*** ./definition.js ***!\r\n  \\***********************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\nclass Definition {\r\n  constructor (text, language, format, lemmaText) {\r\n    this.text = text\r\n    this.language = language\r\n    this.format = format\r\n    this.lemmaText = lemmaText\r\n  }\r\n\r\n  static readObject (jsonObject) {\r\n    return new Definition(jsonObject.text, jsonObject.language, jsonObject.format, jsonObject.lemmaText)\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Definition);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./driver.js\":\r\n/*!*******************!*\\\r\n  !*** ./driver.js ***!\r\n  \\*******************/\r\n/*! exports provided: Constants, Definition, DefinitionSet, Feature, GrmFeature, FeatureType, FeatureList, FeatureImporter, Inflection, LanguageModelFactory, Homonym, Lexeme, Lemma, LatinLanguageModel, GreekLanguageModel, ArabicLanguageModel, PersianLanguageModel, ResourceProvider, Translation */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"./constants.js\");\r\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"Constants\", function() { return _constants_js__WEBPACK_IMPORTED_MODULE_0__; });\r\n/* harmony import */ var _definition_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./definition.js */ \"./definition.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Definition\", function() { return _definition_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\r\n\r\n/* harmony import */ var _definition_set__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./definition-set */ \"./definition-set.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DefinitionSet\", function() { return _definition_set__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\r\n\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Feature\", function() { return _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\r\n\r\n/* harmony import */ var _grm_feature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./grm-feature.js */ \"./grm-feature.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GrmFeature\", function() { return _grm_feature_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\r\n\r\n/* harmony import */ var _feature_type_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./feature_type.js */ \"./feature_type.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FeatureType\", function() { return _feature_type_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\r\n\r\n/* harmony import */ var _feature_list_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./feature_list.js */ \"./feature_list.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FeatureList\", function() { return _feature_list_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\r\n\r\n/* harmony import */ var _feature_importer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./feature_importer.js */ \"./feature_importer.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FeatureImporter\", function() { return _feature_importer_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\r\n\r\n/* harmony import */ var _language_model_factory_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./language_model_factory.js */ \"./language_model_factory.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LanguageModelFactory\", function() { return _language_model_factory_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\r\n\r\n/* harmony import */ var _homonym_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./homonym.js */ \"./homonym.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Homonym\", function() { return _homonym_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; });\r\n\r\n/* harmony import */ var _lexeme_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lexeme.js */ \"./lexeme.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Lexeme\", function() { return _lexeme_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\r\n\r\n/* harmony import */ var _lemma_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lemma.js */ \"./lemma.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Lemma\", function() { return _lemma_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]; });\r\n\r\n/* harmony import */ var _inflection_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./inflection.js */ \"./inflection.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Inflection\", function() { return _inflection_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]; });\r\n\r\n/* harmony import */ var _latin_language_model_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./latin_language_model.js */ \"./latin_language_model.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LatinLanguageModel\", function() { return _latin_language_model_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]; });\r\n\r\n/* harmony import */ var _greek_language_model_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./greek_language_model.js */ \"./greek_language_model.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GreekLanguageModel\", function() { return _greek_language_model_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]; });\r\n\r\n/* harmony import */ var _arabic_language_model_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./arabic_language_model.js */ \"./arabic_language_model.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ArabicLanguageModel\", function() { return _arabic_language_model_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]; });\r\n\r\n/* harmony import */ var _persian_language_model_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./persian_language_model.js */ \"./persian_language_model.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PersianLanguageModel\", function() { return _persian_language_model_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"]; });\r\n\r\n/* harmony import */ var _resource_provider_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./resource_provider.js */ \"./resource_provider.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ResourceProvider\", function() { return _resource_provider_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]; });\r\n\r\n/* harmony import */ var _translation_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./translation.js */ \"./translation.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Translation\", function() { return _translation_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"]; });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./feature.js\":\r\n/*!********************!*\\\r\n  !*** ./feature.js ***!\r\n  \\********************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Feature; });\r\n/* harmony import */ var _language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model_factory.js */ \"./language_model_factory.js\");\r\n/* harmony import */ var _feature_importer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature_importer.js */ \"./feature_importer.js\");\r\n/* harmony import */ var _i18n_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./i18n.js */ \"./i18n.js\");\r\n\r\n\r\n\r\n\r\n/**\r\n * A grammatical feature object, that can replace both Feature and FeatureType objects.\r\n */\r\nclass Feature {\r\n  /**\r\n   *\r\n   * @param {string} type - A type of the feature, allowed values are specified in 'type' getter.\r\n   * @param {string | string[] | string[][]} data - Single or multiple values, in different combinations.\r\n   *\r\n   * If a single value with no sort order is provided, data format will be:\r\n   *  value\r\n   *  This value will be assigned a default sort order.\r\n   *\r\n   * If a single value with sort order is provided, data format will be:\r\n   *  [[value, sortOrder]]\r\n   *\r\n   * If multiple values without sort order are provided, data format will be:\r\n   *  [value1, value2, value3, ...]\r\n   * Items will be assigned a sort order according to their order in an array, starting from one.\r\n   *\r\n   * If multiple values with sort order are provided, data format will be:\r\n   *  [[value1, sortOrder1], [value2, sortOrder2], [value3, sortOrder3], ...]\r\n   * If a sort order is omitted anywhere, it will be set to a default sort order.\r\n   *\r\n   * Each value of a feature has its `sortOrder` property. This value is used to soft values of a feature\r\n   * between themselves. Feature object has a `sortOrder` property of its own, too. It is used\r\n   * to compare two Feature objects between themselves.\r\n   *\r\n   * @param {symbol} languageID - A language ID of a feature\r\n   * @param {number} sortOrder - A sort order of a feature when multiple features are compared.\r\n   * @param allowedValues - If feature has a restricted set of allowed values, here will be a list of those\r\n   * values. An order of those values can define a sort order.\r\n   */\r\n  constructor (type, data, languageID, sortOrder = 1, allowedValues = []) {\r\n    if (!Feature.isAllowedType(type)) {\r\n      throw new Error('Features of \"' + type + '\" type are not supported.')\r\n    }\r\n    if (!data) {\r\n      throw new Error('Feature should have a non-empty value(s).')\r\n    }\r\n    if (!languageID) {\r\n      throw new Error('No language ID is provided')\r\n    }\r\n\r\n    this.type = type\r\n    this.languageID = languageID\r\n    this.sortOrder = sortOrder\r\n    this.allowedValues = allowedValues\r\n\r\n    // `_data` is an array\r\n    this._data = Feature.dataValuesFromInput(data)\r\n    this.sort()\r\n  }\r\n\r\n  static dataValuesFromInput (data) {\r\n    let normalized\r\n    if (!Array.isArray(data)) {\r\n      // Single value with no sort order\r\n      normalized = [[data, this.defaultSortOrder]]\r\n    } else if (!Array.isArray(data[0])) {\r\n      // Multiple values without any sort order, default sort order will be used\r\n      // we reverse because sortOrder is numeric descending (i.e. 2 is before 1)\r\n      normalized = data.map((v, i) => [v, data.length - i])\r\n    } else {\r\n      // Value has all the data, including a sort order\r\n      normalized = data\r\n    }\r\n    return normalized.map(d => { return { value: d[0], sortOrder: Number.parseInt(d[1]) } })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param featureData\r\n   */\r\n  static newFromFtr (featureData) {\r\n\r\n  }\r\n\r\n  static get types () {\r\n    return {\r\n      /**\r\n       * @deprecated : Use `fullForm` where appropriate instead\r\n       */\r\n      word: 'word',\r\n      fullForm: 'full form',\r\n      hdwd: 'headword',\r\n      part: 'part of speech', // Part of speech\r\n      number: 'number',\r\n      'case': 'case',\r\n      grmCase: 'case', // A synonym of `case`\r\n      declension: 'declension',\r\n      gender: 'gender',\r\n      type: 'type',\r\n      'class': 'class',\r\n      grmClass: 'class', // A synonym of `class`\r\n      conjugation: 'conjugation',\r\n      comparison: 'comparison',\r\n      tense: 'tense',\r\n      voice: 'voice',\r\n      mood: 'mood',\r\n      person: 'person',\r\n      frequency: 'frequency', // How frequent this word is\r\n      meaning: 'meaning', // Meaning of a word\r\n      source: 'source', // Source of word definition\r\n      footnote: 'footnote', // A footnote for a word's ending\r\n      dialect: 'dialect', // a dialect identifier\r\n      note: 'note', // a general note\r\n      pronunciation: 'pronunciation',\r\n      age: 'age',\r\n      area: 'area',\r\n      geo: 'geo', // geographical data\r\n      kind: 'kind', // verb kind information\r\n      derivtype: 'derivtype',\r\n      stemtype: 'stemtype',\r\n      morph: 'morph', // general morphological information\r\n      var: 'var' // variance?\r\n    }\r\n  }\r\n\r\n  static isAllowedType (value) {\r\n    return Object.values(this.types).includes(`${value}`)\r\n  }\r\n\r\n  static get defaultSortOrder () {\r\n    return 1\r\n  }\r\n\r\n  static get joinSeparator () {\r\n    return ' '\r\n  }\r\n\r\n  static get defaultImporterName () {\r\n    return 'default'\r\n  }\r\n\r\n  /**\r\n   * Test to see if this feature allows unrestricted values.\r\n   * @returns {boolean} true if unrestricted false if not.\r\n   */\r\n  get allowsUnrestrictedValues () {\r\n    /*\r\n    If `allowedValues` array is empty then there are no value restrictions\r\n     */\r\n    return this.allowedValues.length === 0\r\n  }\r\n\r\n  /**\r\n   * Defines a sort order of feature values. Values are sorted according to their sort order\r\n   * (a number starting from one). If several values have the same sort order, they will be\r\n   * sorted alphabetically according to their values.\r\n   * Sort order is deterministic.\r\n   */\r\n  sort () {\r\n    this._data.sort((a, b) => a.sortOrder !== b.sortOrder ? b.sortOrder - a.sortOrder : a.value.localeCompare(b.value))\r\n  }\r\n\r\n  /**\r\n   * Compares a feature's values to another feature's values for sorting\r\n   * @param {Feature} otherFeature the feature to compare this feature's values to\r\n   * @return {integer} >=1 if this feature should be sorted first, 0 if they are equal and -1 if this feature should be sorted second\r\n   */\r\n  compareTo (otherFeature) {\r\n    // the data values are sorted upon construction and insertion so we only should need to look at the first values\r\n    // feature sortOrders are descending (i.e. 5 sorts higher than 1)\r\n    return otherFeature._data[0].sortOrder - this._data[0].sortOrder\r\n  }\r\n\r\n  get items () {\r\n    return this._data\r\n  }\r\n\r\n  /**\r\n   * Returns a single value string. If feature has a single value, this value will be returned.\r\n   * If it has multiple values, those values will be concatenated with a default separator and\r\n   * returned in a single string. Values composing this string are sorted according\r\n   * to each value's sort order.\r\n   * @return {string} A single value string.\r\n   */\r\n  get value () {\r\n    return this.values.join(this.constructor.joinSeparator)\r\n  }\r\n\r\n  /**\r\n   * Returns an array of string values of a feature, sorted according to each item's sort order.\r\n   * If a feature contains a single feature, an array with one value will be returned.\r\n   * @return {string[]} An array of string values.\r\n   */\r\n  get values () {\r\n    return this._data.map(v => v.value)\r\n  }\r\n\r\n  /**\r\n   * Retrieves a value object by name. Can be used to update a value object directly.\r\n   * @param {string} featureVale - A feature value of an object to retrieve.\r\n   */\r\n  getValue (featureVale) {\r\n    return this._data.find(v => v.value === featureVale)\r\n  }\r\n\r\n  /**\r\n   * Returns a number of feature values.\r\n   * @retrun {number] A quantity of feature values\r\n   */\r\n  get valQty () {\r\n    return this._data.length\r\n  }\r\n\r\n  get isEmpty () {\r\n    return this.valQty === 0\r\n  }\r\n\r\n  get isSingle () {\r\n    return this.valQty === 1\r\n  }\r\n\r\n  get isMultiple () {\r\n    return this.valQty > 1\r\n  }\r\n\r\n  /**\r\n   * A string representation of a feature.\r\n   * @return {string}\r\n   */\r\n  toString () {\r\n    return this.value\r\n  }\r\n\r\n  /**\r\n   * Examines the feature for a specific value.\r\n   * @param {string} value\r\n   * @returns {boolean} true if the value is included in the feature's values.\r\n   */\r\n  hasValue (value) {\r\n    return this.values.includes(value)\r\n  }\r\n\r\n  /**\r\n   * Checks if this feature has all value from an array.\r\n   * @param {string[]} values - An array of values to check for.\r\n   * @returns {boolean} true if the value is included in the feature's values.\r\n   */\r\n  hasValues (values) {\r\n    let hasValues = true\r\n    for (let value of values) {\r\n      hasValues = hasValues && this.hasValue(value)\r\n    }\r\n    return hasValues\r\n  }\r\n\r\n  /**\r\n   * Checks if this feature has some value from an array.\r\n   * @param {string[]} values - An array of values to check for.\r\n   * @returns {boolean} true if the value is included in the feature's values.\r\n   */\r\n  hasSomeValues (values) {\r\n    let hasValues = false\r\n    for (let value of values) {\r\n      hasValues = hasValues || this.hasValue(value)\r\n    }\r\n    return hasValues\r\n  }\r\n\r\n  get valuesUnrestricted () {\r\n    return this.allowedValues.length === 0\r\n  }\r\n\r\n  /**\r\n   * Two features are considered fully equal if they are of the same type, have the same language,\r\n   * and the same set of feature values in the same order.\r\n   * @param {Feature} feature - A GrmFtr object this feature should be compared with.\r\n   * @return {boolean} True if features are equal, false otherwise.\r\n   */\r\n  isEqual (feature) {\r\n    return this.type === feature.type &&\r\n      _language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compareLanguages(this.languageID, feature.languageID) &&\r\n      this.value === feature.value\r\n  }\r\n\r\n  /**\r\n   * Adds a single new value to the existing feature object.\r\n   * This function is chainable.\r\n   * @param {string} value - A feature value.\r\n   * @param {number} sortOrder - A sort order.\r\n   * @return {Feature} - Self reference for chaining.\r\n   */\r\n  addValue (value, sortOrder = this.constructor.defaultSortOrder) {\r\n    if (!this.hasValue(value)) {\r\n      this._data.push({\r\n        value: value,\r\n        sortOrder: sortOrder\r\n      })\r\n      this.sort() // Resort an array to place an inserted value to the proper place\r\n    } else {\r\n      console.warn(`Value \"${value}\" already exists. If you want to change it, use \"getValue\" to access it directly.`)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Adds multiple new values to the existing feature object.\r\n   * This function is chainable.\r\n   * @param {string | string[] | string[][]} data - Single or multiple values, in different combinations.\r\n   * @return {Feature} - Self reference for chaining.\r\n   */\r\n  addValues (data) {\r\n    let normalizedData = this.constructor.dataValuesFromInput(data)\r\n    let values = normalizedData.map(v => v.value)\r\n    if (!this.hasSomeValues(values)) {\r\n      this._data = this._data.concat(normalizedData)\r\n      this.sort() // Resort an array to place an inserted value to the proper place\r\n    } else {\r\n      console.warn(`One or several values from \"${values}\" already exist. If you want to change it, use \"getValue\" to access a value directly.`)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Removes a single value from the existing feature object.\r\n   * @param value\r\n   */\r\n  removeValue (value) {\r\n    // TODO: Do we need it?\r\n    console.warn(`This feature is not implemented yet`)\r\n  }\r\n\r\n  /**\r\n   * Creates a new single value Feature object of the same type and same language,\r\n   * but with a different feature value.\r\n   * This can be used when one feature defines a type and it is necessary\r\n   * to create other items of the same type.\r\n   * @param {string} value - A value of a feature.\r\n   * @param {number} sortOrder.\r\n   * @return {Feature} A new Ftr object.\r\n   */\r\n  createFeature (value, sortOrder = this.constructor.defaultSortOrder) {\r\n    // TODO: Add a check of if the value exists in a source Feature object\r\n    return new Feature(this.type, [[value, sortOrder]], this.languageID, this.sortOrder, this.allowedValues)\r\n  }\r\n\r\n  /**\r\n   * Creates a multiple value Feature object of the same type and same language,\r\n   * but with a different feature values.\r\n   * @param {string | string[] | string[][]} data - Single or multiple values, in different combinations,\r\n   * formatted according to rules described in a Ftr constructor.\r\n   * @return {Feature} A new Ftr object.\r\n   */\r\n  createFeatures (data) {\r\n    return new Feature(this.type, data, this.languageID, this.sortOrder, this.allowedValues)\r\n  }\r\n\r\n  /**\r\n   * Create a copy of the feature object.\r\n   */\r\n  getCopy () {\r\n    let values = this._data.map(item => [item.value, item.sortOrder])\r\n    return new Feature(this.type, values, this.languageID, this.sortOrder, this.allowedValues.slice())\r\n  }\r\n\r\n  /**\r\n   * A locale-specific abbreviation for a feature's values.\r\n   * @return {string[]}\r\n   */\r\n  toLocaleStringAbbr (lang = 'en') {\r\n    return this.values.map(v => _i18n_js__WEBPACK_IMPORTED_MODULE_2__[\"i18n\"][lang][v] ? _i18n_js__WEBPACK_IMPORTED_MODULE_2__[\"i18n\"][lang][v].abbr : v).join(this.constructor.joinSeparator)\r\n  }\r\n\r\n  /**\r\n   * Adds an importer to the internal list.\r\n   * @param {string} name - A name of an importer.\r\n   * @param {FeatureImporter} importer - A `FeatureImporter` object.\r\n   */\r\n  addImporter (importer = new _feature_importer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](), name = this.constructor.defaultImporterName) {\r\n    if (!this.importers) {\r\n      this.importers = new Map()\r\n    }\r\n    this.importers.set(name, importer)\r\n    return importer\r\n  }\r\n\r\n  getImporter (name = this.constructor.defaultImporterName) {\r\n    if (!this.importers || !this.importers.has(name)) {\r\n      throw new Error(`Importer \"${name}\" does not exist`)\r\n    }\r\n    return this.importers.get(name)\r\n  }\r\n\r\n  /**\r\n   * Adds feature values from the imported values.\r\n   * @param {string | string[]} foreignData - A single value or an array of values from a third-party source.\r\n   * @param {string} name - A name of an importer.\r\n   * @return {Feature} - A new Ftr object.\r\n   */\r\n  addFromImporter (foreignData, name = this.constructor.defaultImporterName) {\r\n    if (!this.importers || !this.importers.has(name)) {\r\n      throw new Error(`Importer \"${name}\" does not exist`)\r\n    }\r\n    const importer = this.importers.get(name)\r\n    foreignData = this.constructor.dataValuesFromInput(foreignData)\r\n    this._data.push(...foreignData.map(fv => { return { value: importer.get(fv.value), sortOrder: fv.sortOrder } }))\r\n    this.sort()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Creates a new feature of the same type and with the same language from the imported values.\r\n   * @param {string | string[]} foreignData - A single value or an array of values from a third-party source.\r\n   * @param {string} name - A name of an importer.\r\n   * @return {Feature} - A new Ftr object.\r\n   */\r\n  createFromImporter (foreignData, name = this.constructor.defaultImporterName) {\r\n    if (!this.importers || !this.importers.has(name)) {\r\n      throw new Error(`Importer \"${name}\" does not exist`)\r\n    }\r\n    const importer = this.importers.get(name)\r\n    if (!Array.isArray(foreignData)) {\r\n      foreignData = [foreignData]\r\n    }\r\n    let values = foreignData.map(fv => importer.get(fv))\r\n    /*\r\n    Some values may be mapped into multiple values. For them an importer will return an array of values instead of a single value.\r\n    The values will be a multidimensional array that will require flattening.\r\n     */\r\n    values = values.reduce((acc, cv) => acc.concat(cv), [])\r\n    return new Feature(this.type, values, this.languageID, this.sortOrder, this.allowedValues)\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./feature_importer.js\":\r\n/*!*****************************!*\\\r\n  !*** ./feature_importer.js ***!\r\n  \\*****************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\nclass FeatureImporter {\r\n  /**\r\n   * @param defaults\r\n   * @param {boolean} returnUnknown - If true, and a source value is not found in the importer,\r\n   * a source value will be returned without any change (a passthrough). If false, an Error\r\n   * will be thrown for unknown source values.\r\n   * @return {FeatureImporter}\r\n   */\r\n  constructor (defaults = [], returnUnknown = false) {\r\n    this.hash = {}\r\n    for (let value of defaults) {\r\n      this.map(value, value)\r\n    }\r\n    this.returnUnknown = returnUnknown\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Sets mapping between external imported value and one or more library standard values. If an importedValue\r\n   * is already in a hash table, old libraryValue will be overwritten with the new one.\r\n   * @param {string} importedValue - External value\r\n   * @param {Object | Object[] | string | string[]} libraryValue - Library standard value\r\n   */\r\n  map (importedValue, libraryValue) {\r\n    if (!importedValue) {\r\n      throw new Error('Imported value should not be empty.')\r\n    }\r\n\r\n    if (!libraryValue) {\r\n      throw new Error('Library value should not be empty.')\r\n    }\r\n\r\n    this.hash[importedValue] = libraryValue\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Checks if value is in a map.\r\n   * @param {string} importedValue - A value to test.\r\n   * @returns {boolean} - Tru if value is in a map, false otherwise.\r\n   */\r\n  has (importedValue) {\r\n    return this.hash.hasOwnProperty(importedValue)\r\n  }\r\n\r\n  /**\r\n   * Returns one or more library standard values that match an external value\r\n   * @param {string} sourceValue - External value\r\n   * @returns {Object | string} One or more of library standard values\r\n   */\r\n  get (sourceValue) {\r\n    if (this.has(sourceValue)) {\r\n      return this.hash[sourceValue]\r\n    } else if (this.returnUnknown) {\r\n      return sourceValue\r\n    } else {\r\n      throw new Error('A value \"' + sourceValue + '\" is not found in the importer.')\r\n    }\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (FeatureImporter);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./feature_list.js\":\r\n/*!*************************!*\\\r\n  !*** ./feature_list.js ***!\r\n  \\*************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/**\r\n * A list of grammatical features that characterizes a language unit. Has some additional service methods,\r\n * compared with standard storage objects.\r\n */\r\nclass FeatureList {\r\n  /**\r\n   * Initializes a feature list.\r\n   * @param {Feature[]} features - Features that build the list (optional, can be set later).\r\n   */\r\n  constructor (features = []) {\r\n    this._features = []\r\n    this._types = {}\r\n    this.add(features)\r\n  }\r\n\r\n  add (features) {\r\n    if (!features || !Array.isArray(features)) {\r\n      throw new Error('Features must be defined and must come in an array.')\r\n    }\r\n\r\n    for (let feature of features) {\r\n      this._features.push(feature)\r\n      this._types[feature.type] = feature\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an array of grouping features.\r\n   * @returns {FeatureType[]} - An array of grouping features.\r\n   */\r\n  get items () {\r\n    return this._features\r\n  }\r\n\r\n  forEach (callback) {\r\n    this._features.forEach(callback)\r\n  }\r\n\r\n  /**\r\n   * Returns a feature of a particular type. If such feature does not exist in a list, returns undefined.\r\n   * @param {string} type - Feature type as defined in `types` object.\r\n   * @return {FeatureType | undefined} A feature if a particular type if contains it. Undefined otherwise.\r\n   */\r\n  ofType (type) {\r\n    if (this.hasType(type)) {\r\n      return this._types[type]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks whether a feature list has a feature of a specific type.\r\n   * @param {string} type - Feature type as defined in `types` object.\r\n   * @return {boolean} Whether a feature list has a feature of a particular type.\r\n   */\r\n  hasType (type) {\r\n    return this._types.hasOwnProperty(type)\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (FeatureList);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./feature_type.js\":\r\n/*!*************************!*\\\r\n  !*** ./feature_type.js ***!\r\n  \\*************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n/* harmony import */ var _feature_importer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature_importer.js */ \"./feature_importer.js\");\r\n/* harmony import */ var _language_model_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./language_model_factory */ \"./language_model_factory.js\");\r\n\r\n\r\n\r\n\r\n/**\r\n * @deprecated Use Feature instead\r\n * Definition class for a (grammatical) feature. Stores type information and (optionally) all possible values of the feature.\r\n * It serves as a feature generator. If list of possible values is provided, it can generate a Feature object\r\n * each time a property that corresponds to a feature value is accessed. If no list of possible values provided,\r\n * a Feature object can be generated with get(value) method.\r\n *\r\n * An order of values determines a default sort and grouping order. If two values should have the same order,\r\n * they should be grouped within an array: value1, [value2, value3], value4. Here 'value2' and 'value3' have\r\n * the same priority for sorting and grouping.\r\n */\r\nclass FeatureType {\r\n  // TODO: value checking\r\n  /**\r\n   * Creates and initializes a Feature Type object.\r\n   * @param {string} type - A type of the feature, allowed values are specified in 'types' object.\r\n   * @param {string[] | string[][]} values - A list of allowed values for this feature type.\r\n   * If an empty array is provided, there will be no\r\n   * allowed values as well as no ordering (can be used for items that do not need or have a simple order,\r\n   * such as footnotes).\r\n   * @param {String | Symbol} language - A language of a feature type.\r\n   */\r\n  constructor (type, values, language) {\r\n    if (!values || !Array.isArray(values)) {\r\n      throw new Error('Values should be an array (or an empty array) of values.')\r\n    }\r\n    if (!language) {\r\n      throw new Error('FeatureType constructor requires a language')\r\n    }\r\n\r\n    this.type = type\r\n    this.languageID = undefined\r\n    this.languageCode = undefined\r\n    ;({languageID: this.languageID, languageCode: this.languageCode} = _language_model_factory__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getLanguageAttrs(language))\r\n\r\n    /*\r\n     This is a sort order index for a grammatical feature values. It is determined by the order of values in\r\n     a 'values' array.\r\n     */\r\n    this._orderIndex = []\r\n    this._orderLookup = {}\r\n\r\n    for (const [index, value] of values.entries()) {\r\n      this._orderIndex.push(value)\r\n      if (Array.isArray(value)) {\r\n        for (let element of value) {\r\n          this[element] = new _feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.type, element, this.languageID)\r\n          this._orderLookup[element] = index\r\n        }\r\n      } else {\r\n        this[value] = new _feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.type, value, this.languageID)\r\n        this._orderLookup[value] = index\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is a compatibility function for legacy code.\r\n   * @return {String} A language code.\r\n   */\r\n  get language () {\r\n    console.warn(`Please use a \"languageID\" instead of a \"language\"`)\r\n    return this.languageCode\r\n  }\r\n\r\n  /**\r\n   * test to see if this FeatureType allows unrestricted values\r\n   * @returns {boolean} true if unrestricted false if not\r\n   */\r\n  hasUnrestrictedValue () {\r\n    return this.orderedValues.length === 1 && this.orderedValues[0] === FeatureType.UNRESTRICTED_VALUE\r\n  }\r\n\r\n  /**\r\n   * Return a Feature with an arbitrary value. This value would not be necessarily present among FeatureType values.\r\n   * This can be especially useful for features that do not set: a list of predefined values, such as footnotes.\r\n   * @param value\r\n   * @param {int} sortOrder\r\n   * @returns {Feature}\r\n   */\r\n  get (value, sortOrder = 1) {\r\n    if (value) {\r\n      return new _feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.type, [[value, sortOrder]], this.languageID)\r\n    } else {\r\n      throw new Error('A non-empty value should be provided.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string[][]} data - An array of value arrays as: [[value1, sortOrder1], [value2, sortOrder2]]\r\n   * @return {Feature}\r\n   */\r\n  getValues (data) {\r\n    return new _feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.type, data, this.languageID)\r\n  }\r\n\r\n  getFromImporter (importerName, value) {\r\n    let mapped\r\n    try {\r\n      mapped = this.importer[importerName].get(value)\r\n    } catch (e) {\r\n      // quietly catch not found and replace with default\r\n      mapped = this.get(value)\r\n    }\r\n    return mapped\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a new importer with a specific name. If an importer with this name already exists,\r\n   * an existing Importer object will be returned.\r\n   * @param {string} name - A name of an importer object\r\n   * @returns {Importer} A new or existing Importer object that matches a name provided\r\n   */\r\n  addImporter (name) {\r\n    if (!name) {\r\n      throw new Error('Importer should have a non-empty name.')\r\n    }\r\n    this.importer = this.importer || {}\r\n    this.importer[name] = this.importer[name] || new _feature_importer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\r\n    return this.importer[name]\r\n  }\r\n\r\n  /**\r\n   * Return copies of all feature values as Feature objects in a sorted array, according to feature type's sort order.\r\n   * For a similar function that returns strings instead of Feature objects see orderedValues().\r\n   * @returns {Feature[] | Feature[][]} Array of feature values sorted according to orderIndex.\r\n   * If particular feature contains multiple feature values (i.e. `masculine` and `feminine` values combined),\r\n   * an array of Feature objects will be returned instead of a single Feature object, as for single feature values.\r\n   */\r\n  get orderedFeatures () {\r\n    return this.orderedValues.map((value) => new _feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.type, value, this.languageID))\r\n  }\r\n\r\n  /**\r\n   * Return all feature values as strings in a sorted array, according to feature type's sort order.\r\n   * This is a main method that specifies a sort order of the feature type. orderedFeatures() relies\r\n   * on this method in providing a sorted array of feature values. If you want to create\r\n   * a custom sort order for a particular feature type that will depend on some options that are not type-related,\r\n   * create a wrapper around this function providing it with options arguments so it will be able to decide\r\n   * in what order those features will be based on those arguments.\r\n   * For a similar function that returns Feature objects instead of strings see orderedValues().\r\n   * @returns {string[]} Array of feature values sorted according to orderIndex.\r\n   * If particular feature contains multiple feature values (i.e. `masculine` and `feminine` values combined),\r\n   * an array of strings will be returned instead of a single strings, as for single feature values.\r\n   */\r\n  get orderedValues () {\r\n    return this._orderIndex\r\n  }\r\n\r\n  /**\r\n   * Returns a lookup table for type values as:\r\n   *  {value1: order1, value2: order2}, where order is a sort order of an item. If two items have the same sort order,\r\n   *  their order value will be the same.\r\n   * @returns {object}\r\n   */\r\n  get orderLookup () {\r\n    return this._orderLookup\r\n  }\r\n\r\n  /**\r\n   * Sets an order of grammatical feature values for a grammatical feature. Used mostly for sorting, filtering,\r\n   * and displaying.\r\n   *\r\n   * @param {Feature[] | Feature[][]} values - a list of grammatical features that specify their order for\r\n   * sorting and filtering. Some features can be grouped as [[genders.masculine, genders.feminine], LibLatin.genders.neuter].\r\n   * It means that genders.masculine and genders.feminine belong to the same group. They will have the same index\r\n   * and will be stored inside an _orderIndex as an array. genders.masculine and genders.feminine will be grouped together\r\n   * during filtering and will be in the same bin during sorting.\r\n   *\r\n   */\r\n  set order (values) {\r\n    if (!values || (Array.isArray(values) && values.length === 0)) {\r\n      throw new Error('A non-empty list of values should be provided.')\r\n    }\r\n\r\n    // If a single value is provided, convert it into an array\r\n    if (!Array.isArray(values)) {\r\n      values = [values]\r\n    }\r\n\r\n    for (let value of values) {\r\n      if (Array.isArray(value)) {\r\n        for (let element of value) {\r\n          if (!this.hasOwnProperty(element.value)) {\r\n            throw new Error('Trying to order an element with \"' + element.value + '\" value that is not stored in a \"' + this.type + '\" type.')\r\n          }\r\n\r\n          if (element.type !== this.type) {\r\n            throw new Error('Trying to order an element with type \"' + element.type + '\" that is different from \"' + this.type + '\".')\r\n          }\r\n\r\n          if (!_language_model_factory__WEBPACK_IMPORTED_MODULE_2__[\"default\"].compareLanguages(element.languageID, this.languageID)) {\r\n            throw new Error(`Trying to order an element with language \"${element.languageID.toString()}\" that is different from \"${this.languageID.toString()}\"`)\r\n          }\r\n        }\r\n      } else {\r\n        if (!this.hasOwnProperty(value.value)) {\r\n          throw new Error('Trying to order an element with \"' + value.value + '\" value that is not stored in a \"' + this.type + '\" type.')\r\n        }\r\n\r\n        if (value.type !== this.type) {\r\n          throw new Error('Trying to order an element with type \"' + value.type + '\" that is different from \"' + this.type + '\".')\r\n        }\r\n\r\n        if (!_language_model_factory__WEBPACK_IMPORTED_MODULE_2__[\"default\"].compareLanguages(value.languageID, this.languageID)) {\r\n          throw new Error(`Trying to order an element with language \"${value.languageID.toString()}\" that is different from \"${this.languageID.toString()}\"`)\r\n        }\r\n      }\r\n    }\r\n\r\n    // Erase whatever sort order was set previously\r\n    this._orderLookup = {}\r\n    this._orderIndex = []\r\n\r\n    // Define a new sort order\r\n    for (const [index, element] of values.entries()) {\r\n      if (Array.isArray(element)) {\r\n        // If it is an array, all values should have the same order\r\n        let elements = []\r\n        for (const subElement of element) {\r\n          this._orderLookup[subElement.value] = index\r\n          elements.push(subElement.value)\r\n        }\r\n        this._orderIndex[index] = elements\r\n      } else {\r\n        // If is a single value\r\n        this._orderLookup[element.value] = index\r\n        this._orderIndex[index] = element.value\r\n      }\r\n    }\r\n  }\r\n}\r\nFeatureType.UNRESTRICTED_VALUE = Symbol('unrestricted')\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (FeatureType);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./greek_language_model.js\":\r\n/*!*********************************!*\\\r\n  !*** ./greek_language_model.js ***!\r\n  \\*********************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GreekLanguageModel; });\r\n/* harmony import */ var _language_model_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model.js */ \"./language_model.js\");\r\n/* harmony import */ var _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language_model_factory.js */ \"./language_model_factory.js\");\r\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"./constants.js\");\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n\r\n\r\n\r\n\r\n\r\nlet typeFeatures = new Map()\r\nlet typeFeaturesInitialized = false\r\n/**\r\n * @class  LatinLanguageModel is the lass for Latin specific behavior\r\n */\r\nclass GreekLanguageModel extends _language_model_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  static get languageID () { return _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"LANG_GREEK\"] }\r\n  static get languageCode () { return _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STR_LANG_CODE_GRC\"] }\r\n  static get languageCodes () { return [_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STR_LANG_CODE_GRC\"]] }\r\n  static get contextForward () { return 0 }\r\n  static get contextBackward () { return 0 }\r\n  static get direction () { return _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"LANG_DIR_LTR\"] }\r\n  static get baseUnit () { return _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"LANG_UNIT_WORD\"] }\r\n\r\n  static get featureValues () {\r\n    /*\r\n    This could be a static variable, but then it will create a circular reference:\r\n    Feature -> LanguageModelFactory -> LanguageModel -> Feature\r\n     */\r\n    return new Map([\r\n      ..._language_model_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].featureValues,\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.grmClass,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_DEMONSTRATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_GENERAL_RELATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_INDEFINITE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_INTENSIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_INTERROGATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_PERSONAL\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_POSSESSIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_RECIPROCAL\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_REFLEXIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_RELATIVE\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.number,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"NUM_SINGULAR\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"NUM_PLURAL\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"NUM_DUAL\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.grmCase,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_NOMINATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_GENITIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_DATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_ACCUSATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_VOCATIVE\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.declension,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_1ST\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_2ND\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_3RD\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.tense,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_PRESENT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_IMPERFECT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_FUTURE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_PERFECT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_PLUPERFECT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_FUTURE_PERFECT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_AORIST\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.voice,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"VOICE_PASSIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"VOICE_ACTIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"VOICE_MEDIOPASSIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"VOICE_MIDDLE\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.mood,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_INDICATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_SUBJUNCTIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_OPTATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_IMPERATIVE\"]\r\n        ]\r\n      ],\r\n      [\r\n        // TODO full list of greek dialects\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.dialect,\r\n        [\r\n          'attic',\r\n          'epic',\r\n          'doric'\r\n        ]\r\n      ]\r\n    ])\r\n  }\r\n\r\n  static get typeFeatures () {\r\n    if (!typeFeaturesInitialized) { this.initTypeFeatures() }\r\n    return typeFeatures\r\n  }\r\n\r\n  static initTypeFeatures () {\r\n    for (const featureName of this.featureNames) {\r\n      typeFeatures.set(featureName, this.getFeature(featureName))\r\n    }\r\n    typeFeaturesInitialized = true\r\n  }\r\n\r\n  /**\r\n   * Check to see if this language tool can produce an inflection table display\r\n   * for the current node\r\n   */\r\n  static canInflect (node) {\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * @override LanguageModel#grammarFeatures\r\n   */\r\n  static grammarFeatures () {\r\n    // TODO this ideally might be grammar specific\r\n    return [_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.part, _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.grmCase, _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.mood, _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.declension, _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.tense, _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.voice]\r\n  }\r\n\r\n  /**\r\n   * Return a normalized version of a word which can be used to compare the word for equality\r\n   * @param {string} word the source word\r\n   * @returns {string} the normalized form of the word (default version just returns the same word,\r\n   *          override in language-specific subclass)\r\n   * @type string\r\n   */\r\n  static normalizeWord (word) {\r\n    // we normalize greek to NFC - Normalization Form Canonical Composition\r\n    if (word) {\r\n      return word.normalize('NFC')\r\n    } else {\r\n      return word\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override LanguageModel#alternateWordEncodings\r\n   */\r\n  static alternateWordEncodings (word, preceding = null, following = null, encoding = null) {\r\n    // the original alpheios code used the following normalizations\r\n    // 1. When looking up a lemma\r\n    //    stripped vowel length\r\n    //    stripped caps\r\n    //    then if failed, tried again with out these\r\n    // 2. when adding to a word list\r\n    //    precombined unicode (vowel length/diacritics preserved)\r\n    // 2. When looking up a verb in the verb paradigm tables\r\n    //    it set e_normalize to false, otherwise it was true...\r\n    // make sure it's normalized to NFC and in lower case\r\n    let normalized = GreekLanguageModel.normalizeWord(word).toLocaleLowerCase()\r\n    let strippedVowelLength = normalized.replace(\r\n      /[\\u{1FB0}\\u{1FB1}]/ug, '\\u{03B1}').replace(\r\n      /[\\u{1FB8}\\u{1FB9}]/ug, '\\u{0391}').replace(\r\n      /[\\u{1FD0}\\u{1FD1}]/ug, '\\u{03B9}').replace(\r\n      /[\\u{1FD8}\\u{1FD9}]/ug, '\\u{0399}').replace(\r\n      /[\\u{1FE0}\\u{1FE1}]/ug, '\\u{03C5}').replace(\r\n      /[\\u{1FE8}\\u{1FE9}]/ug, '\\u{03A5}').replace(\r\n      /[\\u{00AF}\\u{0304}\\u{0306}]/ug, '')\r\n    let strippedDiaeresis = normalized.replace(\r\n      /\\u{0390}/ug, '\\u{03AF}').replace(\r\n      /\\u{03AA}/ug, '\\u{0399}').replace(\r\n      /\\u{03AB}/ug, '\\u{03A5}').replace(\r\n      /\\u{03B0}/ug, '\\u{03CD}').replace(\r\n      /\\u{03CA}/ug, '\\u{03B9}').replace(\r\n      /\\u{03CB}/ug, '\\u{03C5}').replace(\r\n      /\\u{1FD2}/ug, '\\u{1F76}').replace(\r\n      /\\u{1FD3}/ug, '\\u{1F77}').replace(\r\n      /\\u{1FD7}/ug, '\\u{1FD6}').replace(\r\n      /\\u{1FE2}/ug, '\\u{1F7A}').replace(\r\n      /\\u{1FE3}/ug, '\\u{1F7B}').replace(\r\n      /\\u{1FE7}/ug, '\\u{1FE6}').replace(\r\n      /\\u{1FC1}/ug, '\\u{1FC0}').replace(\r\n      /\\u{1FED}/ug, '\\u{1FEF}').replace(\r\n      /\\u{1FEE}/ug, '\\u{1FFD}').replace(\r\n      /[\\u{00A8}\\u{0308}]/ug, '')\r\n    if (encoding === 'strippedDiaeresis') {\r\n      return [strippedDiaeresis]\r\n    } else {\r\n      return [strippedVowelLength]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a list of valid puncutation for this language\r\n   * @returns {String} a string containing valid puncutation symbols\r\n   */\r\n  static getPunctuation () {\r\n    return '.,;:!?\\'\"(){}\\\\[\\\\]<>/\\\\\\u00A0\\u2010\\u2011\\u2012\\u2013\\u2014\\u2015\\u2018\\u2019\\u201C\\u201D\\u0387\\u00B7\\n\\r'\r\n  }\r\n\r\n  /**\r\n   * Sets inflection grammar properties based on its characteristics\r\n   * @param {Inflection} inflection - An inflection object\r\n   * @return {Object} Inflection properties\r\n   */\r\n  static getInflectionConstraints (inflection) {\r\n    let constraints = {\r\n      fullFormBased: false,\r\n      suffixBased: false,\r\n      pronounClassRequired: false\r\n    }\r\n    let formBasedList = [_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"POFS_PRONOUN\"], _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"POFS_NUMERAL\"], _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"POFS_ARTICLE\"]]\r\n    if (inflection.hasOwnProperty(_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.part)) {\r\n      if (formBasedList.includes(inflection[_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.part].value)) {\r\n        constraints.fullFormBased = true\r\n      } else {\r\n        constraints.suffixBased = true\r\n      }\r\n    } else {\r\n      console.warn(`Unable to set grammar: part of speech data is missing or is incorrect`, inflection[_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.part])\r\n    }\r\n\r\n    constraints.pronounClassRequired =\r\n      _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compareLanguages(GreekLanguageModel.languageID, inflection.languageID) &&\r\n      inflection.hasOwnProperty(_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.part) &&\r\n      inflection[_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.part].value === _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"POFS_PRONOUN\"]\r\n\r\n    return constraints\r\n  }\r\n\r\n  /**\r\n   * Determines a class of a given word (pronoun) by finding a matching word entry(ies)\r\n   * in a pronoun source info (`forms`) and getting a single or multiple classes of those entries.\r\n   * Some morphological analyzers provide class information that is unreliable or do not\r\n   * provide class information at all. However, class information is essential in\r\n   * deciding in what table should pronouns be grouped. For this, we have to\r\n   * determine pronoun classes using this method.\r\n   * @param {Form[]} forms - An array of known forms of pronouns.\r\n   * @param {string} word - A word we need to find a matching class for.\r\n   * @param {boolean} normalize - Whether normalized forms of words shall be used for comparison.\r\n   * @return {Feature} Matching classes found within a Feature objects. If no matching classes found,\r\n   * returns undefined.\r\n   */\r\n  static getPronounClasses (forms, word, normalize = true) {\r\n    let matchingValues = new Set() // Will eliminate duplicated values\r\n    let matchingForms = forms.filter(\r\n      form => {\r\n        let match = false\r\n        if (form.value) {\r\n          match = normalize\r\n            ? GreekLanguageModel.normalizeWord(form.value) === GreekLanguageModel.normalizeWord(word)\r\n            : form.value === word\r\n        }\r\n        return match\r\n      }\r\n    )\r\n    for (const matchingForm of matchingForms) {\r\n      if (matchingForm.features.hasOwnProperty(_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.grmClass)) {\r\n        for (const value of matchingForm.features[_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.grmClass].values) {\r\n          matchingValues.add(value)\r\n        }\r\n      }\r\n    }\r\n    if (matchingValues.size > 0) {\r\n      return new _feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_feature_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].types.grmClass, Array.from(matchingValues), GreekLanguageModel.languageID)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./grm-feature.js\":\r\n/*!************************!*\\\r\n  !*** ./grm-feature.js ***!\r\n  \\************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model_factory.js */ \"./language_model_factory.js\");\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n/* harmony import */ var _i18n_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./i18n.js */ \"./i18n.js\");\r\n\r\n\r\n\r\n\r\n/**\r\n * Wrapper class for a (grammatical, usually) feature, such as part of speech or declension. Keeps both value and type information.\r\n */\r\nclass GrmFeature {\r\n  /**\r\n   * @deprecated Use Feature instead\r\n   * Initializes a Feature object\r\n   * @param {string | string[]} value - A single feature value or, if this feature could have multiple\r\n   * values, an array of values.\r\n   * Multiple values do not allow to use a sort order. Because of this, it's better to use\r\n   * array of multiple Feature objects with single value each instead of a single Feature object\r\n   * with multiple values.\r\n   * Multiple values are left for backward compatibility only. Please do not use them as they\r\n   * will be removed in the future.\r\n   * @param {string} type - A type of the feature, allowed values are specified in 'types' object.\r\n   * @param {string | symbol} language - A language of a feature, allowed values are specified in 'languages' object.\r\n   * @param {int} sortOrder - an integer used for sorting\r\n   */\r\n  constructor (value, type, language, sortOrder = 1) {\r\n    if (!GrmFeature.types.isAllowed(type)) {\r\n      throw new Error('Features of \"' + type + '\" type are not supported.')\r\n    }\r\n    if (!value) {\r\n      throw new Error('Feature should have a non-empty value.')\r\n    }\r\n    if (!type) {\r\n      throw new Error('Feature should have a non-empty type.')\r\n    }\r\n    if (!language) {\r\n      throw new Error('Feature constructor requires a language')\r\n    }\r\n    this.value = value\r\n    this.type = type\r\n    this.languageID = undefined\r\n    this.languageCode = undefined\r\n    ;({languageID: this.languageID, languageCode: this.languageCode} = _language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLanguageAttrs(language))\r\n    this.sortOrder = sortOrder\r\n  }\r\n\r\n  /**\r\n   * This is a compatibility function for legacy code.\r\n   * @return {String} A language code.\r\n   */\r\n  get language () {\r\n    console.warn(`Please use a \"languageID\" instead of a \"language\"`)\r\n    return this.languageCode\r\n  }\r\n\r\n  isEqual (feature) {\r\n    if (Array.isArray(feature.value)) {\r\n      // `feature` is a single object with multiple `value` properties. This feature will be sunset\r\n      // as it does not allow to use sort order on Feature objects.\r\n      if (!Array.isArray(this.value) || this.value.length !== feature.value.length) {\r\n        return false\r\n      }\r\n      let equal = this.type === feature.type && _language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compareLanguages(this.languageID, feature.languageID)\r\n      equal = equal && this.value.every(function (element, index) {\r\n        return element === feature.value[index]\r\n      })\r\n      return equal\r\n    } else {\r\n      return _language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compareLanguages(this.languageID, feature.languageID) && this.type === feature.type && this.value === feature.value\r\n    }\r\n  }\r\n\r\n  isSubsetof (features) {\r\n    if (!Array.isArray(features)) {\r\n      features = [features] // If `features` is a single value, convert it to an array (a more general case)\r\n    }\r\n    // `feature` is an array of feature objects with (possibly) each having a single feature value.\r\n    let languageID = features[0].languageID // Assume all Feature objects have the same language ID\r\n    let type = features[0].type // Assume all Feature objects have the same type\r\n    let values = features.map(f => f.value)\r\n    if (_language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compareLanguages(this.languageID, languageID) && this.type === type && values.includes(this.value)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * examine the feature for a specific value\r\n   * @param {string} value\r\n   * @returns {boolean} true if the value is included in the feature's values\r\n   */\r\n  hasValue (value) {\r\n    if (Array.isArray(this.value)) {\r\n      return this.value.includes(value)\r\n    } else {\r\n      return this.value === value\r\n    }\r\n  }\r\n\r\n  /**\r\n   * string representation of a feature\r\n   * @return {string}\r\n   */\r\n  toString () {\r\n    if (Array.isArray(this.value)) {\r\n      return this.value.join(',')\r\n    } else {\r\n      return this.value\r\n    }\r\n  }\r\n\r\n  /**\r\n   * a locale-specific abbreviation for a feature's values\r\n   * @return {string}\r\n   */\r\n  toLocaleStringAbbr (lang = 'en') {\r\n    if (Array.isArray(this.value)) {\r\n      return this.value.map((v) => this.toLocaleStringAbbr(v, lang))\r\n    } else {\r\n      return _i18n_js__WEBPACK_IMPORTED_MODULE_2__[\"i18n\"][lang][this.value].abbr\r\n    }\r\n  }\r\n\r\n  static toFeature (sourceFeature) {\r\n    if (Array.isArray(sourceFeature)) {\r\n      if (!(sourceFeature[0] instanceof _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\r\n        const type = sourceFeature[0].type\r\n        const languageID = sourceFeature[0].languageID\r\n        const values = sourceFeature.map(v => v.value)\r\n        return new _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](type, values, languageID)\r\n      }\r\n    } else {\r\n      if (!(sourceFeature instanceof _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\r\n        return new _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](sourceFeature.type, sourceFeature.value, sourceFeature.languageID)\r\n      }\r\n    }\r\n    return sourceFeature\r\n  }\r\n}\r\n// Should have no spaces in values in order to be used in HTML templates\r\nGrmFeature.types = {\r\n  word: 'word',\r\n  part: 'part of speech', // Part of speech\r\n  number: 'number',\r\n  'case': 'case',\r\n  grmCase: 'case', // A synonym of `case`\r\n  declension: 'declension',\r\n  gender: 'gender',\r\n  type: 'type',\r\n  'class': 'class',\r\n  grmClass: 'class', // A synonym of `class`\r\n  conjugation: 'conjugation',\r\n  comparison: 'comparison',\r\n  tense: 'tense',\r\n  voice: 'voice',\r\n  mood: 'mood',\r\n  person: 'person',\r\n  frequency: 'frequency', // How frequent this word is\r\n  meaning: 'meaning', // Meaning of a word\r\n  source: 'source', // Source of word definition\r\n  footnote: 'footnote', // A footnote for a word's ending\r\n  dialect: 'dialect', // a dialect identifier\r\n  note: 'note', // a general note\r\n  pronunciation: 'pronunciation',\r\n  age: 'age',\r\n  area: 'area',\r\n  geo: 'geo', // geographical data\r\n  kind: 'kind', // verb kind information\r\n  derivtype: 'derivtype',\r\n  stemtype: 'stemtype',\r\n  morph: 'morph', // general morphological information\r\n  var: 'var', // variance?\r\n  isAllowed (value) {\r\n    let v = `${value}`\r\n    return Object.values(this).includes(v)\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (GrmFeature);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./homonym.js\":\r\n/*!********************!*\\\r\n  !*** ./homonym.js ***!\r\n  \\********************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _language_model_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model_factory */ \"./language_model_factory.js\");\r\n/* harmony import */ var _lexeme_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lexeme.js */ \"./lexeme.js\");\r\n/* harmony import */ var _lemma_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lemma.js */ \"./lemma.js\");\r\n\r\n\r\n\r\n\r\nclass Homonym {\r\n  /**\r\n   * Initializes a Homonym object.\r\n   * @param {Lexeme[]} lexemes - An array of Lexeme objects.\r\n   * @param {string} form - the form which produces the homonyms\r\n   */\r\n  constructor (lexemes, form) {\r\n    if (!lexemes || (Array.isArray(lexemes) && lexemes.length === 0)) {\r\n      throw new Error('Lexemes data should not be empty.')\r\n    }\r\n\r\n    if (!Array.isArray(lexemes)) {\r\n      throw new Error('Lexeme data should be provided in an array.')\r\n    }\r\n\r\n    for (let lexeme of lexemes) {\r\n      if (!(lexeme instanceof _lexeme_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\r\n        throw new Error('All lexeme data should be of Lexeme object type.')\r\n      }\r\n    }\r\n\r\n    this.lexemes = lexemes\r\n    this.targetWord = form\r\n  }\r\n\r\n  /**\r\n   * Creates a simple form of inflection with one lexeme and zero or more inflections\r\n   * attached to it. The lexeme will have lemma whose `word` will be set to\r\n   * a homonym's target word.\r\n   * @param {string} word - A word that will populate homonym's `targetWord` prop and lemma `word` one.\r\n   * @param {symbol} languageID - A language identificator as defined in Constants.LANG_XXX.\r\n   * @param {Inflection[]} inflections - Zero or more inflection objects that will be attached to the lexeme\r\n   * @return {Homonym} A newly created homonym object.\r\n   */\r\n  static createSimpleForm (word, languageID, inflections = []) {\r\n    let lemma = new _lemma_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](word, languageID)\r\n    let lexeme = new _lexeme_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](lemma, inflections)\r\n    return new Homonym([lexeme], word)\r\n  }\r\n\r\n  static readObject (jsonObject) {\r\n    let lexemes = []\r\n    if (jsonObject.lexemes) {\r\n      for (let lexeme of jsonObject.lexemes) {\r\n        lexemes.push(_lexeme_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].readObject(lexeme))\r\n      }\r\n    }\r\n    let homonym = new Homonym(lexemes)\r\n    if (jsonObject.targetWord) {\r\n      homonym.targetWord = jsonObject.targetWord\r\n    }\r\n    return homonym\r\n  }\r\n\r\n  /**\r\n   * Returns a language code of a homonym (ISO 639-3).\r\n   * Homonym does not have a language property, only lemmas and inflections do. We assume that all lemmas\r\n   * and inflections within the same homonym will have the same language, and we can determine a language\r\n   * by using language property of the first lemma. We chan change this logic in the future if we'll need to.\r\n   * @returns {string} A language code, as defined in the `languages` object.\r\n   */\r\n  get language () {\r\n    console.warn(`Please use languageID instead`)\r\n    return _language_model_factory__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLanguageCodeFromId(this.languageID)\r\n  }\r\n\r\n  /**\r\n   * Returns a language ID of a homonym.\r\n   * Homonym does not have a languageID property, only lemmas and inflections do. We assume that all lemmas\r\n   * and inflections within the same homonym will have the same language, and we can determine a language\r\n   * by using languageID property of the first lemma. We chan change this logic in the future if we'll need to.\r\n   * @returns {Symbol} A language ID, as defined in the `LANG_` constants.\r\n   */\r\n  get languageID () {\r\n    if (this.lexemes && this.lexemes[0] && this.lexemes[0].lemma && this.lexemes[0].lemma.languageID) {\r\n      return this.lexemes[0].lemma.languageID\r\n    } else {\r\n      throw new Error('Homonym has not been initialized properly. Unable to obtain language ID information.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a list of all inflections within all lexemes of a homonym\r\n   * @return {Inflection[]} An array of inflections\r\n   */\r\n  get inflections () {\r\n    let inflections = []\r\n    for (const lexeme of this.lexemes) {\r\n      inflections = inflections.concat(lexeme.inflections)\r\n    }\r\n    return inflections\r\n  }\r\n\r\n  isDisambiguated () {\r\n    return this.lexemes.filter(l => l.disambiguated).length > 0\r\n  }\r\n\r\n  /**\r\n   * Disambiguate homymyn objects with another\r\n   * @param {Homonym} base the homonym to use to disambiguate\r\n   * @param {Homonym[]} disambiguators the homonyms to use to disambiguate\r\n   */\r\n  static disambiguate (base, disambiguators) {\r\n    if (disambiguators.length === 0) {\r\n      // nothing left to disamibugate with\r\n      return base\r\n    }\r\n    let disambiguator = disambiguators.shift()\r\n    let lexemes = []\r\n    let missedLexemes = []\r\n    // iterate through the lexemes in the disambiguator and try\r\n    // to disambiguate the existing lexemes with each\r\n    for (let otherLexeme of disambiguator.lexemes) {\r\n      let lexemeMatched = false\r\n      for (let lexeme of base.lexemes) {\r\n        let newLex = _lexeme_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].disambiguate(lexeme, otherLexeme)\r\n        lexemes.push(newLex)\r\n        if (newLex.disambiguated) {\r\n          lexemeMatched = true\r\n        }\r\n      }\r\n      // if we couldn't find a matching lexeme, add the disambigutor's lexemes\r\n      // to the list of lexemes for the new Homonym\r\n      if (!lexemeMatched) {\r\n        otherLexeme.disambiguated = true\r\n        missedLexemes.push(otherLexeme)\r\n      }\r\n    }\r\n    // create a new homonym with the disamibugated lexemes\r\n    let newHom = new Homonym([...lexemes, ...missedLexemes], base.targetWord)\r\n    return Homonym.disambiguate(newHom, disambiguators)\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Homonym);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./i18n.js\":\r\n/*!*****************!*\\\r\n  !*** ./i18n.js ***!\r\n  \\*****************/\r\n/*! exports provided: i18n */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i18n\", function() { return i18n; });\r\n/**\r\n * This is a temporary placeholder for an i18n library\r\n */\r\nconst i18n = {\r\n  en: {\r\n    feminine: {\r\n      full: 'feminine',\r\n      abbr: 'f.'\r\n    },\r\n    masculine: {\r\n      full: 'masculine',\r\n      abbr: 'm.'\r\n    },\r\n    neuter: {\r\n      full: 'neuter',\r\n      abbr: 'n.'\r\n    },\r\n    nominative: {\r\n      full: 'nominative',\r\n      abbr: 'nom.'\r\n    },\r\n    accusative: {\r\n      full: 'accusative',\r\n      abbr: 'acc.'\r\n    },\r\n    genitive: {\r\n      full: 'genitive',\r\n      abbr: 'gen.'\r\n    },\r\n    vocative: {\r\n      full: 'vocative',\r\n      abbr: 'voc.'\r\n    },\r\n    ablative: {\r\n      full: 'ablative',\r\n      abbr: 'abl.'\r\n    },\r\n    locative: {\r\n      full: 'locative',\r\n      abbr: 'loc.'\r\n    },\r\n    dative: {\r\n      full: 'dative',\r\n      abbr: 'dat.'\r\n    },\r\n    positive: {\r\n      full: 'positive',\r\n      abbr: 'pos.'\r\n    },\r\n    comparative: {\r\n      full: 'comparative',\r\n      abbr: 'com.'\r\n    },\r\n    superlative: {\r\n      full: 'superlative',\r\n      abbr: 'sup.'\r\n    },\r\n    singular: {\r\n      full: 'singular',\r\n      abbr: 's.'\r\n    },\r\n    plural: {\r\n      full: 'plural',\r\n      abbr: 'p.'\r\n    },\r\n    dual: {\r\n      full: 'dual',\r\n      abbr: 'dl.'\r\n    },\r\n    present: {\r\n      full: 'present',\r\n      abbr: 'pr.'\r\n    },\r\n    imperfect: {\r\n      full: 'imperfect',\r\n      abbr: 'imp.'\r\n    },\r\n    perfect: {\r\n      full: 'perfect',\r\n      abbr: 'perf.'\r\n    },\r\n    plusquamperfect: {\r\n      full: 'plusquamperfect',\r\n      abbr: 'pqpf.'\r\n    },\r\n    'future perfect': {\r\n      full: 'future perfect',\r\n      abbr: 'fex.'\r\n    },\r\n    future: {\r\n      full: 'future',\r\n      abbr: 'fut.'\r\n    },\r\n    aorist: {\r\n      full: 'aorist',\r\n      abbr: 'aor.'\r\n    },\r\n    indicative: {\r\n      full: 'indicative',\r\n      abbr: 'ind.'\r\n    },\r\n    subjunctive: {\r\n      full: 'subjunctive',\r\n      abbr: 'sub.'\r\n    },\r\n    infinitive: {\r\n      full: 'infinitive',\r\n      abbr: 'inf.'\r\n    },\r\n    imperative: {\r\n      full: 'imperative',\r\n      abbr: 'imp.'\r\n    },\r\n    supine: {\r\n      full: 'supine',\r\n      abbr: 'sup.'\r\n    },\r\n    participle: {\r\n      full: 'participle',\r\n      abbr: 'par.'\r\n    },\r\n    optative: {\r\n      full: 'optative',\r\n      abbr: 'opt.'\r\n    },\r\n    active: {\r\n      full: 'active',\r\n      abbr: 'act.'\r\n    },\r\n    passive: {\r\n      full: 'passive',\r\n      abbr: 'pass.'\r\n    },\r\n    middle: {\r\n      full: 'middle',\r\n      abbr: 'mid.'\r\n    },\r\n    mediopassive: {\r\n      full: 'mediopassive',\r\n      abbr: 'mp.'\r\n    },\r\n    deponens: {\r\n      full: 'deponens',\r\n      abbr: 'dep.'\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./inflection.js\":\r\n/*!***********************!*\\\r\n  !*** ./inflection.js ***!\r\n  \\***********************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n/* harmony import */ var _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language_model_factory.js */ \"./language_model_factory.js\");\r\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"./constants.js\");\r\n\r\n\r\n\r\n/*\r\n Hierarchical structure of return value of a morphological analyzer:\r\n\r\n Homonym (a group of words that are written the same way, https://en.wikipedia.org/wiki/Homonym)\r\n    Lexeme 1 (a unit of lexical meaning, https://en.wikipedia.org/wiki/Lexeme)\r\n        Have a lemma and one or more inflections\r\n        Lemma (also called a headword, a canonical form of a group of words https://en.wikipedia.org/wiki/Lemma_(morphology) )\r\n        Inflection 1\r\n            Stem\r\n            Suffix (also called ending)\r\n        Inflection 2\r\n            Stem\r\n            Suffix\r\n    Lexeme 2\r\n        Lemma\r\n        Inflection 1\r\n            Stem\r\n            Suffix\r\n */\r\n\r\n/**\r\n * Represents an inflection of a word\r\n */\r\nclass Inflection {\r\n  /**\r\n     * Initializes an Inflection object.\r\n     * @param {string} stem - A stem of a word.\r\n     * @param {string | symbol} language - A word's language.\r\n     * @param {string} suffix - a suffix of a word\r\n     * @param {prefix} prefix - a prefix of a word\r\n     * @param {example} example - example\r\n     */\r\n  constructor (stem = null, language, suffix = null, prefix = null, example = null) {\r\n    if (!stem && !suffix) {\r\n      throw new Error('At least stem or suffix must be defined')\r\n    }\r\n    if (!language) {\r\n      throw new Error('Language should not be empty.')\r\n    }\r\n\r\n    if (!_language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].supportsLanguage(language)) {\r\n      throw new Error(`language ${language} not supported.`)\r\n    }\r\n\r\n    this.stem = stem\r\n    this.languageID = undefined\r\n    this.languageCode = undefined\r\n    ;({languageID: this.languageID, languageCode: this.languageCode} = _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLanguageAttrs(language))\r\n    this.model = _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLanguageModel(this.languageID)\r\n    this.features = new Set() // Names of features of this inflection\r\n\r\n    // A grammar constraints object\r\n    this.constraints = {\r\n      fullFormBased: false, // True this inflection stores and requires to use a full form of a word\r\n      suffixBased: false, // True if only suffix is enough to identify this inflection\r\n      obligatoryMatches: [], // Names of features that should be matched in order to include a form or suffix to an inflection table\r\n      optionalMatches: [] // Names of features that will be recorded but are not important for inclusion of a form or suffix to an inflection table\r\n    }\r\n\r\n    // Suffix may not be present in every word. If missing, it will be set to null.\r\n    this.suffix = suffix\r\n\r\n    // Prefix may not be present in every word. If missing, it will be set to null.\r\n    this.prefix = prefix\r\n\r\n    // Example may not be provided\r\n    this.example = example\r\n  }\r\n\r\n  get form () {\r\n    let form, prefix, suffix, divider, stem\r\n\r\n    stem = this.stem ? this.stem : ''\r\n    divider = this.stem ? ' - ' : ''\r\n\r\n    if (this.model.direction === _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"LANG_DIR_RTL\"]) {\r\n      prefix = this.prefix ? divider + this.prefix : ''\r\n      suffix = this.suffix ? this.suffix + divider : ''\r\n\r\n      form = suffix + stem + prefix\r\n    } else {\r\n      prefix = this.prefix ? this.prefix + divider : ''\r\n      suffix = this.suffix ? divider + this.suffix : ''\r\n\r\n      form = prefix + stem + suffix\r\n    }\r\n\r\n    return form\r\n  }\r\n\r\n  /**\r\n   * This is a compatibility function for legacy code.\r\n   * @return {String} A language code.\r\n   */\r\n  get language () {\r\n    console.warn(`Please use a \"languageID\" instead of a \"language\"`)\r\n    return this.languageCode\r\n  }\r\n\r\n  /**\r\n   * Sets grammar properties based on inflection info\r\n   */\r\n  setConstraints () {\r\n    if (this.model.hasOwnProperty('getInflectionConstraints')) {\r\n      let constraintData = this.model.getInflectionConstraints(this)\r\n      this.constraints = Object.assign(this.constraints, constraintData)\r\n    }\r\n  }\r\n\r\n  compareWithWordDependsOnType (word, className, normalize = true) {\r\n    const model = _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLanguageModel(this.languageID)\r\n    let value\r\n\r\n    if (!this.constraints.irregularVerb) {\r\n      value = this.constraints.suffixBased ? this.suffix : this.form\r\n    } else {\r\n      if (className === 'Suffix') {\r\n        value = this.suffix\r\n      } else {\r\n        value = this[_feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].types.fullForm] ? this[_feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].types.fullForm].value : this.form\r\n      }\r\n    }\r\n\r\n    return normalize\r\n      ? model.normalizeWord(value) === model.normalizeWord(word)\r\n      : value === word\r\n  }\r\n\r\n  compareWithWord (word, normalize = true) {\r\n    const model = _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLanguageModel(this.languageID)\r\n    const value = this.constraints.suffixBased ? this.suffix : this.form\r\n    return normalize\r\n      ? model.normalizeWord(value) === model.normalizeWord(word)\r\n      : value === word\r\n  }\r\n\r\n  /**\r\n   * Check to see if the supplied inflection can disambiguate this one\r\n   * @param {Inflection} infl Inflection object to be used for disambiguation\r\n   */\r\n  disambiguatedBy (infl) {\r\n    let matched = true\r\n    // an inflection can only be disambiguated by its features\r\n    if (this.features.length === 0 || infl.features.length === 0) {\r\n      matched = false\r\n    }\r\n    // the supplied inflection can be less specific but not more\r\n    if (infl.features.length > this.features.length) {\r\n      matched = false\r\n    }\r\n    for (let feature of infl.features) {\r\n      if (!this[feature] || !this[feature].isEqual(infl[feature])) {\r\n        matched = false\r\n        break\r\n      }\r\n    }\r\n    return matched\r\n  }\r\n\r\n  static readObject (jsonObject) {\r\n    let inflection =\r\n      new Inflection(\r\n        jsonObject.stem, jsonObject.languageCode, jsonObject.suffix, jsonObject.prefix, jsonObject.example)\r\n    inflection.languageID = _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLanguageIdFromCode(inflection.languageCode)\r\n    return inflection\r\n  }\r\n\r\n  /**\r\n   * @deprecated Use `addFeature` instead\r\n   * Sets a grammatical feature in an inflection. Some features can have multiple values, In this case\r\n   * an array of Feature objects will be provided.\r\n   * Values are taken from features and stored in a 'feature.type' property as an array of values.\r\n   * @param {Feature | Feature[]} data\r\n   */\r\n  set feature (data) {\r\n    console.warn(`Please use \"addFeature\" instead.`)\r\n    if (!data) {\r\n      throw new Error('Inflection feature data cannot be empty.')\r\n    }\r\n    if (!Array.isArray(data)) {\r\n      data = [data]\r\n    }\r\n\r\n    let type = data[0].type\r\n    this[type] = []\r\n    for (let element of data) {\r\n      if (!(element instanceof _feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])) {\r\n        throw new Error('Inflection feature data must be a Feature object.')\r\n      }\r\n\r\n      if (!_language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compareLanguages(element.languageID, this.languageID)) {\r\n        throw new Error(`Language \"${element.languageID.toString()}\" of a feature does not match\r\n          a language \"${this.languageID.toString()}\" of an Inflection object.`)\r\n      }\r\n\r\n      this[type].push(element)\r\n      this.features.add(type)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets a grammatical feature of an inflection. Feature is stored in a `feature.type` property.\r\n   * @param {Feature} feature - A feature object with one or multiple values.\r\n   */\r\n  addFeature (feature) {\r\n    if (!feature) {\r\n      throw new Error('feature data cannot be empty.')\r\n    }\r\n\r\n    if (!(feature instanceof _feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])) {\r\n      throw new Error('feature data must be a Feature object.')\r\n    }\r\n\r\n    if (!_language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compareLanguages(feature.languageID, this.languageID)) {\r\n      throw new Error('Language \"' + feature.languageID.toString() + '\" of a feature does not match a language \"' +\r\n        this.languageID.toString() + '\" of a Lemma object.')\r\n    }\r\n\r\n    this[feature.type] = feature\r\n    this.features.add(feature.type)\r\n  }\r\n\r\n  /**\r\n   * Sets multiple grammatical features of an inflection.\r\n   * @param {Feature[]} features - Features to be added.\r\n   */\r\n  addFeatures (features) {\r\n    if (!Array.isArray(features)) {\r\n      throw new Error(`Features must be in an array`)\r\n    }\r\n\r\n    for (let feature of features) {\r\n      this.addFeature(feature)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks whether an inflection has a feature with `featureName` name and `featureValue` value\r\n   * @param {string} featureName - A name of a feature\r\n   * @param {string} featureValue - A value of a feature\r\n   * @return {boolean} True if an inflection contains a feature, false otherwise\r\n   */\r\n  hasFeatureValue (featureName, featureValue) {\r\n    if (this.hasOwnProperty(featureName)) {\r\n      return this[featureName].values.includes(featureValue)\r\n    }\r\n    return false\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Inflection);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./inflection_group.js\":\r\n/*!*****************************!*\\\r\n  !*** ./inflection_group.js ***!\r\n  \\*****************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\nclass InflectionGroup {\r\n  /**\r\n   * A group of inflections or groups of inflections\r\n   *\r\n   * @param {InflectionGroupingKey} groupingKey features of the inflections in the group\r\n   * @param {Inflection[]|InflectionGroup[]} inflections array of Inflections or InflectionGroups in this group\r\n   */\r\n  constructor (groupingKey, inflections = [], sortKey = null) {\r\n    this.groupingKey = groupingKey\r\n    this.inflections = inflections\r\n  }\r\n\r\n  /**\r\n   * Add an Inflection or InflectionGroup to the group\r\n   * @param {Inflection|InflectionGroup} inflection\r\n   */\r\n  append (inflection) {\r\n    this.inflections.push(inflection)\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (InflectionGroup);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./inflection_grouping_key.js\":\r\n/*!************************************!*\\\r\n  !*** ./inflection_grouping_key.js ***!\r\n  \\************************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n\r\n\r\nclass InflectionGroupingKey {\r\n  /**\r\n   * @constructor\r\n   * @param {Inflection} infl inflection with features which are used as a grouping key\r\n   * @param {string[]} features array of feature names which are used as the key\r\n   * @param {Object} extras extra property name and value pairs used in the key\r\n   */\r\n  constructor (infl, features, extras = {}) {\r\n    for (let feature of features) {\r\n      this[feature] = infl[feature]\r\n    }\r\n    Object.assign(this, extras)\r\n  }\r\n\r\n  /**\r\n   * checks if a feature with a specific value\r\n   * is included in the grouping key\r\n   * @returns {boolean} true if found, false if not\r\n   */\r\n  hasFeatureValue (feature, value) {\r\n    if (this.hasOwnProperty(feature)) {\r\n      return this[feature].values.includes(value)\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Return this key as a string\r\n   * @returns {string} string representation of the key\r\n   */\r\n  toString () {\r\n    let values = []\r\n    for (let prop of Object.getOwnPropertyNames(this).sort()) {\r\n      // A prop can be either a Feature object, or a one of the extras of a string type\r\n      let value = (this[prop] instanceof _feature_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) ? this[prop].values.sort().join(',') : this[prop]\r\n      values.push(value)\r\n    }\r\n    return values.join(' ')\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (InflectionGroupingKey);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./language_model.js\":\r\n/*!***************************!*\\\r\n  !*** ./language_model.js ***!\r\n  \\***************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"./constants.js\");\r\n/* harmony import */ var _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language_model_factory.js */ \"./language_model_factory.js\");\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n/* harmony import */ var _feature_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./feature_type.js */ \"./feature_type.js\");\r\n/* harmony import */ var _inflection_grouping_key_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./inflection_grouping_key.js */ \"./inflection_grouping_key.js\");\r\n/* harmony import */ var _inflection_group_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./inflection_group.js */ \"./inflection_group.js\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @class  LanguageModel is the base class for language-specific behavior\r\n */\r\nclass LanguageModel {\r\n  constructor () {\r\n    // This is just to avoid JavaScript Standard error on `context_backward` getter name. Don't need a constructor otherwise\r\n    // TODO: `contextBackward` shall be used instead of `context_backward` wherever it is used\r\n    this.context_backward = LanguageModel.contextBackward\r\n  }\r\n\r\n  static get contextForward () { return 0 }\r\n  static get contextBackward () { return 0 }\r\n  static get direction () { return _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"LANG_DIR_LTR\"] }\r\n  static get baseUnit () { return _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"LANG_UNIT_WORD\"] }\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  get contextForward () {\r\n    console.warn(`Please use static \"contextForward\" instead`)\r\n    return this.constructor.contextForward\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  get contextBackward () {\r\n    console.warn(`Please use static \"contextBackward\" instead`)\r\n    return this.constructor.contextBackward\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  get direction () {\r\n    console.warn(`Please use static \"direction\" instead`)\r\n    return this.constructor.direction\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  get baseUnit () {\r\n    console.warn(`Please use static \"baseUnit\" instead`)\r\n    return this.constructor.baseUnit\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  get features () {\r\n    console.warn(`Please use individual \"getFeatureType\" or static \"features\" instead`)\r\n    return this.constructor.features\r\n  }\r\n\r\n  /**\r\n   * Returns a list of names of feature types that are defined in a language model.\r\n   * @return {string[]} Names of features that are defined in a model.\r\n   */\r\n  static get featureNames () {\r\n    return this.featureValues.keys()\r\n  }\r\n\r\n  /**\r\n   * Returns a feature a `featureType` name that is defined for a language. It does not create a new Feature\r\n   * object instance. It returns the one defined in a language model. To get a new instance of a Feature\r\n   * object, use `getFeature` instead.\r\n   * If no feature of `featureType` is defined in a language model, throws an error.\r\n   * @param {string} featureType - A feature type name.\r\n   * @return {Feature} A feature object of requested type.\r\n   */\r\n  static typeFeature (featureType) {\r\n    if (this.typeFeatures.has(featureType)) {\r\n      return this.typeFeatures.get(featureType)\r\n    } else {\r\n      throw new Error(`Type feature \"${featureType}\" is not defined within \"${this}\"`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a map with Feature objects of all features defined in a language. Use this method to get all\r\n   * Feature objects defined in a language model.\r\n   * @return {Map} Feature objects for all features defined within a language in a Map object. The key is\r\n   * a feature type (a string), and the value is a Feature object.\r\n   */\r\n  static get typeFeatures () {\r\n    console.warn(`This getter must be defined in a descendant class`)\r\n  }\r\n\r\n  static get features () {\r\n    let features = {}\r\n    for (const featureName of this.featureNames) {\r\n      features[featureName] = this.getFeature(featureName)\r\n    }\r\n    return features\r\n  }\r\n\r\n  static get languageID () {\r\n    return _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"LANG_UNDEFINED\"]\r\n  }\r\n\r\n  static get languageCode () {\r\n    return _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"STR_LANG_CODE_UNDEFINED\"]\r\n  }\r\n\r\n  /**\r\n   * Returns an array of language codes that represents the language.\r\n   * @return {String[]} An array of language codes that matches the language.\r\n   */\r\n  static get languageCodes () {\r\n    return []\r\n  }\r\n\r\n  static get codes () {\r\n    console.warn(`Use static \"languageCodes\" instead`)\r\n    return this.languageCodes\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @return {String[]}\r\n   */\r\n  get codes () {\r\n    console.warn(`Please use a static version of \"codes\" instead`)\r\n    return this.constructor.languageCodes\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @return {string}\r\n   */\r\n  toCode () {\r\n    console.warn(`Please use a static \"languageCode\" instead`)\r\n    return this.constructor.languageCode\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @return {string}\r\n   */\r\n  static toCode () {\r\n    console.warn(`Please use a static \"languageCode\" instead`)\r\n    return this.languageCode\r\n  }\r\n\r\n  static get featureValues () {\r\n    /*\r\n    This could be a static variable, but then it will create a circular reference:\r\n    Feature -> LanguageModelFactory -> LanguageModel -> Feature\r\n     */\r\n    return new Map([\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.part,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_ADVERB\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_ADVERBIAL\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_ADJECTIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_ARTICLE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_CONJUNCTION\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_EXCLAMATION\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_INTERJECTION\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_NOUN\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_NUMERAL\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_PARTICLE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_PREFIX\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_PREPOSITION\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_PRONOUN\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_SUFFIX\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_SUPINE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_VERB\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_VERB_PARTICIPLE\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.gender,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"GEND_MASCULINE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"GEND_FEMININE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"GEND_NEUTER\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.type,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"TYPE_REGULAR\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"TYPE_IRREGULAR\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.person,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"ORD_1ST\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"ORD_2ND\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"ORD_3RD\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.age,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.area,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.source,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.frequency,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.geo,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.pronunciation,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.kind,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.comparison,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.morph,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.stemtype,\r\n        []\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.derivtype,\r\n        []\r\n      ]\r\n    ])\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @return {symbol} Returns a language ID\r\n   */\r\n  static get sourceLanguage () {\r\n    console.warn(`Please use languageID directly`)\r\n    return this.languageID\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @return {symbol} Returns a language ID\r\n   */\r\n  get sourceLanguage () {\r\n    console.warn(`Please use languageID directly`)\r\n    return this.constructor.languageID\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @param name\r\n   * @return {FeatureType}\r\n   */\r\n  static getFeatureType (name) {\r\n    console.warn('Please use getFeature instead')\r\n    let featureValues = this.featureValues\r\n    if (featureValues.has(name)) {\r\n      return new _feature_type_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](name, featureValues.get(name), this.languageID)\r\n    } else {\r\n      throw new Error(`Feature \"${name}\" is not defined`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a new instance of a feature with `featureType`. It uses a feature defined in a language model\r\n   * as a master.\r\n   * @param {string} featureType - A name of a feature type.\r\n   * @return {Feature} - A newly created Feature object.\r\n   */\r\n  static getFeature (featureType) {\r\n    let featureValues = this.featureValues // To cache the values\r\n    if (featureValues.has(featureType)) {\r\n      let allowedValues = featureValues.get(featureType)\r\n      return new _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](featureType, allowedValues, this.languageID, 1, allowedValues)\r\n    } else {\r\n      throw new Error(`Feature \"${featureType}\" is not defined`)\r\n    }\r\n  }\r\n\r\n  _initializeFeatures () {\r\n    let features = {}\r\n    for (const featureName of this.constructor.featureValues.keys()) {\r\n      features[featureName] = this.constructor.getFeature(featureName)\r\n    }\r\n    return features\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  grammarFeatures () {\r\n    console.warn(`Please use a static version of \"grammarFeatures\" instead`)\r\n    return this.constructor.grammarFeatures()\r\n  }\r\n\r\n  /**\r\n   * Identify the morphological features which should be linked to a grammar.\r\n   * @returns {String[]} Array of Feature types\r\n   */\r\n  static grammarFeatures () {\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * Check to see if this language tool can produce an inflection table display\r\n   * for the current node\r\n   */\r\n  static canInflect (node) {\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Check to see if the supplied language code is supported by this tool\r\n   * @param {string} code the language code\r\n   * @returns true if supported false if not\r\n   * @type Boolean\r\n   */\r\n  static supportsLanguage (code) {\r\n    return this.languageCodes.includes[code]\r\n  }\r\n\r\n  /**\r\n   * Return a normalized version of a word which can be used to compare the word for equality\r\n   * @param {string} word the source word\r\n   * @returns the normalized form of the word (default version just returns the same word,\r\n   *          override in language-specific subclass)\r\n   * @type String\r\n   */\r\n  static normalizeWord (word) {\r\n    return word\r\n  }\r\n\r\n  /**\r\n   * Returns alternate encodings for a word\r\n   * @param {string} word the word\r\n   * @param {string} preceding optional preceding word\r\n   * @param {string} following optional following word\r\n   * @param {string} encoding optional encoding name to filter the response to\r\n   * @returns {Array} an array of alternate encodings\r\n   */\r\n  static alternateWordEncodings (word, preceding = null, following = null, encoding = null) {\r\n    return []\r\n  }\r\n\r\n  alternateWordEncodings (word, preceding, following, encoding) {\r\n    console.warn(`Please use static \"alternateWordEncodings\" instead`)\r\n    return this.constructor.alternateWordEncodings(word, preceding, following, encoding)\r\n  }\r\n\r\n  /**\r\n   * Get a list of valid puncutation for this language\r\n   * @returns {String} a string containing valid puncutation symbols\r\n   */\r\n  static getPunctuation () {\r\n    return '.,;:!?\\'\"(){}\\\\[\\\\]<>/\\\\\\u00A0\\u2010\\u2011\\u2012\\u2013\\u2014\\u2015\\u2018\\u2019\\u201C\\u201D\\u0387\\u00B7\\n\\r'\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @return {String}\r\n   */\r\n  getPunctuation () {\r\n    console.warn(`Please use a static version of \"getPunctuation\"`)\r\n    return this.constructor.getPunctuation()\r\n  }\r\n\r\n  toString () {\r\n    return String(this.constructor.languageCode)\r\n  }\r\n\r\n  isEqual (model) {\r\n    return _language_model_factory_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compareLanguages(this.languageID, model.languageID)\r\n  }\r\n\r\n  /*\r\n  There are two types of language identificators: language IDs and language code. Language ID is a symbol constant\r\n  defined in constants.js, such as LANG_LATIN or LANG_GREEK. Language code is a string containing (usually)\r\n  a three-letter language codes such as 'lat' or 'la' for latin. There can be multiple language codes that identify\r\n  the same language, but there is only one unique language ID for each language.\r\n   */\r\n\r\n  /**\r\n   * Checks whether a language has a particular language code in its list of codes\r\n   * @param {String} languageCode - A language code to check\r\n   * @return {boolean} Whether this language code exists in a language code list\r\n   */\r\n  static hasCode (languageCode) {\r\n    if (this.isLanguageCode(languageCode)) {\r\n      return this.languageCodes.includes(languageCode)\r\n    } else {\r\n      throw new Error(`Format of a \"${languageCode}\" is incorrect`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Tests wither a provided language identificator is a language ID.\r\n   * @param {Symbol | string} language - A language identificator, either a Symbol or a string language code.\r\n   * @return {boolean} True if language identificator provided is a language ID.\r\n   */\r\n  static isLanguageID (language) {\r\n    return (typeof language === 'symbol')\r\n  }\r\n\r\n  /**\r\n   * Tests wither a provided language identificator is a language code.\r\n   * @param {Symbol | string} language - A language identificator, either a Symbol or a string language code.\r\n   * @return {boolean} - True if language identificator provided is a language code.\r\n   */\r\n  static isLanguageCode (language) {\r\n    return !LanguageModel.isLanguageID(language)\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @param node\r\n   */\r\n  canInflect (node) {\r\n    console.warn(`Please use a static version of \"canInflect\" instead`)\r\n    return this.constructor.canInflect(node)\r\n  }\r\n\r\n  /**\r\n   * Groups a set of inflections according to a language-specific display paradigm\r\n   * The default groups according to the following logic:\r\n   *   1. groups of groups with unique stem, prefix, suffix, part of speech, declension, dialect and comparison\r\n   *     2. groups of those groups with unique\r\n   *          number, if it's an inflection with a grammatical case\r\n   *          tense, if it's an inflection with tense but no case (i.e. a verb)\r\n   *          verbs without tense or case\r\n   *          adverbs\r\n   *          everything else\r\n   *       3. groups of those groups with unique voice and tense\r\n   *         4. groups of inflections with unique gender, person, mood, and sort\r\n   */\r\n  static groupInflectionsForDisplay (inflections) {\r\n    let grouped = new Map()\r\n    let aggregated = this.aggregateInflectionsForDisplay(inflections)\r\n\r\n    // group inflections by part of speech\r\n    for (let infl of aggregated) {\r\n      let groupingKey = new _inflection_grouping_key_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](infl,\r\n        [_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.part, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.declension, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.dialect, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.comparison],\r\n        {\r\n          prefix: infl.prefix,\r\n          suffix: infl.suffix,\r\n          stem: infl.stem\r\n        }\r\n      )\r\n      let groupingKeyStr = groupingKey.toString()\r\n      if (grouped.has(groupingKeyStr)) {\r\n        grouped.get(groupingKeyStr).append(infl)\r\n      } else {\r\n        grouped.set(groupingKeyStr, new _inflection_group_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](groupingKey, [infl]))\r\n      }\r\n    }\r\n\r\n    // iterate through each group key to group the inflections in that group\r\n    for (let kv of grouped) {\r\n      let inflgrp = new Map()\r\n      for (let infl of kv[1].inflections) {\r\n        let keyprop\r\n        let isCaseInflectionSet = false\r\n        if (infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.grmCase]) {\r\n          // grouping on number if case is defined\r\n          keyprop = _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.number\r\n          isCaseInflectionSet = true\r\n        } else if (infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.tense]) {\r\n          // grouping on tense if tense is defined but not case\r\n          keyprop = _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.tense\r\n        } else if (infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.part] === _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_VERB\"]) {\r\n          // grouping on no case or tense but a verb\r\n          keyprop = _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.part\r\n        } else if (infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.part] === _constants_js__WEBPACK_IMPORTED_MODULE_0__[\"POFS_ADVERB\"]) {\r\n          keyprop = _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.part\r\n          // grouping on adverbs without case or tense\r\n        } else {\r\n          keyprop = 'misc'\r\n          // grouping on adverbs without case or tense\r\n          // everything else\r\n        }\r\n        let groupingKey = new _inflection_grouping_key_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](infl, [keyprop], {isCaseInflectionSet: isCaseInflectionSet})\r\n        let groupingKeyStr = groupingKey.toString()\r\n        if (inflgrp.has(groupingKeyStr)) {\r\n          inflgrp.get(groupingKeyStr).append(infl)\r\n        } else {\r\n          inflgrp.set(groupingKeyStr, new _inflection_group_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](groupingKey, [infl]))\r\n        }\r\n      }\r\n      // inflgrp is now a map of groups of inflections grouped by\r\n      //  inflections with number\r\n      //  inflections without number but with tense\r\n      //  inflections of verbs without tense\r\n      //  inflections of adverbs\r\n      //  everything else\r\n      // iterate through each inflection group key to group the inflections in that group by tense and voice\r\n      for (let kv of inflgrp) {\r\n        let nextGroup = new Map()\r\n        let sortOrder = new Map()\r\n        for (let infl of kv[1].inflections) {\r\n          let sortkey = infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.grmCase] ? Math.max(infl[_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.grmCase].items.map(f => f.sortOrder)) : 1\r\n          let groupingKey = new _inflection_grouping_key_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](infl, [_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.tense, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.voice])\r\n          let groupingKeyStr = groupingKey.toString()\r\n          if (nextGroup.has(groupingKeyStr)) {\r\n            nextGroup.get(groupingKeyStr).append(infl)\r\n          } else {\r\n            nextGroup.set(groupingKeyStr, new _inflection_group_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](groupingKey, [infl], sortkey))\r\n            sortOrder.set(groupingKeyStr, sortkey)\r\n          }\r\n        }\r\n        kv[1].inflections = []\r\n        let sortedKeys = Array.from(nextGroup.keys()).sort(\r\n          (a, b) => {\r\n            let orderA = sortOrder.get(a)\r\n            let orderB = sortOrder.get(b)\r\n            return orderA > orderB ? -1 : orderB > orderA ? 1 : 0\r\n          }\r\n        )\r\n        for (let groupkey of sortedKeys) {\r\n          kv[1].inflections.push(nextGroup.get(groupkey))\r\n        }\r\n      }\r\n\r\n      // inflgrp is now a Map of groups of groups of inflections\r\n\r\n      for (let kv of inflgrp) {\r\n        let groups = kv[1]\r\n        for (let group of groups.inflections) {\r\n          let nextGroup = new Map()\r\n          for (let infl of group.inflections) {\r\n            // set key is case comp gend pers mood sort\r\n            let groupingKey = new _inflection_grouping_key_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](infl,\r\n              [_feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.grmCase, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.comparison, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.gender, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.number, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.person,\r\n                _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.tense, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.mood, _feature_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].types.voice])\r\n            let groupingKeyStr = groupingKey.toString()\r\n            if (nextGroup.has(groupingKeyStr)) {\r\n              nextGroup.get(groupingKeyStr).append(infl)\r\n            } else {\r\n              nextGroup.set(groupingKeyStr, new _inflection_group_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](groupingKey, [infl]))\r\n            }\r\n          }\r\n          group.inflections = Array.from(nextGroup.values()) // now a group of inflection groups\r\n        }\r\n      }\r\n      kv[1].inflections = Array.from(inflgrp.values())\r\n    }\r\n    return Array.from(grouped.values())\r\n  }\r\n\r\n  /**\r\n   * Aggregate inflections for display according to language model characteristics\r\n   * @param {Inflection[]} inflections an array of inflections\r\n   * @return Inflection[] the aggregated inflections\r\n   */\r\n  static aggregateInflectionsForDisplay (inflections) {\r\n    // default is just to do nothing\r\n    return inflections\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * @param inflections\r\n   * @return {*}\r\n   */\r\n  groupInflectionsForDisplay (inflections) {\r\n    console.warn(`Please use a static version of \"groupInflectionsForDisplay\" instead`)\r\n    return this.constructor.groupInflectionsForDisplay(inflections)\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (LanguageModel);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./language_model_factory.js\":\r\n/*!***********************************!*\\\r\n  !*** ./language_model_factory.js ***!\r\n  \\***********************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _language_model_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model.js */ \"./language_model.js\");\r\n/* harmony import */ var _latin_language_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./latin_language_model.js */ \"./latin_language_model.js\");\r\n/* harmony import */ var _greek_language_model_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./greek_language_model.js */ \"./greek_language_model.js\");\r\n/* harmony import */ var _arabic_language_model_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./arabic_language_model.js */ \"./arabic_language_model.js\");\r\n/* harmony import */ var _persian_language_model_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./persian_language_model.js */ \"./persian_language_model.js\");\r\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"./constants.js\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MODELS = new Map([\r\n  [ _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"STR_LANG_CODE_LA\"], _latin_language_model_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ],\r\n  [ _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"STR_LANG_CODE_LAT\"], _latin_language_model_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ],\r\n  [ _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"STR_LANG_CODE_GRC\"], _greek_language_model_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] ],\r\n  [ _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"STR_LANG_CODE_ARA\"], _arabic_language_model_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] ],\r\n  [ _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"STR_LANG_CODE_AR\"], _arabic_language_model_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] ],\r\n  [ _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"STR_LANG_CODE_PER\"], _persian_language_model_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"] ]\r\n])\r\n\r\nclass LanguageModelFactory {\r\n  /**\r\n   * Checks whether a language is supported\r\n   * @param {string | symbol} language - Language as a language ID (symbol) or a language code (string)\r\n   * @return {boolean} True if language is supported, false otherwise\r\n   */\r\n  static supportsLanguage (language) {\r\n    language = (typeof language === 'symbol') ? LanguageModelFactory.getLanguageCodeFromId(language) : language\r\n    return MODELS.has(language)\r\n  }\r\n\r\n  /**\r\n   * Returns a constructor of language model for a specific language ID.\r\n   * @param {symbol} languageID - A language ID of a desired language model.\r\n   * @return {LanguageModel} A language model for a given language ID.\r\n   */\r\n  static getLanguageModel (languageID) {\r\n    let languageCode = LanguageModelFactory.getLanguageCodeFromId(languageID)\r\n    if (MODELS.has(languageCode)) {\r\n      return MODELS.get(languageCode)\r\n    } else {\r\n      // A default value\r\n      return _language_model_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\r\n    }\r\n  }\r\n\r\n  static getLanguageForCode (code = null) {\r\n    let Model = MODELS.get(code)\r\n    if (Model) {\r\n      return new Model()\r\n    }\r\n    // for now return a default Model\r\n    // TODO may want to throw an error\r\n    return new _language_model_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]()\r\n  }\r\n\r\n  /**\r\n   * Converts an ISO 639-3 language code to a language ID\r\n   * @param {string} languageCode - An ISO 639-3 language code\r\n   * @return {symbol | undefined} A language ID or undefined if language ID is not found\r\n   */\r\n  static getLanguageIdFromCode (languageCode) {\r\n    for (const languageModel of MODELS.values()) {\r\n      if (languageModel.hasCode(languageCode)) {\r\n        return languageModel.languageID\r\n      }\r\n    }\r\n    // Noting found, return a Symbol with an undefined value (to keep return value type the same)\r\n    return _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"LANG_UNDEFINED\"]\r\n  }\r\n\r\n  /**\r\n   * Converts a language ID to an default ISO 639-3 language code for that language\r\n   * @param {symbol} languageID - A language ID\r\n   * @return {string | undefined} An ISO 639-3 language code or undefined if language code is not found\r\n   */\r\n  static getLanguageCodeFromId (languageID) {\r\n    for (const languageModel of MODELS.values()) {\r\n      if (languageModel.languageID.toString() === languageID.toString()) {\r\n        return languageModel.languageCode\r\n      }\r\n    }\r\n    // Noting found, return a string with an undefined value (to keep return value type the same)\r\n    return _constants_js__WEBPACK_IMPORTED_MODULE_5__[\"STR_LANG_CODE_UNDEFINED\"]\r\n  }\r\n\r\n  /**\r\n   * Takes either a language ID or a language code and returns an object with both an ID and a code.\r\n   * @param {string | symbol} language - Either a language ID (a Symbol) or a language code (a String).\r\n   * @return {object} An object with the following properties:\r\n   *    {symbol} languageID\r\n   *    {string} languageCode\r\n   */\r\n  static getLanguageAttrs (language) {\r\n    if (typeof language === 'symbol') {\r\n      // `language` is a language ID\r\n      return {\r\n        languageID: language,\r\n        languageCode: LanguageModelFactory.getLanguageCodeFromId(language)\r\n      }\r\n    } else {\r\n      // `language` is a language code\r\n      return {\r\n        languageID: LanguageModelFactory.getLanguageIdFromCode(language),\r\n        languageCode: language\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compares two languages in either a language ID or a language code format. For this, does conversion of\r\n   * language IDs to language code. Because fo this, it will work even for language IDs defined in\r\n   * different modules\r\n   * @param {string | symbol} languageA - Either a language ID (a symbol) or a language code (a string).\r\n   * @param {string | symbol} languageB - Either a language ID (a symbol) or a language code (a string).\r\n   * @return {boolean} True if languages are the same, false otherwise.\r\n   */\r\n  static compareLanguages (languageA, languageB) {\r\n    languageA = (typeof languageA === 'symbol') ? LanguageModelFactory.getLanguageCodeFromId(languageA) : languageA\r\n    languageB = (typeof languageB === 'symbol') ? LanguageModelFactory.getLanguageCodeFromId(languageB) : languageB\r\n    return languageA === languageB\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (LanguageModelFactory);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./latin_language_model.js\":\r\n/*!*********************************!*\\\r\n  !*** ./latin_language_model.js ***!\r\n  \\*********************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LatinLanguageModel; });\r\n/* harmony import */ var _language_model_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model.js */ \"./language_model.js\");\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"./constants.js\");\r\n\r\n\r\n\r\n\r\nlet typeFeatures = new Map()\r\nlet typeFeaturesInitialized = false\r\n\r\n/**\r\n * @class  LatinLanguageModel is the lass for Latin specific behavior\r\n */\r\nclass LatinLanguageModel extends _language_model_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  static get languageID () { return _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"LANG_LATIN\"] }\r\n  static get languageCode () { return _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STR_LANG_CODE_LAT\"] }\r\n  static get languageCodes () { return [_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STR_LANG_CODE_LA\"], _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"STR_LANG_CODE_LAT\"]] }\r\n  static get contextForward () { return 0 }\r\n  static get contextBackward () { return 0 }\r\n  static get direction () { return _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"LANG_DIR_LTR\"] }\r\n  static get baseUnit () { return _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"LANG_UNIT_WORD\"] }\r\n\r\n  static get featureValues () {\r\n    /*\r\n    This could be a static variable, but then it will create a circular reference:\r\n    Feature -> LanguageModelFactory -> LanguageModel -> Feature\r\n     */\r\n    return new Map([\r\n      ..._language_model_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].featureValues,\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.grmClass,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_PERSONAL\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_REFLEXIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_POSSESSIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_DEMONSTRATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_RELATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CLASS_INTERROGATIVE\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.number,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"NUM_SINGULAR\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"NUM_PLURAL\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.grmCase,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_NOMINATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_GENITIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_DATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_ACCUSATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_ABLATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_LOCATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"CASE_VOCATIVE\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.declension,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_1ST\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_2ND\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_3RD\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_4TH\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_5TH\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.tense,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_PRESENT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_IMPERFECT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_FUTURE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_PERFECT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_PLUPERFECT\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"TENSE_FUTURE_PERFECT\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.voice,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"VOICE_ACTIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"VOICE_PASSIVE\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.mood,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_INDICATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_SUBJUNCTIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_IMPERATIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_PARTICIPLE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_SUPINE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_GERUNDIVE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_PARTICIPLE\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"MOOD_INFINITIVE\"]\r\n        ]\r\n      ],\r\n      [\r\n        _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.conjugation,\r\n        [\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_1ST\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_2ND\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_3RD\"],\r\n          _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"ORD_4TH\"]\r\n        ]\r\n      ]\r\n    ])\r\n  }\r\n\r\n  static get typeFeatures () {\r\n    if (!typeFeaturesInitialized) {\r\n      this.initTypeFeatures()\r\n    }\r\n    return typeFeatures\r\n  }\r\n\r\n  static initTypeFeatures () {\r\n    for (const featureName of this.featureNames) {\r\n      typeFeatures.set(featureName, this.getFeature(featureName))\r\n    }\r\n    typeFeaturesInitialized = true\r\n  }\r\n\r\n  /**\r\n   * @override LanguageModel#grammarFeatures\r\n   */\r\n  static grammarFeatures () {\r\n    // TODO this ideally might be grammar specific\r\n    return [_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part, _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.grmCase, _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.mood, _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.declension, _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.tense, _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.conjugation]\r\n  }\r\n\r\n  /**\r\n   * Check to see if this language tool can produce an inflection table display\r\n   * for the current node\r\n   */\r\n  static canInflect (node) {\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Return a normalized version of a word which can be used to compare the word for equality\r\n   * @param {String} word the source word\r\n   * @returns the normalized form of the word (Latin replaces accents and special chars)\r\n   * @type String\r\n   */\r\n  static normalizeWord (word) {\r\n    if (word) {\r\n      word = word.replace(/[\\u00c0\\u00c1\\u00c2\\u00c3\\u00c4\\u0100\\u0102]/g, 'A')\r\n      word = word.replace(/[\\u00c8\\u00c9\\u00ca\\u00cb\\u0112\\u0114]/g, 'E')\r\n      word = word.replace(/[\\u00cc\\u00cd\\u00ce\\u00cf\\u012a\\u012c]/g, 'I')\r\n      word = word.replace(/[\\u00d2\\u00d3\\u00d4\\u00df\\u00d6\\u014c\\u014e]/g, 'O')\r\n      word = word.replace(/[\\u00d9\\u00da\\u00db\\u00dc\\u016a\\u016c]/g, 'U')\r\n      word = word.replace(/[\\u00c6\\u01e2]/g, 'AE')\r\n      word = word.replace(/[\\u0152]/g, 'OE')\r\n      word = word.replace(/[\\u00e0\\u00e1\\u00e2\\u00e3\\u00e4\\u0101\\u0103]/g, 'a')\r\n      word = word.replace(/[\\u00e8\\u00e9\\u00ea\\u00eb\\u0113\\u0115]/g, 'e')\r\n      word = word.replace(/[\\u00ec\\u00ed\\u00ee\\u00ef\\u012b\\u012d\\u0129]/g, 'i')\r\n      word = word.replace(/[\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u014d\\u014f]/g, 'o')\r\n      word = word.replace(/[\\u00f9\\u00fa\\u00fb\\u00fc\\u016b\\u016d]/g, 'u')\r\n      word = word.replace(/[\\u00e6\\u01e3]/g, 'ae')\r\n      word = word.replace(/[\\u0153]/g, 'oe')\r\n    }\r\n    return word\r\n  }\r\n\r\n  /**\r\n   * Returns alternate encodings for a word\r\n   * @param {string} word the word\r\n   * @param {string} preceding optional preceding word\r\n   * @param {string} following optional following word\r\n   * @param {string} encoding optional encoding name to filter the response to\r\n   * @returns {Array} an array of alternate encodings\r\n   */\r\n  static alternateWordEncodings (word, preceding = null, following = null, encoding = null) {\r\n    // Not implemented yet\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * Get a list of valid puncutation for this language\r\n   * @returns {String} a string containing valid puncutation symbols\r\n   */\r\n  static getPunctuation () {\r\n    return \".,;:!?'\\\"(){}\\\\[\\\\]<>/\\\\\\u00A0\\u2010\\u2011\\u2012\\u2013\\u2014\\u2015\\u2018\\u2019\\u201C\\u201D\\u0387\\u00B7\\n\\r\"\r\n  }\r\n\r\n  /**\r\n   * Sets inflection grammar properties based on its characteristics\r\n   * @param {Inflection} inflection - An inflection object\r\n   * @return {Object} Inflection properties\r\n   */\r\n  static getInflectionConstraints (inflection) {\r\n    let grammar = {\r\n      fullFormBased: false,\r\n      suffixBased: false,\r\n      pronounClassRequired: false\r\n    }\r\n    if (inflection.hasOwnProperty(_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part)) {\r\n      if ([_constants_js__WEBPACK_IMPORTED_MODULE_2__[\"POFS_VERB\"], _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"POFS_VERB_PARTICIPLE\"]].includes(inflection[_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part].value)) {\r\n        grammar.fullFormBased = true\r\n        grammar.suffixBased = true\r\n      } else if (inflection[_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part].value === _constants_js__WEBPACK_IMPORTED_MODULE_2__[\"POFS_PRONOUN\"]) {\r\n        grammar.fullFormBased = true\r\n      } else {\r\n        grammar.suffixBased = true\r\n      }\r\n    } else {\r\n      console.warn(`Unable to set grammar: part of speech data is missing or is incorrect`, inflection[_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part])\r\n    }\r\n\r\n    return grammar\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lemma.js\":\r\n/*!******************!*\\\r\n  !*** ./lemma.js ***!\r\n  \\******************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model_factory.js */ \"./language_model_factory.js\");\r\n/* harmony import */ var _feature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature.js */ \"./feature.js\");\r\n/* harmony import */ var uuid_v4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid/v4 */ \"../node_modules/uuid/v4.js\");\r\n/* harmony import */ var uuid_v4__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(uuid_v4__WEBPACK_IMPORTED_MODULE_2__);\r\n\r\n\r\n\r\n\r\n/**\r\n * Lemma, a canonical form of a word.\r\n */\r\nclass Lemma {\r\n  /**\r\n   * Initializes a Lemma object.\r\n   * @param {string} word - A word.\r\n   * @param {symbol | string} languageID - A language ID (symbol, please use this) or a language code of a word.\r\n   * @param {string[]} principalParts - the principalParts of a lemma.\r\n   * @param {Object} features - the grammatical features of a lemma.\r\n\r\n   * @param {Translation} transaltions - translations from python service\r\n   */\r\n  constructor (word, languageID, principalParts = [], features = {}) {\r\n    if (!word) {\r\n      throw new Error('Word should not be empty.')\r\n    }\r\n\r\n    if (!languageID) {\r\n      throw new Error('Language should not be empty.')\r\n    }\r\n\r\n    // Compatibility code for something providing languageCode instead of languageID\r\n    this.languageID = undefined\r\n    this.languageCode = undefined\r\n    ;({languageID: this.languageID, languageCode: this.languageCode} = _language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getLanguageAttrs(languageID))\r\n\r\n    this.word = word\r\n    this.principalParts = principalParts\r\n    this.features = {}\r\n\r\n    this.ID = uuid_v4__WEBPACK_IMPORTED_MODULE_2___default()()\r\n  }\r\n\r\n  get language () {\r\n    console.warn(`Please use \"languageID\" instead of \"language\"`)\r\n    return this.languageCode\r\n  }\r\n\r\n  static readObject (jsonObject) {\r\n    return new Lemma(jsonObject.word, jsonObject.language, jsonObject.principalParts, jsonObject.pronunciation)\r\n  }\r\n\r\n  /**\r\n   * @deprecated Please use `addFeature` instead.\r\n   * Sets a grammatical feature for a lemma. Some features can have multiple values, In this case\r\n   * an array of Feature objects will be provided.\r\n   * Values are taken from features and stored in a 'feature.type' property as an array of values.\r\n   * @param {Feature | Feature[]} data\r\n   */\r\n  set feature (data) {\r\n    console.warn(`Please use \"addFeature\" instead`)\r\n    if (!data) {\r\n      throw new Error('feature data cannot be empty.')\r\n    }\r\n    if (!Array.isArray(data)) {\r\n      data = [data]\r\n    }\r\n\r\n    let type = data[0].type\r\n    this.features[type] = []\r\n    for (let element of data) {\r\n      if (!(element instanceof _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\r\n        throw new Error('feature data must be a Feature object.')\r\n      }\r\n\r\n      if (!_language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compareLanguages(element.languageID, this.languageID)) {\r\n        throw new Error('Language \"' + element.languageID.toString() + '\" of a feature does not match a language \"' +\r\n                this.languageID.toString() + '\" of a Lemma object.')\r\n      }\r\n\r\n      this.features[type].push(element)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets a grammatical feature of a lemma. Feature is stored in a `feature.type` property.\r\n   * @param {Feature} feature - A feature object with one or multiple values.\r\n   */\r\n  addFeature (feature) {\r\n    if (!feature) {\r\n      throw new Error('feature data cannot be empty.')\r\n    }\r\n\r\n    if (!(feature instanceof _feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\r\n      throw new Error('feature data must be a Feature object.')\r\n    }\r\n\r\n    if (!_language_model_factory_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compareLanguages(feature.languageID, this.languageID)) {\r\n      throw new Error('Language \"' + feature.languageID.toString() + '\" of a feature does not match a language \"' +\r\n        this.languageID.toString() + '\" of a Lemma object.')\r\n    }\r\n\r\n    this.features[feature.type] = feature\r\n  }\r\n\r\n  /**\r\n   * Sets multiple grammatical features of a lemma.\r\n   * @param {Feature[]} features - Features to be added.\r\n   */\r\n  addFeatures (features) {\r\n    if (!Array.isArray(features)) {\r\n      throw new Error(`Features must be in an array`)\r\n    }\r\n\r\n    for (let feature of features) {\r\n      this.addFeature(feature)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets a translation from python service.\r\n   * @param {Translation} translation - A translation object\r\n   */\r\n  addTranslation (translation) {\r\n    if (!translation) {\r\n      throw new Error('translation data cannot be empty.')\r\n    }\r\n\r\n    if (translation.constructor.name !== 'Translation') {\r\n      throw new Error('translation data must be a Translation object.')\r\n    }\r\n\r\n    this.translation = translation\r\n  }\r\n\r\n  /**\r\n   * Test to see if two lemmas are full homonyms\r\n   * @param {Lemma} lemma the lemma to compare\r\n   * @return {Boolean} true or false\r\n   */\r\n  isFullHomonym (lemma) {\r\n    // returns true if the word and part of speech match\r\n    return this.word === lemma.word &&\r\n      this.features[_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part] &&\r\n      lemma.features[_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part] &&\r\n      this.features[_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part].isEqual(lemma.features[_feature_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].types.part])\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Lemma);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lexeme.js\":\r\n/*!*******************!*\\\r\n  !*** ./lexeme.js ***!\r\n  \\*******************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _lemma_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lemma.js */ \"./lemma.js\");\r\n/* harmony import */ var _inflection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inflection.js */ \"./inflection.js\");\r\n/* harmony import */ var _definition_set__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./definition-set */ \"./definition-set.js\");\r\n/* harmony import */ var _language_model_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./language_model_factory */ \"./language_model_factory.js\");\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * A basic unit of lexical meaning. Contains a primary Lemma object, one or more Inflection objects\r\n * and a DefinitionSet\r\n */\r\nclass Lexeme {\r\n  /**\r\n   * Initializes a Lexeme object.\r\n   * @param {Lemma} lemma - A lemma object.\r\n   * @param {Inflection[]} inflections - An array of inflections.\r\n   * @param {DefinitionSet} meaning - A set of definitions.\r\n   */\r\n  constructor (lemma, inflections, meaning = null) {\r\n    if (!lemma) {\r\n      throw new Error('Lemma should not be empty.')\r\n    }\r\n\r\n    if (!(lemma instanceof _lemma_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])) {\r\n      throw new Error('Lemma should be of Lemma object type.')\r\n    }\r\n\r\n    if (!inflections) {\r\n      throw new Error('Inflections data should not be empty.')\r\n    }\r\n\r\n    if (!Array.isArray(inflections)) {\r\n      throw new Error('Inflection data should be provided in an array.')\r\n    }\r\n\r\n    for (let inflection of inflections) {\r\n      if (!(inflection instanceof _inflection_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\r\n        throw new Error('All inflection data should be of Inflection object type.')\r\n      }\r\n    }\r\n\r\n    if (meaning !== null && !(meaning instanceof _definition_set__WEBPACK_IMPORTED_MODULE_2__[\"default\"])) {\r\n      throw new Error('Meaning should be of DefinitionSet object type.')\r\n    }\r\n\r\n    this.lemma = lemma\r\n    this.inflections = []\r\n    inflections.forEach(i => { this.addInflection(i) })\r\n    this.meaning = meaning || new _definition_set__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.lemma.word, this.lemma.languageID)\r\n    this.disambiguated = false\r\n  }\r\n\r\n  /**\r\n   * add an inflection to the lexeme\r\n   * @param {Inflection} inflection\r\n   */\r\n  addInflection (inflection) {\r\n    inflection.lemma = this.lemma\r\n    this.inflections.push(inflection)\r\n  }\r\n\r\n  /**\r\n   * test to see if a lexeme is populated with meaningful data\r\n   * Returns true if any of these are true:\r\n   *   its lemma has morphological features defined\r\n   *   it has one ore more definitions supplied in the meaning\r\n   *   it has one ore more inflections\r\n   * @return {boolean}\r\n   */\r\n  isPopulated () {\r\n    return Object.entries(this.lemma.features).length > 0 ||\r\n      !this.meaning.isEmpty() ||\r\n      this.inflections.length > 0\r\n  }\r\n\r\n  /**\r\n   * disambiguate with another supplied Lexeme\r\n   * @param {Lexeme} lexeme the lexeme to be disambiguated\r\n   * @param {Lexeme} disambiguator the lexeme to use to disambiguate\r\n   * @return {Lexeme} a new lexeme, if disamibugation was successful disambiguated flag will be set on it\r\n   */\r\n  static disambiguate (lexeme, disambiguator) {\r\n    let newLexeme = new Lexeme(lexeme.lemma, lexeme.inflections, lexeme.meaning)\r\n    if (lexeme.lemma.isFullHomonym(disambiguator.lemma) && disambiguator.inflections.length > 0) {\r\n      newLexeme.disambiguated = true\r\n      let keepInflections = []\r\n      // iterate through this lexemes inflections and keep only thoes that are disambiguatedBy by the supplied lexeme's inflection\r\n      // we want to keep the original inflections rather than just replacing them\r\n      // because the original inflections may have more information\r\n      for (let inflection of newLexeme.inflections) {\r\n        for (let disambiguatorInflection of disambiguator.inflections) {\r\n          if (inflection.disambiguatedBy(disambiguatorInflection)) {\r\n            keepInflections.push(inflection)\r\n          }\r\n        }\r\n      }\r\n      newLexeme.inflections = keepInflections\r\n      // if we couldn't match any existing inflections, then add the disambiguated one\r\n      if (newLexeme.inflections.length === 0) {\r\n        for (let infl of disambiguator.inflections) {\r\n          newLexeme.addInflection(infl)\r\n        }\r\n      }\r\n    }\r\n    return newLexeme\r\n  }\r\n\r\n  getGroupedInflections () {\r\n    let lm = _language_model_factory__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getLanguageModel(this.lemma.languageID)\r\n    return lm.groupInflectionsForDisplay(this.inflections)\r\n  }\r\n\r\n  static readObject (jsonObject) {\r\n    let lemma = _lemma_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].readObject(jsonObject.lemma)\r\n    let inflections = []\r\n    for (let inflection of jsonObject.inflections) {\r\n      inflections.push(_inflection_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].readObject(inflection))\r\n    }\r\n\r\n    let lexeme = new Lexeme(lemma, inflections)\r\n    lexeme.meaning = _definition_set__WEBPACK_IMPORTED_MODULE_2__[\"default\"].readObject(jsonObject.meaning)\r\n    return lexeme\r\n  }\r\n\r\n  /**\r\n   * Get a sort function for an array of lexemes which applies a primary and secondary\r\n   * sort logic using the sort order specified for each feature. Sorts in descending order -\r\n   * higher sort order means it should come first\r\n   * @param {string} primary feature name to use as primary sort key\r\n   * @param {string} secondary feature name to use as secondary sort key\r\n   * @returns {Function} function which can be passed to Array.sort\r\n   */\r\n  static getSortByTwoLemmaFeatures (primary, secondary) {\r\n    return (a, b) => {\r\n      if ((a.lemma.features[primary] && b.lemma.features[primary]) ||\r\n          (!a.lemma.features[primary] && !b.lemma.features[[primary]])) {\r\n        let primarySort\r\n        if (a.lemma.features[primary] && b.lemma.features[primary]) {\r\n          // if both lemmas have the primary sort key, then sort\r\n          primarySort = a.lemma.features[primary].compareTo(b.lemma.features[primary])\r\n        } else {\r\n          // if neither lemma has the primary sort key, then the primary sort is equal\r\n          primarySort = 0\r\n        }\r\n        if (primarySort !== 0) {\r\n          return primarySort\r\n        } else if (a.lemma.features[secondary] && b.lemma.features[secondary]) {\r\n          return a.lemma.features[secondary].compareTo(b.lemma.features[secondary])\r\n        } else if (a.lemma.features[secondary] && !b.lemma.features[secondary]) {\r\n          return -1\r\n        } else if (!a.lemma.features[secondary] && b.lemma.features[secondary]) {\r\n          return 1\r\n        } else {\r\n          // neither have the secondary sort key so they are equal\r\n          return 0\r\n        }\r\n      } else if (a.lemma.features[primary] && !b.lemma.features[primary]) {\r\n        return -1\r\n      } else if (!a.lemma.features[primary] && b.lemma.features[primary]) {\r\n        return 1\r\n      } else {\r\n        return 0\r\n      }\r\n    }\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Lexeme);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./persian_language_model.js\":\r\n/*!***********************************!*\\\r\n  !*** ./persian_language_model.js ***!\r\n  \\***********************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PersianLanguageModel; });\r\n/* harmony import */ var _language_model_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./language_model.js */ \"./language_model.js\");\r\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.js */ \"./constants.js\");\r\n\r\n\r\n\r\nlet typeFeatures = new Map()\r\nlet typeFeaturesInitialized = false\r\n\r\n/**\r\n * @class  PersianLanguageModel is the lass for Persian specific behavior\r\n */\r\nclass PersianLanguageModel extends _language_model_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  static get languageID () { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"LANG_PERSIAN\"] }\r\n\r\n  static get languageCode () { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STR_LANG_CODE_PER\"] }\r\n\r\n  static get languageCodes () { return [_constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STR_LANG_CODE_PER\"], _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STR_LANG_CODE_FAS\"], _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STR_LANG_CODE_FA\"], _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"STR_LANG_CODE_FA_IR\"]] }\r\n\r\n  static get contextForward () { return 0 }\r\n\r\n  static get contextBackward () { return 0 }\r\n\r\n  static get direction () { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"LANG_DIR_RTL\"] }\r\n\r\n  static get baseUnit () { return _constants_js__WEBPACK_IMPORTED_MODULE_1__[\"LANG_UNIT_WORD\"] }\r\n\r\n  static get typeFeatures () {\r\n    if (!typeFeaturesInitialized) { this.initTypeFeatures() }\r\n    return typeFeatures\r\n  }\r\n\r\n  static initTypeFeatures () {\r\n    for (const featureName of this.featureNames) {\r\n      typeFeatures.set(featureName, this.getFeature(featureName))\r\n    }\r\n    typeFeaturesInitialized = true\r\n  }\r\n\r\n  /**\r\n   * Check to see if this language tool can produce an inflection table display\r\n   * for the current node\r\n   */\r\n  static canInflect (node) {\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Returns alternate encodings for a word\r\n   * @param {string} word the word\r\n   * @param {string} preceding optional preceding word\r\n   * @param {string} following optional following word\r\n   * @param {string} encoding optional encoding name to filter the response to\r\n   * @returns {Array} an array of alternate encodings\r\n   */\r\n  static alternateWordEncodings (word, preceding = null, following = null, encoding = null) {\r\n    // Not implemented yet\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * Get a list of valid puncutation for this language\r\n   * @returns {String} a string containing valid puncutation symbols\r\n   */\r\n  static getPunctuation () {\r\n    return \".,;:!?'\\\"(){}\\\\[\\\\]<>/\\\\\\u00A0\\u2010\\u2011\\u2012\\u2013\\u2014\\u2015\\u2018\\u2019\\u201C\\u201D\\u0387\\u00B7\\n\\r\"\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./resource_provider.js\":\r\n/*!******************************!*\\\r\n  !*** ./resource_provider.js ***!\r\n  \\******************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/**\r\n * An abstraction of an Alpheios resource provider\r\n */\r\nclass ResourceProvider {\r\n  /**\r\n   * @constructor\r\n   * @param {string} uri - a unique resource identifier for this provider\r\n   * @param {string} rights - rights text\r\n   * @param {Map} rightsTranslations - optional map of translated rights text - keys should be language of text, values the text\r\n   */\r\n  constructor (uri = '', rights = '', rightsTranslations = new Map([['default', rights]])) {\r\n    this.uri = uri\r\n    this.rights = rightsTranslations\r\n    if (!this.rights.has('default')) {\r\n      this.rights.set('default', rights)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return a string representation of the resource provider, in the default language\r\n   */\r\n  toString () {\r\n    return this.rights.get('default')\r\n  }\r\n\r\n  /**\r\n   * Produce a string representation of the resource provider, in the requested locale if available\r\n   * @param {string} languageCode\r\n   * @return a string representation of the resource provider, in the requested locale if available\r\n   */\r\n  toLocaleString (languageCode) {\r\n    return this.rights.get(languageCode) || this.rights.get('default')\r\n  }\r\n\r\n  static getProxy (provider = null, target = {}) {\r\n    return new Proxy(target, {\r\n      get: function (target, name) {\r\n        return name === 'provider' ? provider : target[name]\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ResourceProvider);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./translation.js\":\r\n/*!************************!*\\\r\n  !*** ./translation.js ***!\r\n  \\************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/**\r\n * stores a scope of lemma translations from python service\r\n * Contains a primary Lemma object\r\n */\r\nclass Translation {\r\n  /**\r\n   * Initializes a Translation object.\r\n   * @param {Lemma} lemma - A lemma object.\r\n   * @param [] meanings - A set of definitions.\r\n\r\n   */\r\n  constructor (lemma, languageCode, translations = []) {\r\n    if (!lemma) {\r\n      throw new Error('Lemma should not be empty.')\r\n    }\r\n    this.lemmaWord = lemma.word\r\n    this.languageCode = languageCode\r\n    this.glosses = translations\r\n  }\r\n\r\n  static readTranslationFromJSONList (lemma, languageCode, translationsList) {\r\n    if (!translationsList || !Array.isArray(translationsList)) {\r\n      throw new Error('Recieved not proper translation list', translationsList)\r\n    }\r\n    let curTranslations = translationsList.find(function (element) { return element.in === lemma.word })\r\n    return new Translation(lemma, languageCode, curTranslations.translations)\r\n  }\r\n\r\n  static loadTranslations (lemma, languageCode, translationsList) {\r\n    lemma.addTranslation(this.readTranslationFromJSONList(lemma, languageCode, translationsList))\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Translation);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"crypto\":\r\n/*!*************************!*\\\r\n  !*** external \"crypto\" ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! crypto */ \"crypto\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=alpheios-data-models.node.js.map\n\n//# sourceURL=webpack:///./node_modules/alpheios-data-models/dist/alpheios-data-models.node.js?");

/***/ }),

/***/ "./node_modules/alpheios-lemma-client/dist/alpheios-lemma-client.node.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/alpheios-lemma-client/dist/alpheios-lemma-client.node.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(true)\r\n\t\tmodule.exports = factory(__webpack_require__(/*! alpheios-data-models */ \"./node_modules/alpheios-data-models/dist/alpheios-data-models.node.js\"));\r\n\telse { var i, a; }\r\n})(global, function(__WEBPACK_EXTERNAL_MODULE_alpheios_data_models__) {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./driver.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"../node_modules/axios/index.js\":\r\n/*!**************************************!*\\\r\n  !*** ../node_modules/axios/index.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"../node_modules/axios/lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/adapters/http.js\":\r\n/*!**************************************************!*\\\r\n  !*** ../node_modules/axios/lib/adapters/http.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../node_modules/axios/lib/core/settle.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../node_modules/axios/lib/helpers/buildURL.js\");\r\nvar http = __webpack_require__(/*! http */ \"http\");\r\nvar https = __webpack_require__(/*! https */ \"https\");\r\nvar httpFollow = __webpack_require__(/*! follow-redirects */ \"../node_modules/follow-redirects/index.js\").http;\r\nvar httpsFollow = __webpack_require__(/*! follow-redirects */ \"../node_modules/follow-redirects/index.js\").https;\r\nvar url = __webpack_require__(/*! url */ \"url\");\r\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"../node_modules/axios/package.json\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"../node_modules/axios/lib/core/createError.js\");\r\nvar enhanceError = __webpack_require__(/*! ../core/enhanceError */ \"../node_modules/axios/lib/core/enhanceError.js\");\r\n\r\n/*eslint consistent-return:0*/\r\nmodule.exports = function httpAdapter(config) {\r\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\r\n    var data = config.data;\r\n    var headers = config.headers;\r\n    var timer;\r\n\r\n    // Set User-Agent (required by some servers)\r\n    // Only set header if it hasn't been set in config\r\n    // See https://github.com/axios/axios/issues/69\r\n    if (!headers['User-Agent'] && !headers['user-agent']) {\r\n      headers['User-Agent'] = 'axios/' + pkg.version;\r\n    }\r\n\r\n    if (data && !utils.isStream(data)) {\r\n      if (Buffer.isBuffer(data)) {\r\n        // Nothing to do...\r\n      } else if (utils.isArrayBuffer(data)) {\r\n        data = new Buffer(new Uint8Array(data));\r\n      } else if (utils.isString(data)) {\r\n        data = new Buffer(data, 'utf-8');\r\n      } else {\r\n        return reject(createError(\r\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\r\n          config\r\n        ));\r\n      }\r\n\r\n      // Add Content-Length header if data exists\r\n      headers['Content-Length'] = data.length;\r\n    }\r\n\r\n    // HTTP basic authentication\r\n    var auth = undefined;\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password || '';\r\n      auth = username + ':' + password;\r\n    }\r\n\r\n    // Parse url\r\n    var parsed = url.parse(config.url);\r\n    var protocol = parsed.protocol || 'http:';\r\n\r\n    if (!auth && parsed.auth) {\r\n      var urlAuth = parsed.auth.split(':');\r\n      var urlUsername = urlAuth[0] || '';\r\n      var urlPassword = urlAuth[1] || '';\r\n      auth = urlUsername + ':' + urlPassword;\r\n    }\r\n\r\n    if (auth) {\r\n      delete headers.Authorization;\r\n    }\r\n\r\n    var isHttps = protocol === 'https:';\r\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\r\n\r\n    var options = {\r\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\r\n      method: config.method,\r\n      headers: headers,\r\n      agent: agent,\r\n      auth: auth\r\n    };\r\n\r\n    if (config.socketPath) {\r\n      options.socketPath = config.socketPath;\r\n    } else {\r\n      options.hostname = parsed.hostname;\r\n      options.port = parsed.port;\r\n    }\r\n\r\n    var proxy = config.proxy;\r\n    if (!proxy && proxy !== false) {\r\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\r\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\r\n      if (proxyUrl) {\r\n        var parsedProxyUrl = url.parse(proxyUrl);\r\n        proxy = {\r\n          host: parsedProxyUrl.hostname,\r\n          port: parsedProxyUrl.port\r\n        };\r\n\r\n        if (parsedProxyUrl.auth) {\r\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\r\n          proxy.auth = {\r\n            username: proxyUrlAuth[0],\r\n            password: proxyUrlAuth[1]\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if (proxy) {\r\n      options.hostname = proxy.host;\r\n      options.host = proxy.host;\r\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\r\n      options.port = proxy.port;\r\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\r\n\r\n      // Basic proxy authorization\r\n      if (proxy.auth) {\r\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\r\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\r\n      }\r\n    }\r\n\r\n    var transport;\r\n    if (config.transport) {\r\n      transport = config.transport;\r\n    } else if (config.maxRedirects === 0) {\r\n      transport = isHttps ? https : http;\r\n    } else {\r\n      if (config.maxRedirects) {\r\n        options.maxRedirects = config.maxRedirects;\r\n      }\r\n      transport = isHttps ? httpsFollow : httpFollow;\r\n    }\r\n\r\n    if (config.maxContentLength && config.maxContentLength > -1) {\r\n      options.maxBodyLength = config.maxContentLength;\r\n    }\r\n\r\n    // Create the request\r\n    var req = transport.request(options, function handleResponse(res) {\r\n      if (req.aborted) return;\r\n\r\n      // Response has been received so kill timer that handles request timeout\r\n      clearTimeout(timer);\r\n      timer = null;\r\n\r\n      // uncompress the response body transparently if required\r\n      var stream = res;\r\n      switch (res.headers['content-encoding']) {\r\n      /*eslint default-case:0*/\r\n      case 'gzip':\r\n      case 'compress':\r\n      case 'deflate':\r\n        // add the unzipper to the body stream processing pipeline\r\n        stream = stream.pipe(zlib.createUnzip());\r\n\r\n        // remove the content-encoding in order to not confuse downstream operations\r\n        delete res.headers['content-encoding'];\r\n        break;\r\n      }\r\n\r\n      // return the last request in case of redirects\r\n      var lastRequest = res.req || req;\r\n\r\n      var response = {\r\n        status: res.statusCode,\r\n        statusText: res.statusMessage,\r\n        headers: res.headers,\r\n        config: config,\r\n        request: lastRequest\r\n      };\r\n\r\n      if (config.responseType === 'stream') {\r\n        response.data = stream;\r\n        settle(resolve, reject, response);\r\n      } else {\r\n        var responseBuffer = [];\r\n        stream.on('data', function handleStreamData(chunk) {\r\n          responseBuffer.push(chunk);\r\n\r\n          // make sure the content length is not over the maxContentLength if specified\r\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\r\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\r\n              config, null, lastRequest));\r\n          }\r\n        });\r\n\r\n        stream.on('error', function handleStreamError(err) {\r\n          if (req.aborted) return;\r\n          reject(enhanceError(err, config, null, lastRequest));\r\n        });\r\n\r\n        stream.on('end', function handleStreamEnd() {\r\n          var responseData = Buffer.concat(responseBuffer);\r\n          if (config.responseType !== 'arraybuffer') {\r\n            responseData = responseData.toString('utf8');\r\n          }\r\n\r\n          response.data = responseData;\r\n          settle(resolve, reject, response);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Handle errors\r\n    req.on('error', function handleRequestError(err) {\r\n      if (req.aborted) return;\r\n      reject(enhanceError(err, config, null, req));\r\n    });\r\n\r\n    // Handle request timeout\r\n    if (config.timeout && !timer) {\r\n      timer = setTimeout(function handleRequestTimeout() {\r\n        req.abort();\r\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\r\n      }, config.timeout);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (req.aborted) return;\r\n\r\n        req.abort();\r\n        reject(cancel);\r\n      });\r\n    }\r\n\r\n    // Send the request\r\n    if (utils.isStream(data)) {\r\n      data.pipe(req);\r\n    } else {\r\n      req.end(data);\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/adapters/xhr.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/adapters/xhr.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../node_modules/axios/lib/core/settle.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../node_modules/axios/lib/helpers/buildURL.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"../node_modules/axios/lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"../node_modules/axios/lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"../node_modules/axios/lib/core/createError.js\");\r\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(/*! ./../helpers/btoa */ \"../node_modules/axios/lib/helpers/btoa.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n    var loadEvent = 'onreadystatechange';\r\n    var xDomain = false;\r\n\r\n    // For IE 8/9 CORS support\r\n    // Only supports POST and GET calls and doesn't returns the response headers.\r\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\r\n    if (\"development\" !== 'test' &&\r\n        typeof window !== 'undefined' &&\r\n        window.XDomainRequest && !('withCredentials' in request) &&\r\n        !isURLSameOrigin(config.url)) {\r\n      request = new window.XDomainRequest();\r\n      loadEvent = 'onload';\r\n      xDomain = true;\r\n      request.onprogress = function handleProgress() {};\r\n      request.ontimeout = function handleTimeout() {};\r\n    }\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password || '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    // Listen for ready state\r\n    request[loadEvent] = function handleLoad() {\r\n      if (!request || (request.readyState !== 4 && !xDomain)) {\r\n        return;\r\n      }\r\n\r\n      // The request errored out and we didn't get a response, this will be\r\n      // handled by onerror instead\r\n      // With one exception: request that using file: protocol, most browsers\r\n      // will return status as 0 even though it's a successful request\r\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n        return;\r\n      }\r\n\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\r\n        status: request.status === 1223 ? 204 : request.status,\r\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"../node_modules/axios/lib/helpers/cookies.js\");\r\n\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\r\n          cookies.read(config.xsrfCookieName) :\r\n          undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (config.withCredentials) {\r\n      request.withCredentials = true;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (config.responseType) {\r\n      try {\r\n        request.responseType = config.responseType;\r\n      } catch (e) {\r\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\r\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\r\n        if (config.responseType !== 'json') {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (requestData === undefined) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/axios.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/lib/axios.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../node_modules/axios/lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"../node_modules/axios/lib/core/Axios.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"../node_modules/axios/lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(utils.merge(defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"../node_modules/axios/lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"../node_modules/axios/lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"../node_modules/axios/lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"../node_modules/axios/lib/helpers/spread.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/Cancel.js\":\r\n/*!**************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/Cancel.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/CancelToken.js\":\r\n/*!*******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/CancelToken.js ***!\r\n  \\*******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"../node_modules/axios/lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/isCancel.js\":\r\n/*!****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/isCancel.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/Axios.js\":\r\n/*!***********************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/Axios.js ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"../node_modules/axios/lib/defaults.js\");\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"../node_modules/axios/lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"../node_modules/axios/lib/core/dispatchRequest.js\");\r\n\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = utils.merge({\r\n      url: arguments[0]\r\n    }, arguments[1]);\r\n  }\r\n\r\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\r\n  config.method = config.method.toLowerCase();\r\n\r\n  // Hook up interceptors middleware\r\n  var chain = [dispatchRequest, undefined];\r\n  var promise = Promise.resolve(config);\r\n\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    chain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  while (chain.length) {\r\n    promise = promise.then(chain.shift(), chain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/InterceptorManager.js\":\r\n/*!************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/InterceptorManager.js ***!\r\n  \\************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/createError.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/createError.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"../node_modules/axios/lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/dispatchRequest.js\":\r\n/*!*********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/dispatchRequest.js ***!\r\n  \\*********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"../node_modules/axios/lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"../node_modules/axios/lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"../node_modules/axios/lib/defaults.js\");\r\nvar isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ \"../node_modules/axios/lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ \"../node_modules/axios/lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Support baseURL config\r\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\r\n    config.url = combineURLs(config.baseURL, config.url);\r\n  }\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData(\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers || {}\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData(\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData(\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/enhanceError.js\":\r\n/*!******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/enhanceError.js ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n  error.request = request;\r\n  error.response = response;\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/settle.js\":\r\n/*!************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/settle.js ***!\r\n  \\************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"../node_modules/axios/lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  // Note: status is not exposed by XDomainRequest\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/transformData.js\":\r\n/*!*******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/transformData.js ***!\r\n  \\*******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn(data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/defaults.js\":\r\n/*!*********************************************!*\\\r\n  !*** ../node_modules/axios/lib/defaults.js ***!\r\n  \\*********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"../node_modules/axios/lib/helpers/normalizeHeaderName.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"../node_modules/axios/lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"../node_modules/axios/lib/adapters/http.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data)) {\r\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    /*eslint no-param-reassign:0*/\r\n    if (typeof data === 'string') {\r\n      try {\r\n        data = JSON.parse(data);\r\n      } catch (e) { /* Ignore */ }\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/bind.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/bind.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/btoa.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/btoa.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\nfunction E() {\r\n  this.message = 'String contains an invalid character';\r\n}\r\nE.prototype = new Error;\r\nE.prototype.code = 5;\r\nE.prototype.name = 'InvalidCharacterError';\r\n\r\nfunction btoa(input) {\r\n  var str = String(input);\r\n  var output = '';\r\n  for (\r\n    // initialize result and counter\r\n    var block, charCode, idx = 0, map = chars;\r\n    // if the next str index does not exist:\r\n    //   change the mapping table to \"=\"\r\n    //   check if d has no fractional digits\r\n    str.charAt(idx | 0) || (map = '=', idx % 1);\r\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\r\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\r\n  ) {\r\n    charCode = str.charCodeAt(idx += 3 / 4);\r\n    if (charCode > 0xFF) {\r\n      throw new E();\r\n    }\r\n    block = block << 8 | charCode;\r\n  }\r\n  return output;\r\n}\r\n\r\nmodule.exports = btoa;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/buildURL.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/buildURL.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%40/gi, '@').\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/combineURLs.js\":\r\n/*!********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/combineURLs.js ***!\r\n  \\********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/cookies.js\":\r\n/*!****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/cookies.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n  (function standardBrowserEnv() {\r\n    return {\r\n      write: function write(name, value, expires, path, domain, secure) {\r\n        var cookie = [];\r\n        cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n        if (utils.isNumber(expires)) {\r\n          cookie.push('expires=' + new Date(expires).toGMTString());\r\n        }\r\n\r\n        if (utils.isString(path)) {\r\n          cookie.push('path=' + path);\r\n        }\r\n\r\n        if (utils.isString(domain)) {\r\n          cookie.push('domain=' + domain);\r\n        }\r\n\r\n        if (secure === true) {\r\n          cookie.push('secure');\r\n        }\r\n\r\n        document.cookie = cookie.join('; ');\r\n      },\r\n\r\n      read: function read(name) {\r\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n        return (match ? decodeURIComponent(match[3]) : null);\r\n      },\r\n\r\n      remove: function remove(name) {\r\n        this.write(name, '', Date.now() - 86400000);\r\n      }\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return {\r\n      write: function write() {},\r\n      read: function read() { return null; },\r\n      remove: function remove() {}\r\n    };\r\n  })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/isAbsoluteURL.js\":\r\n/*!**********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/isAbsoluteURL.js ***!\r\n  \\**********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/isURLSameOrigin.js\":\r\n/*!************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/isURLSameOrigin.js ***!\r\n  \\************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n  (function standardBrowserEnv() {\r\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n    var urlParsingNode = document.createElement('a');\r\n    var originURL;\r\n\r\n    /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n    function resolveURL(url) {\r\n      var href = url;\r\n\r\n      if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n        urlParsingNode.setAttribute('href', href);\r\n        href = urlParsingNode.href;\r\n      }\r\n\r\n      urlParsingNode.setAttribute('href', href);\r\n\r\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n      return {\r\n        href: urlParsingNode.href,\r\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n        host: urlParsingNode.host,\r\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n        hostname: urlParsingNode.hostname,\r\n        port: urlParsingNode.port,\r\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n                  urlParsingNode.pathname :\r\n                  '/' + urlParsingNode.pathname\r\n      };\r\n    }\r\n\r\n    originURL = resolveURL(window.location.href);\r\n\r\n    /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n    return function isURLSameOrigin(requestURL) {\r\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n      return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return function isURLSameOrigin() {\r\n      return true;\r\n    };\r\n  })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/normalizeHeaderName.js\":\r\n/*!****************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/normalizeHeaderName.js ***!\r\n  \\****************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/parseHeaders.js\":\r\n/*!*********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/parseHeaders.js ***!\r\n  \\*********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/spread.js\":\r\n/*!***************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/spread.js ***!\r\n  \\***************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/utils.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/lib/utils.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../node_modules/axios/lib/helpers/bind.js\");\r\nvar isBuffer = __webpack_require__(/*! is-buffer */ \"../node_modules/is-buffer/index.js\");\r\n\r\n/*global toString:true*/\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n      result[key] = merge(result[key], val);\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/package.json\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/package.json ***!\r\n  \\******************************************/\r\n/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, browser, bugs, bundleDependencies, bundlesize, dependencies, deprecated, description, devDependencies, homepage, keywords, license, main, name, repository, scripts, typings, version, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"_from\":\"axios@*\",\"_id\":\"axios@0.18.0\",\"_inBundle\":false,\"_integrity\":\"sha1-MtU+SFHv3AoRmTts0AB4nXDAUQI=\",\"_location\":\"/axios\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"range\",\"registry\":true,\"raw\":\"axios@*\",\"name\":\"axios\",\"escapedName\":\"axios\",\"rawSpec\":\"*\",\"saveSpec\":null,\"fetchSpec\":\"*\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/axios/-/axios-0.18.0.tgz\",\"_shasum\":\"32d53e4851efdc0a11993b6cd000789d70c05102\",\"_spec\":\"axios@*\",\"_where\":\"C:\\\\_Irina\\\\_clients\\\\_Alpheios Project\\\\git\\\\lemma-client\",\"author\":{\"name\":\"Matt Zabriskie\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"bundleDependencies\":false,\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}],\"dependencies\":{\"follow-redirects\":\"^1.3.0\",\"is-buffer\":\"^1.1.5\"},\"deprecated\":false,\"description\":\"Promise based HTTP client for the browser and node.js\",\"devDependencies\":{\"bundlesize\":\"^0.5.7\",\"coveralls\":\"^2.11.9\",\"es6-promise\":\"^4.0.5\",\"grunt\":\"^1.0.1\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.0.0\",\"grunt-contrib-nodeunit\":\"^1.0.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^19.0.0\",\"grunt-karma\":\"^2.0.0\",\"grunt-ts\":\"^6.0.0-beta.3\",\"grunt-webpack\":\"^1.0.18\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^1.3.0\",\"karma-chrome-launcher\":\"^2.0.0\",\"karma-coverage\":\"^1.0.0\",\"karma-firefox-launcher\":\"^1.0.0\",\"karma-jasmine\":\"^1.0.2\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-opera-launcher\":\"^1.0.0\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^1.1.0\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.7\",\"karma-webpack\":\"^1.7.0\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"sinon\":\"^1.17.4\",\"typescript\":\"^2.0.3\",\"url-search-params\":\"^0.6.1\",\"webpack\":\"^1.13.1\",\"webpack-dev-server\":\"^1.14.1\"},\"homepage\":\"https://github.com/axios/axios\",\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"axios\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/axios/axios.git\"},\"scripts\":{\"build\":\"NODE_ENV=production grunt build\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"examples\":\"node ./examples/server.js\",\"postversion\":\"git push && git push --tags\",\"preversion\":\"npm test\",\"start\":\"node ./sandbox/server.js\",\"test\":\"grunt test && bundlesize\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\"},\"typings\":\"./index.d.ts\",\"version\":\"0.18.0\"};\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/index.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/index.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar url = __webpack_require__(/*! url */ \"url\");\r\nvar http = __webpack_require__(/*! http */ \"http\");\r\nvar https = __webpack_require__(/*! https */ \"https\");\r\nvar assert = __webpack_require__(/*! assert */ \"assert\");\r\nvar Writable = __webpack_require__(/*! stream */ \"stream\").Writable;\r\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/follow-redirects/node_modules/debug/src/index.js\")(\"follow-redirects\");\r\n\r\n// RFC7231§4.2.1: Of the request methods defined by this specification,\r\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\r\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\r\n\r\n// Create handlers that pass events from native requests\r\nvar eventHandlers = Object.create(null);\r\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\r\n  eventHandlers[event] = function (arg) {\r\n    this._redirectable.emit(event, arg);\r\n  };\r\n});\r\n\r\n// An HTTP(S) request that can be redirected\r\nfunction RedirectableRequest(options, responseCallback) {\r\n  // Initialize the request\r\n  Writable.call(this);\r\n  options.headers = options.headers || {};\r\n  this._options = options;\r\n  this._redirectCount = 0;\r\n  this._redirects = [];\r\n  this._requestBodyLength = 0;\r\n  this._requestBodyBuffers = [];\r\n\r\n  // Attach a callback if passed\r\n  if (responseCallback) {\r\n    this.on(\"response\", responseCallback);\r\n  }\r\n\r\n  // React to responses of native requests\r\n  var self = this;\r\n  this._onNativeResponse = function (response) {\r\n    self._processResponse(response);\r\n  };\r\n\r\n  // Complete the URL object when necessary\r\n  if (!options.pathname && options.path) {\r\n    var searchPos = options.path.indexOf(\"?\");\r\n    if (searchPos < 0) {\r\n      options.pathname = options.path;\r\n    }\r\n    else {\r\n      options.pathname = options.path.substring(0, searchPos);\r\n      options.search = options.path.substring(searchPos);\r\n    }\r\n  }\r\n\r\n  // Perform the first request\r\n  this._performRequest();\r\n}\r\nRedirectableRequest.prototype = Object.create(Writable.prototype);\r\n\r\n// Writes buffered data to the current native request\r\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\r\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\r\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\r\n  }\r\n  // Ignore empty buffers, since writing them doesn't invoke the callback\r\n  // https://github.com/nodejs/node/issues/22066\r\n  if (data.length === 0) {\r\n    if (callback) {\r\n      callback();\r\n    }\r\n    return;\r\n  }\r\n  // Only write when we don't exceed the maximum body length\r\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\r\n    this._requestBodyLength += data.length;\r\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\r\n    this._currentRequest.write(data, encoding, callback);\r\n  }\r\n  // Error when we exceed the maximum body length\r\n  else {\r\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\r\n    this.abort();\r\n  }\r\n};\r\n\r\n// Ends the current native request\r\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\r\n  var currentRequest = this._currentRequest;\r\n  if (!data) {\r\n    currentRequest.end(null, null, callback);\r\n  }\r\n  else {\r\n    this.write(data, encoding, function () {\r\n      currentRequest.end(null, null, callback);\r\n    });\r\n  }\r\n};\r\n\r\n// Sets a header value on the current native request\r\nRedirectableRequest.prototype.setHeader = function (name, value) {\r\n  this._options.headers[name] = value;\r\n  this._currentRequest.setHeader(name, value);\r\n};\r\n\r\n// Clears a header value on the current native request\r\nRedirectableRequest.prototype.removeHeader = function (name) {\r\n  delete this._options.headers[name];\r\n  this._currentRequest.removeHeader(name);\r\n};\r\n\r\n// Proxy all other public ClientRequest methods\r\n[\r\n  \"abort\", \"flushHeaders\", \"getHeader\",\r\n  \"setNoDelay\", \"setSocketKeepAlive\", \"setTimeout\",\r\n].forEach(function (method) {\r\n  RedirectableRequest.prototype[method] = function (a, b) {\r\n    return this._currentRequest[method](a, b);\r\n  };\r\n});\r\n\r\n// Proxy all public ClientRequest properties\r\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\r\n  Object.defineProperty(RedirectableRequest.prototype, property, {\r\n    get: function () { return this._currentRequest[property]; },\r\n  });\r\n});\r\n\r\n// Executes the next native request (initial or redirect)\r\nRedirectableRequest.prototype._performRequest = function () {\r\n  // Load the native protocol\r\n  var protocol = this._options.protocol;\r\n  var nativeProtocol = this._options.nativeProtocols[protocol];\r\n\r\n  // If specified, use the agent corresponding to the protocol\r\n  // (HTTP and HTTPS use different types of agents)\r\n  if (this._options.agents) {\r\n    var scheme = protocol.substr(0, protocol.length - 1);\r\n    this._options.agent = this._options.agents[scheme];\r\n  }\r\n\r\n  // Create the native request\r\n  var request = this._currentRequest =\r\n        nativeProtocol.request(this._options, this._onNativeResponse);\r\n  this._currentUrl = url.format(this._options);\r\n\r\n  // Set up event handlers\r\n  request._redirectable = this;\r\n  for (var event in eventHandlers) {\r\n    /* istanbul ignore else */\r\n    if (event) {\r\n      request.on(event, eventHandlers[event]);\r\n    }\r\n  }\r\n\r\n  // End a redirected request\r\n  // (The first request must be ended explicitly with RedirectableRequest#end)\r\n  if (this._isRedirect) {\r\n    // Write the request entity and end.\r\n    var requestBodyBuffers = this._requestBodyBuffers;\r\n    (function writeNext() {\r\n      if (requestBodyBuffers.length !== 0) {\r\n        var buffer = requestBodyBuffers.pop();\r\n        request.write(buffer.data, buffer.encoding, writeNext);\r\n      }\r\n      else {\r\n        request.end();\r\n      }\r\n    }());\r\n  }\r\n};\r\n\r\n// Processes a response from the current native request\r\nRedirectableRequest.prototype._processResponse = function (response) {\r\n  // Store the redirected response\r\n  if (this._options.trackRedirects) {\r\n    this._redirects.push({\r\n      url: this._currentUrl,\r\n      headers: response.headers,\r\n      statusCode: response.statusCode,\r\n    });\r\n  }\r\n\r\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\r\n  // that further action needs to be taken by the user agent in order to\r\n  // fulfill the request. If a Location header field is provided,\r\n  // the user agent MAY automatically redirect its request to the URI\r\n  // referenced by the Location field value,\r\n  // even if the specific status code is not understood.\r\n  var location = response.headers.location;\r\n  if (location && this._options.followRedirects !== false &&\r\n      response.statusCode >= 300 && response.statusCode < 400) {\r\n    // RFC7231§6.4: A client SHOULD detect and intervene\r\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\r\n    if (++this._redirectCount > this._options.maxRedirects) {\r\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\r\n      return;\r\n    }\r\n\r\n    // RFC7231§6.4: Automatic redirection needs to done with\r\n    // care for methods not known to be safe […],\r\n    // since the user might not wish to redirect an unsafe request.\r\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\r\n    // that the target resource resides temporarily under a different URI\r\n    // and the user agent MUST NOT change the request method\r\n    // if it performs an automatic redirection to that URI.\r\n    var header;\r\n    var headers = this._options.headers;\r\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\r\n      this._options.method = \"GET\";\r\n      // Drop a possible entity and headers related to it\r\n      this._requestBodyBuffers = [];\r\n      for (header in headers) {\r\n        if (/^content-/i.test(header)) {\r\n          delete headers[header];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Drop the Host header, as the redirect might lead to a different host\r\n    if (!this._isRedirect) {\r\n      for (header in headers) {\r\n        if (/^host$/i.test(header)) {\r\n          delete headers[header];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Perform the redirected request\r\n    var redirectUrl = url.resolve(this._currentUrl, location);\r\n    debug(\"redirecting to\", redirectUrl);\r\n    Object.assign(this._options, url.parse(redirectUrl));\r\n    this._isRedirect = true;\r\n    this._performRequest();\r\n\r\n    // Discard the remainder of the response to avoid waiting for data\r\n    response.destroy();\r\n  }\r\n  else {\r\n    // The response is not a redirect; return it as-is\r\n    response.responseUrl = this._currentUrl;\r\n    response.redirects = this._redirects;\r\n    this.emit(\"response\", response);\r\n\r\n    // Clean up\r\n    this._requestBodyBuffers = [];\r\n  }\r\n};\r\n\r\n// Wraps the key/value object of protocols with redirect functionality\r\nfunction wrap(protocols) {\r\n  // Default settings\r\n  var exports = {\r\n    maxRedirects: 21,\r\n    maxBodyLength: 10 * 1024 * 1024,\r\n  };\r\n\r\n  // Wrap each protocol\r\n  var nativeProtocols = {};\r\n  Object.keys(protocols).forEach(function (scheme) {\r\n    var protocol = scheme + \":\";\r\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\r\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\r\n\r\n    // Executes a request, following redirects\r\n    wrappedProtocol.request = function (options, callback) {\r\n      if (typeof options === \"string\") {\r\n        options = url.parse(options);\r\n        options.maxRedirects = exports.maxRedirects;\r\n      }\r\n      else {\r\n        options = Object.assign({\r\n          protocol: protocol,\r\n          maxRedirects: exports.maxRedirects,\r\n          maxBodyLength: exports.maxBodyLength,\r\n        }, options);\r\n      }\r\n      options.nativeProtocols = nativeProtocols;\r\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\r\n      debug(\"options\", options);\r\n      return new RedirectableRequest(options, callback);\r\n    };\r\n\r\n    // Executes a GET request, following redirects\r\n    wrappedProtocol.get = function (options, callback) {\r\n      var request = wrappedProtocol.request(options, callback);\r\n      request.end();\r\n      return request;\r\n    };\r\n  });\r\n  return exports;\r\n}\r\n\r\n// Exports\r\nmodule.exports = wrap({ http: http, https: https });\r\nmodule.exports.wrap = wrap;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/browser.js\":\r\n/*!**************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/browser.js ***!\r\n  \\**************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = __webpack_require__(/*! ./debug */ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\");\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = 'undefined' != typeof chrome\r\n               && 'undefined' != typeof chrome.storage\r\n                  ? chrome.storage.local\r\n                  : localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\r\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\r\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\r\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\r\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\r\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\r\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\r\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\r\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\r\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\r\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\nfunction useColors() {\r\n  // NB: In an Electron preload script, document will be defined but not fully\r\n  // initialized. Since we know we're in Chrome, we'll just detect this case\r\n  // explicitly\r\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\r\n    return true;\r\n  }\r\n\r\n  // Internet Explorer and Edge do not support colors.\r\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n    return false;\r\n  }\r\n\r\n  // is webkit? http://stackoverflow.com/a/16459606/376773\r\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n    // is firebug? http://stackoverflow.com/a/398120/376773\r\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n    // is firefox >= v31?\r\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n    // double check webkit in userAgent just in case we are in a worker\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nexports.formatters.j = function(v) {\r\n  try {\r\n    return JSON.stringify(v);\r\n  } catch (err) {\r\n    return '[UnexpectedJSONParseError]: ' + err.message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var useColors = this.useColors;\r\n\r\n  args[0] = (useColors ? '%c' : '')\r\n    + this.namespace\r\n    + (useColors ? ' %c' : ' ')\r\n    + args[0]\r\n    + (useColors ? '%c ' : ' ')\r\n    + '+' + exports.humanize(this.diff);\r\n\r\n  if (!useColors) return;\r\n\r\n  var c = 'color: ' + this.color;\r\n  args.splice(1, 0, c, 'color: inherit')\r\n\r\n  // the final \"%c\" is somewhat tricky, because there could be other\r\n  // arguments passed either before or after the %c, so we need to\r\n  // figure out the correct index to insert the CSS into\r\n  var index = 0;\r\n  var lastC = 0;\r\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\r\n    if ('%%' === match) return;\r\n    index++;\r\n    if ('%c' === match) {\r\n      // we only are interested in the *last* %c\r\n      // (the user may have provided their own)\r\n      lastC = index;\r\n    }\r\n  });\r\n\r\n  args.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\n\r\nfunction log() {\r\n  // this hackery is required for IE8/9, where\r\n  // the `console.log` function doesn't have 'apply'\r\n  return 'object' === typeof console\r\n    && console.log\r\n    && Function.prototype.apply.call(console.log, console, arguments);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  try {\r\n    if (null == namespaces) {\r\n      exports.storage.removeItem('debug');\r\n    } else {\r\n      exports.storage.debug = namespaces;\r\n    }\r\n  } catch(e) {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  var r;\r\n  try {\r\n    r = exports.storage.debug;\r\n  } catch(e) {}\r\n\r\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\r\n    r = process.env.DEBUG;\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `localStorage.debug` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n  try {\r\n    return window.localStorage;\r\n  } catch (e) {}\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\":\r\n/*!************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/debug.js ***!\r\n  \\************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = __webpack_require__(/*! ms */ \"../node_modules/ms/index.js\");\r\n\r\n/**\r\n * Active `debug` instances.\r\n */\r\nexports.instances = [];\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColor(namespace) {\r\n  var hash = 0, i;\r\n\r\n  for (i in namespace) {\r\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n\r\n  return exports.colors[Math.abs(hash) % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createDebug(namespace) {\r\n\r\n  var prevTime;\r\n\r\n  function debug() {\r\n    // disabled?\r\n    if (!debug.enabled) return;\r\n\r\n    var self = debug;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // turn the `arguments` into a proper Array\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if ('string' !== typeof args[0]) {\r\n      // anything else let's inspect with %O\r\n      args.unshift('%O');\r\n    }\r\n\r\n    // apply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\r\n      // if we encounter an escaped % then don't increase the array index\r\n      if (match === '%%') return match;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if ('function' === typeof formatter) {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index]` since it's inlined in the `format`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    // apply env-specific formatting (colors, etc.)\r\n    exports.formatArgs.call(self, args);\r\n\r\n    var logFn = debug.log || exports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n\r\n  debug.namespace = namespace;\r\n  debug.enabled = exports.enabled(namespace);\r\n  debug.useColors = exports.useColors();\r\n  debug.color = selectColor(namespace);\r\n  debug.destroy = destroy;\r\n\r\n  // env-specific initialization logic for debug instances\r\n  if ('function' === typeof exports.init) {\r\n    exports.init(debug);\r\n  }\r\n\r\n  exports.instances.push(debug);\r\n\r\n  return debug;\r\n}\r\n\r\nfunction destroy () {\r\n  var index = exports.instances.indexOf(this);\r\n  if (index !== -1) {\r\n    exports.instances.splice(index, 1);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  exports.names = [];\r\n  exports.skips = [];\r\n\r\n  var i;\r\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i].replace(/\\*/g, '.*?');\r\n    if (namespaces[0] === '-') {\r\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n    } else {\r\n      exports.names.push(new RegExp('^' + namespaces + '$'));\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < exports.instances.length; i++) {\r\n    var instance = exports.instances[i];\r\n    instance.enabled = exports.enabled(instance.namespace);\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.enable('');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  if (name[name.length - 1] === '*') {\r\n    return true;\r\n  }\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/index.js\":\r\n/*!************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/index.js ***!\r\n  \\************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Detect Electron renderer process, which is node, but we should\r\n * treat as a browser.\r\n */\r\n\r\nif (typeof process === 'undefined' || process.type === 'renderer') {\r\n  module.exports = __webpack_require__(/*! ./browser.js */ \"../node_modules/follow-redirects/node_modules/debug/src/browser.js\");\r\n} else {\r\n  module.exports = __webpack_require__(/*! ./node.js */ \"../node_modules/follow-redirects/node_modules/debug/src/node.js\");\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/node.js\":\r\n/*!***********************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/node.js ***!\r\n  \\***********************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar tty = __webpack_require__(/*! tty */ \"tty\");\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\n/**\r\n * This is the Node.js implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = __webpack_require__(/*! ./debug */ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\");\r\nexports.init = init;\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\r\n\r\ntry {\r\n  var supportsColor = __webpack_require__(/*! supports-color */ \"../node_modules/supports-color/index.js\");\r\n  if (supportsColor && supportsColor.level >= 2) {\r\n    exports.colors = [\r\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\r\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\r\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\r\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\r\n      205, 206, 207, 208, 209, 214, 215, 220, 221\r\n    ];\r\n  }\r\n} catch (err) {\r\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\r\n}\r\n\r\n/**\r\n * Build up the default `inspectOpts` object from the environment variables.\r\n *\r\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\r\n */\r\n\r\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\r\n  return /^debug_/i.test(key);\r\n}).reduce(function (obj, key) {\r\n  // camel-case\r\n  var prop = key\r\n    .substring(6)\r\n    .toLowerCase()\r\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\r\n\r\n  // coerce string value into JS value\r\n  var val = process.env[key];\r\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\r\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\r\n  else if (val === 'null') val = null;\r\n  else val = Number(val);\r\n\r\n  obj[prop] = val;\r\n  return obj;\r\n}, {});\r\n\r\n/**\r\n * Is stdout a TTY? Colored output is enabled when `true`.\r\n */\r\n\r\nfunction useColors() {\r\n  return 'colors' in exports.inspectOpts\r\n    ? Boolean(exports.inspectOpts.colors)\r\n    : tty.isatty(process.stderr.fd);\r\n}\r\n\r\n/**\r\n * Map %o to `util.inspect()`, all on a single line.\r\n */\r\n\r\nexports.formatters.o = function(v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts)\r\n    .split('\\n').map(function(str) {\r\n      return str.trim()\r\n    }).join(' ');\r\n};\r\n\r\n/**\r\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\r\n */\r\n\r\nexports.formatters.O = function(v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts);\r\n};\r\n\r\n/**\r\n * Adds ANSI color escape codes if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var name = this.namespace;\r\n  var useColors = this.useColors;\r\n\r\n  if (useColors) {\r\n    var c = this.color;\r\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\r\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\r\n\r\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\r\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\r\n  } else {\r\n    args[0] = getDate() + name + ' ' + args[0];\r\n  }\r\n}\r\n\r\nfunction getDate() {\r\n  if (exports.inspectOpts.hideDate) {\r\n    return '';\r\n  } else {\r\n    return new Date().toISOString() + ' ';\r\n  }\r\n}\r\n\r\n/**\r\n * Invokes `util.format()` with the specified arguments and writes to stderr.\r\n */\r\n\r\nfunction log() {\r\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  if (null == namespaces) {\r\n    // If you set a process.env field to null or undefined, it gets cast to the\r\n    // string 'null' or 'undefined'. Just delete instead.\r\n    delete process.env.DEBUG;\r\n  } else {\r\n    process.env.DEBUG = namespaces;\r\n  }\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  return process.env.DEBUG;\r\n}\r\n\r\n/**\r\n * Init logic for `debug` instances.\r\n *\r\n * Create a new `inspectOpts` object in case `useColors` is set\r\n * differently for a particular `debug` instance.\r\n */\r\n\r\nfunction init (debug) {\r\n  debug.inspectOpts = {};\r\n\r\n  var keys = Object.keys(exports.inspectOpts);\r\n  for (var i = 0; i < keys.length; i++) {\r\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\r\n  }\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `process.env.DEBUG` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/is-buffer/index.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/is-buffer/index.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\n/*!\r\n * Determine if an object is a Buffer\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n\r\n// The _isBuffer check is for Safari 5-7 support, because it's missing\r\n// Object.prototype.constructor. Remove this eventually\r\nmodule.exports = function (obj) {\r\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\r\n}\r\n\r\nfunction isBuffer (obj) {\r\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\r\n}\r\n\r\n// For Node v0.10 support. Remove this eventually.\r\nfunction isSlowBuffer (obj) {\r\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/ms/index.js\":\r\n/*!***********************************!*\\\r\n  !*** ../node_modules/ms/index.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isNaN(val) === false) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  if (ms >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (ms >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (ms >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (ms >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  return plural(ms, d, 'day') ||\r\n    plural(ms, h, 'hour') ||\r\n    plural(ms, m, 'minute') ||\r\n    plural(ms, s, 'second') ||\r\n    ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, n, name) {\r\n  if (ms < n) {\r\n    return;\r\n  }\r\n  if (ms < n * 1.5) {\r\n    return Math.floor(ms / n) + ' ' + name;\r\n  }\r\n  return Math.ceil(ms / n) + ' ' + name + 's';\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/promise-polyfill/lib/index.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ../node_modules/promise-polyfill/lib/index.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n// Store setTimeout reference so promise-polyfill will be unaffected by\r\n// other code modifying setTimeout (like sinon.useFakeTimers())\r\nvar setTimeoutFunc = setTimeout;\r\n\r\nfunction noop() {}\r\n\r\n// Polyfill for Function.prototype.bind\r\nfunction bind(fn, thisArg) {\r\n  return function() {\r\n    fn.apply(thisArg, arguments);\r\n  };\r\n}\r\n\r\nfunction Promise(fn) {\r\n  if (!(this instanceof Promise))\r\n    throw new TypeError('Promises must be constructed via new');\r\n  if (typeof fn !== 'function') throw new TypeError('not a function');\r\n  this._state = 0;\r\n  this._handled = false;\r\n  this._value = undefined;\r\n  this._deferreds = [];\r\n\r\n  doResolve(fn, this);\r\n}\r\n\r\nfunction handle(self, deferred) {\r\n  while (self._state === 3) {\r\n    self = self._value;\r\n  }\r\n  if (self._state === 0) {\r\n    self._deferreds.push(deferred);\r\n    return;\r\n  }\r\n  self._handled = true;\r\n  Promise._immediateFn(function() {\r\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\r\n    if (cb === null) {\r\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\r\n      return;\r\n    }\r\n    var ret;\r\n    try {\r\n      ret = cb(self._value);\r\n    } catch (e) {\r\n      reject(deferred.promise, e);\r\n      return;\r\n    }\r\n    resolve(deferred.promise, ret);\r\n  });\r\n}\r\n\r\nfunction resolve(self, newValue) {\r\n  try {\r\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\r\n    if (newValue === self)\r\n      throw new TypeError('A promise cannot be resolved with itself.');\r\n    if (\r\n      newValue &&\r\n      (typeof newValue === 'object' || typeof newValue === 'function')\r\n    ) {\r\n      var then = newValue.then;\r\n      if (newValue instanceof Promise) {\r\n        self._state = 3;\r\n        self._value = newValue;\r\n        finale(self);\r\n        return;\r\n      } else if (typeof then === 'function') {\r\n        doResolve(bind(then, newValue), self);\r\n        return;\r\n      }\r\n    }\r\n    self._state = 1;\r\n    self._value = newValue;\r\n    finale(self);\r\n  } catch (e) {\r\n    reject(self, e);\r\n  }\r\n}\r\n\r\nfunction reject(self, newValue) {\r\n  self._state = 2;\r\n  self._value = newValue;\r\n  finale(self);\r\n}\r\n\r\nfunction finale(self) {\r\n  if (self._state === 2 && self._deferreds.length === 0) {\r\n    Promise._immediateFn(function() {\r\n      if (!self._handled) {\r\n        Promise._unhandledRejectionFn(self._value);\r\n      }\r\n    });\r\n  }\r\n\r\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\r\n    handle(self, self._deferreds[i]);\r\n  }\r\n  self._deferreds = null;\r\n}\r\n\r\nfunction Handler(onFulfilled, onRejected, promise) {\r\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\r\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\r\n  this.promise = promise;\r\n}\r\n\r\n/**\r\n * Take a potentially misbehaving resolver function and make sure\r\n * onFulfilled and onRejected are only called once.\r\n *\r\n * Makes no guarantees about asynchrony.\r\n */\r\nfunction doResolve(fn, self) {\r\n  var done = false;\r\n  try {\r\n    fn(\r\n      function(value) {\r\n        if (done) return;\r\n        done = true;\r\n        resolve(self, value);\r\n      },\r\n      function(reason) {\r\n        if (done) return;\r\n        done = true;\r\n        reject(self, reason);\r\n      }\r\n    );\r\n  } catch (ex) {\r\n    if (done) return;\r\n    done = true;\r\n    reject(self, ex);\r\n  }\r\n}\r\n\r\nPromise.prototype['catch'] = function(onRejected) {\r\n  return this.then(null, onRejected);\r\n};\r\n\r\nPromise.prototype.then = function(onFulfilled, onRejected) {\r\n  var prom = new this.constructor(noop);\r\n\r\n  handle(this, new Handler(onFulfilled, onRejected, prom));\r\n  return prom;\r\n};\r\n\r\nPromise.prototype['finally'] = function(callback) {\r\n  var constructor = this.constructor;\r\n  return this.then(\r\n    function(value) {\r\n      return constructor.resolve(callback()).then(function() {\r\n        return value;\r\n      });\r\n    },\r\n    function(reason) {\r\n      return constructor.resolve(callback()).then(function() {\r\n        return constructor.reject(reason);\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\nPromise.all = function(arr) {\r\n  return new Promise(function(resolve, reject) {\r\n    if (!arr || typeof arr.length === 'undefined')\r\n      throw new TypeError('Promise.all accepts an array');\r\n    var args = Array.prototype.slice.call(arr);\r\n    if (args.length === 0) return resolve([]);\r\n    var remaining = args.length;\r\n\r\n    function res(i, val) {\r\n      try {\r\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\r\n          var then = val.then;\r\n          if (typeof then === 'function') {\r\n            then.call(\r\n              val,\r\n              function(val) {\r\n                res(i, val);\r\n              },\r\n              reject\r\n            );\r\n            return;\r\n          }\r\n        }\r\n        args[i] = val;\r\n        if (--remaining === 0) {\r\n          resolve(args);\r\n        }\r\n      } catch (ex) {\r\n        reject(ex);\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < args.length; i++) {\r\n      res(i, args[i]);\r\n    }\r\n  });\r\n};\r\n\r\nPromise.resolve = function(value) {\r\n  if (value && typeof value === 'object' && value.constructor === Promise) {\r\n    return value;\r\n  }\r\n\r\n  return new Promise(function(resolve) {\r\n    resolve(value);\r\n  });\r\n};\r\n\r\nPromise.reject = function(value) {\r\n  return new Promise(function(resolve, reject) {\r\n    reject(value);\r\n  });\r\n};\r\n\r\nPromise.race = function(values) {\r\n  return new Promise(function(resolve, reject) {\r\n    for (var i = 0, len = values.length; i < len; i++) {\r\n      values[i].then(resolve, reject);\r\n    }\r\n  });\r\n};\r\n\r\n// Use polyfill for setImmediate for performance gains\r\nPromise._immediateFn =\r\n  (typeof setImmediate === 'function' &&\r\n    function(fn) {\r\n      setImmediate(fn);\r\n    }) ||\r\n  function(fn) {\r\n    setTimeoutFunc(fn, 0);\r\n  };\r\n\r\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\r\n  if (typeof console !== 'undefined' && console) {\r\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\r\n  }\r\n};\r\n\r\nmodule.exports = Promise;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/supports-color/index.js\":\r\n/*!***********************************************!*\\\r\n  !*** ../node_modules/supports-color/index.js ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nvar argv = process.argv;\r\n\r\nvar terminator = argv.indexOf('--');\r\nvar hasFlag = function (flag) {\r\n\tflag = '--' + flag;\r\n\tvar pos = argv.indexOf(flag);\r\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\r\n};\r\n\r\nmodule.exports = (function () {\r\n\tif ('FORCE_COLOR' in process.env) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (hasFlag('no-color') ||\r\n\t\thasFlag('no-colors') ||\r\n\t\thasFlag('color=false')) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (hasFlag('color') ||\r\n\t\thasFlag('colors') ||\r\n\t\thasFlag('color=true') ||\r\n\t\thasFlag('color=always')) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (process.stdout && !process.stdout.isTTY) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (process.platform === 'win32') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ('COLORTERM' in process.env) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (process.env.TERM === 'dumb') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n})();\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/whatwg-fetch/fetch.js\":\r\n/*!*********************************************!*\\\r\n  !*** ../node_modules/whatwg-fetch/fetch.js ***!\r\n  \\*********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\n(function(self) {\r\n  'use strict';\r\n\r\n  if (self.fetch) {\r\n    return\r\n  }\r\n\r\n  var support = {\r\n    searchParams: 'URLSearchParams' in self,\r\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\r\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\r\n      try {\r\n        new Blob()\r\n        return true\r\n      } catch(e) {\r\n        return false\r\n      }\r\n    })(),\r\n    formData: 'FormData' in self,\r\n    arrayBuffer: 'ArrayBuffer' in self\r\n  }\r\n\r\n  if (support.arrayBuffer) {\r\n    var viewClasses = [\r\n      '[object Int8Array]',\r\n      '[object Uint8Array]',\r\n      '[object Uint8ClampedArray]',\r\n      '[object Int16Array]',\r\n      '[object Uint16Array]',\r\n      '[object Int32Array]',\r\n      '[object Uint32Array]',\r\n      '[object Float32Array]',\r\n      '[object Float64Array]'\r\n    ]\r\n\r\n    var isDataView = function(obj) {\r\n      return obj && DataView.prototype.isPrototypeOf(obj)\r\n    }\r\n\r\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\r\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\r\n    }\r\n  }\r\n\r\n  function normalizeName(name) {\r\n    if (typeof name !== 'string') {\r\n      name = String(name)\r\n    }\r\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\r\n      throw new TypeError('Invalid character in header field name')\r\n    }\r\n    return name.toLowerCase()\r\n  }\r\n\r\n  function normalizeValue(value) {\r\n    if (typeof value !== 'string') {\r\n      value = String(value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  // Build a destructive iterator for the value list\r\n  function iteratorFor(items) {\r\n    var iterator = {\r\n      next: function() {\r\n        var value = items.shift()\r\n        return {done: value === undefined, value: value}\r\n      }\r\n    }\r\n\r\n    if (support.iterable) {\r\n      iterator[Symbol.iterator] = function() {\r\n        return iterator\r\n      }\r\n    }\r\n\r\n    return iterator\r\n  }\r\n\r\n  function Headers(headers) {\r\n    this.map = {}\r\n\r\n    if (headers instanceof Headers) {\r\n      headers.forEach(function(value, name) {\r\n        this.append(name, value)\r\n      }, this)\r\n    } else if (Array.isArray(headers)) {\r\n      headers.forEach(function(header) {\r\n        this.append(header[0], header[1])\r\n      }, this)\r\n    } else if (headers) {\r\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\r\n        this.append(name, headers[name])\r\n      }, this)\r\n    }\r\n  }\r\n\r\n  Headers.prototype.append = function(name, value) {\r\n    name = normalizeName(name)\r\n    value = normalizeValue(value)\r\n    var oldValue = this.map[name]\r\n    this.map[name] = oldValue ? oldValue+','+value : value\r\n  }\r\n\r\n  Headers.prototype['delete'] = function(name) {\r\n    delete this.map[normalizeName(name)]\r\n  }\r\n\r\n  Headers.prototype.get = function(name) {\r\n    name = normalizeName(name)\r\n    return this.has(name) ? this.map[name] : null\r\n  }\r\n\r\n  Headers.prototype.has = function(name) {\r\n    return this.map.hasOwnProperty(normalizeName(name))\r\n  }\r\n\r\n  Headers.prototype.set = function(name, value) {\r\n    this.map[normalizeName(name)] = normalizeValue(value)\r\n  }\r\n\r\n  Headers.prototype.forEach = function(callback, thisArg) {\r\n    for (var name in this.map) {\r\n      if (this.map.hasOwnProperty(name)) {\r\n        callback.call(thisArg, this.map[name], name, this)\r\n      }\r\n    }\r\n  }\r\n\r\n  Headers.prototype.keys = function() {\r\n    var items = []\r\n    this.forEach(function(value, name) { items.push(name) })\r\n    return iteratorFor(items)\r\n  }\r\n\r\n  Headers.prototype.values = function() {\r\n    var items = []\r\n    this.forEach(function(value) { items.push(value) })\r\n    return iteratorFor(items)\r\n  }\r\n\r\n  Headers.prototype.entries = function() {\r\n    var items = []\r\n    this.forEach(function(value, name) { items.push([name, value]) })\r\n    return iteratorFor(items)\r\n  }\r\n\r\n  if (support.iterable) {\r\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\r\n  }\r\n\r\n  function consumed(body) {\r\n    if (body.bodyUsed) {\r\n      return Promise.reject(new TypeError('Already read'))\r\n    }\r\n    body.bodyUsed = true\r\n  }\r\n\r\n  function fileReaderReady(reader) {\r\n    return new Promise(function(resolve, reject) {\r\n      reader.onload = function() {\r\n        resolve(reader.result)\r\n      }\r\n      reader.onerror = function() {\r\n        reject(reader.error)\r\n      }\r\n    })\r\n  }\r\n\r\n  function readBlobAsArrayBuffer(blob) {\r\n    var reader = new FileReader()\r\n    var promise = fileReaderReady(reader)\r\n    reader.readAsArrayBuffer(blob)\r\n    return promise\r\n  }\r\n\r\n  function readBlobAsText(blob) {\r\n    var reader = new FileReader()\r\n    var promise = fileReaderReady(reader)\r\n    reader.readAsText(blob)\r\n    return promise\r\n  }\r\n\r\n  function readArrayBufferAsText(buf) {\r\n    var view = new Uint8Array(buf)\r\n    var chars = new Array(view.length)\r\n\r\n    for (var i = 0; i < view.length; i++) {\r\n      chars[i] = String.fromCharCode(view[i])\r\n    }\r\n    return chars.join('')\r\n  }\r\n\r\n  function bufferClone(buf) {\r\n    if (buf.slice) {\r\n      return buf.slice(0)\r\n    } else {\r\n      var view = new Uint8Array(buf.byteLength)\r\n      view.set(new Uint8Array(buf))\r\n      return view.buffer\r\n    }\r\n  }\r\n\r\n  function Body() {\r\n    this.bodyUsed = false\r\n\r\n    this._initBody = function(body) {\r\n      this._bodyInit = body\r\n      if (!body) {\r\n        this._bodyText = ''\r\n      } else if (typeof body === 'string') {\r\n        this._bodyText = body\r\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\r\n        this._bodyBlob = body\r\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\r\n        this._bodyFormData = body\r\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n        this._bodyText = body.toString()\r\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\r\n        this._bodyArrayBuffer = bufferClone(body.buffer)\r\n        // IE 10-11 can't handle a DataView body.\r\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\r\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\r\n        this._bodyArrayBuffer = bufferClone(body)\r\n      } else {\r\n        throw new Error('unsupported BodyInit type')\r\n      }\r\n\r\n      if (!this.headers.get('content-type')) {\r\n        if (typeof body === 'string') {\r\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\r\n        } else if (this._bodyBlob && this._bodyBlob.type) {\r\n          this.headers.set('content-type', this._bodyBlob.type)\r\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\r\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\r\n        }\r\n      }\r\n    }\r\n\r\n    if (support.blob) {\r\n      this.blob = function() {\r\n        var rejected = consumed(this)\r\n        if (rejected) {\r\n          return rejected\r\n        }\r\n\r\n        if (this._bodyBlob) {\r\n          return Promise.resolve(this._bodyBlob)\r\n        } else if (this._bodyArrayBuffer) {\r\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\r\n        } else if (this._bodyFormData) {\r\n          throw new Error('could not read FormData body as blob')\r\n        } else {\r\n          return Promise.resolve(new Blob([this._bodyText]))\r\n        }\r\n      }\r\n\r\n      this.arrayBuffer = function() {\r\n        if (this._bodyArrayBuffer) {\r\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\r\n        } else {\r\n          return this.blob().then(readBlobAsArrayBuffer)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.text = function() {\r\n      var rejected = consumed(this)\r\n      if (rejected) {\r\n        return rejected\r\n      }\r\n\r\n      if (this._bodyBlob) {\r\n        return readBlobAsText(this._bodyBlob)\r\n      } else if (this._bodyArrayBuffer) {\r\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\r\n      } else if (this._bodyFormData) {\r\n        throw new Error('could not read FormData body as text')\r\n      } else {\r\n        return Promise.resolve(this._bodyText)\r\n      }\r\n    }\r\n\r\n    if (support.formData) {\r\n      this.formData = function() {\r\n        return this.text().then(decode)\r\n      }\r\n    }\r\n\r\n    this.json = function() {\r\n      return this.text().then(JSON.parse)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // HTTP methods whose capitalization should be normalized\r\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\r\n\r\n  function normalizeMethod(method) {\r\n    var upcased = method.toUpperCase()\r\n    return (methods.indexOf(upcased) > -1) ? upcased : method\r\n  }\r\n\r\n  function Request(input, options) {\r\n    options = options || {}\r\n    var body = options.body\r\n\r\n    if (input instanceof Request) {\r\n      if (input.bodyUsed) {\r\n        throw new TypeError('Already read')\r\n      }\r\n      this.url = input.url\r\n      this.credentials = input.credentials\r\n      if (!options.headers) {\r\n        this.headers = new Headers(input.headers)\r\n      }\r\n      this.method = input.method\r\n      this.mode = input.mode\r\n      if (!body && input._bodyInit != null) {\r\n        body = input._bodyInit\r\n        input.bodyUsed = true\r\n      }\r\n    } else {\r\n      this.url = String(input)\r\n    }\r\n\r\n    this.credentials = options.credentials || this.credentials || 'omit'\r\n    if (options.headers || !this.headers) {\r\n      this.headers = new Headers(options.headers)\r\n    }\r\n    this.method = normalizeMethod(options.method || this.method || 'GET')\r\n    this.mode = options.mode || this.mode || null\r\n    this.referrer = null\r\n\r\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\r\n      throw new TypeError('Body not allowed for GET or HEAD requests')\r\n    }\r\n    this._initBody(body)\r\n  }\r\n\r\n  Request.prototype.clone = function() {\r\n    return new Request(this, { body: this._bodyInit })\r\n  }\r\n\r\n  function decode(body) {\r\n    var form = new FormData()\r\n    body.trim().split('&').forEach(function(bytes) {\r\n      if (bytes) {\r\n        var split = bytes.split('=')\r\n        var name = split.shift().replace(/\\+/g, ' ')\r\n        var value = split.join('=').replace(/\\+/g, ' ')\r\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\r\n      }\r\n    })\r\n    return form\r\n  }\r\n\r\n  function parseHeaders(rawHeaders) {\r\n    var headers = new Headers()\r\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\r\n    // https://tools.ietf.org/html/rfc7230#section-3.2\r\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\r\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\r\n      var parts = line.split(':')\r\n      var key = parts.shift().trim()\r\n      if (key) {\r\n        var value = parts.join(':').trim()\r\n        headers.append(key, value)\r\n      }\r\n    })\r\n    return headers\r\n  }\r\n\r\n  Body.call(Request.prototype)\r\n\r\n  function Response(bodyInit, options) {\r\n    if (!options) {\r\n      options = {}\r\n    }\r\n\r\n    this.type = 'default'\r\n    this.status = options.status === undefined ? 200 : options.status\r\n    this.ok = this.status >= 200 && this.status < 300\r\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\r\n    this.headers = new Headers(options.headers)\r\n    this.url = options.url || ''\r\n    this._initBody(bodyInit)\r\n  }\r\n\r\n  Body.call(Response.prototype)\r\n\r\n  Response.prototype.clone = function() {\r\n    return new Response(this._bodyInit, {\r\n      status: this.status,\r\n      statusText: this.statusText,\r\n      headers: new Headers(this.headers),\r\n      url: this.url\r\n    })\r\n  }\r\n\r\n  Response.error = function() {\r\n    var response = new Response(null, {status: 0, statusText: ''})\r\n    response.type = 'error'\r\n    return response\r\n  }\r\n\r\n  var redirectStatuses = [301, 302, 303, 307, 308]\r\n\r\n  Response.redirect = function(url, status) {\r\n    if (redirectStatuses.indexOf(status) === -1) {\r\n      throw new RangeError('Invalid status code')\r\n    }\r\n\r\n    return new Response(null, {status: status, headers: {location: url}})\r\n  }\r\n\r\n  self.Headers = Headers\r\n  self.Request = Request\r\n  self.Response = Response\r\n\r\n  self.fetch = function(input, init) {\r\n    return new Promise(function(resolve, reject) {\r\n      var request = new Request(input, init)\r\n      var xhr = new XMLHttpRequest()\r\n\r\n      xhr.onload = function() {\r\n        var options = {\r\n          status: xhr.status,\r\n          statusText: xhr.statusText,\r\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\r\n        }\r\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\r\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\r\n        resolve(new Response(body, options))\r\n      }\r\n\r\n      xhr.onerror = function() {\r\n        reject(new TypeError('Network request failed'))\r\n      }\r\n\r\n      xhr.ontimeout = function() {\r\n        reject(new TypeError('Network request failed'))\r\n      }\r\n\r\n      xhr.open(request.method, request.url, true)\r\n\r\n      if (request.credentials === 'include') {\r\n        xhr.withCredentials = true\r\n      } else if (request.credentials === 'omit') {\r\n        xhr.withCredentials = false\r\n      }\r\n\r\n      if ('responseType' in xhr && support.blob) {\r\n        xhr.responseType = 'blob'\r\n      }\r\n\r\n      request.headers.forEach(function(value, name) {\r\n        xhr.setRequestHeader(name, value)\r\n      })\r\n\r\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\r\n    })\r\n  }\r\n  self.fetch.polyfill = true\r\n})(typeof self !== 'undefined' ? self : this);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./alpheios/alpheios_adapter.js\":\r\n/*!**************************************!*\\\r\n  !*** ./alpheios/alpheios_adapter.js ***!\r\n  \\**************************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.json */ \"./alpheios/config.json\");\r\nvar _config_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./config.json */ \"./alpheios/config.json\", 1);\r\n/* harmony import */ var promise_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! promise-polyfill */ \"../node_modules/promise-polyfill/lib/index.js\");\r\n/* harmony import */ var promise_polyfill__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(promise_polyfill__WEBPACK_IMPORTED_MODULE_1__);\r\n/* harmony import */ var whatwg_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! whatwg-fetch */ \"../node_modules/whatwg-fetch/fetch.js\");\r\n/* harmony import */ var whatwg_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(whatwg_fetch__WEBPACK_IMPORTED_MODULE_2__);\r\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\r\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_3__);\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AlpheiosLemmaTranslationsAdapter {\r\n  /**\r\n   * A Client Adapter for the Alpheios V1 Lemma service\r\n   * @constructor\r\n   * @param {Object} config - JSON configuration object override\r\n   */\r\n  constructor (config = null) {\r\n    if (config == null) {\r\n      try {\r\n        let fullconfig = JSON.parse(_config_json__WEBPACK_IMPORTED_MODULE_0__)\r\n        this.config = fullconfig\r\n      } catch (e) {\r\n        this.config = _config_json__WEBPACK_IMPORTED_MODULE_0__\r\n      }\r\n    } else {\r\n      this.config = config\r\n    }\r\n    this.mapLangUri = {}\r\n  }\r\n  /**\r\n   * Loads a available res languages for available lang array from the config\r\n   * @returns\r\n   */\r\n  async getAvailableResLang (avaLangIntem) {\r\n    let adapter = this\r\n\r\n    let urlAvaLangsRes = adapter.config.url + '/' + avaLangIntem + '/'\r\n\r\n    let unparsed = await adapter._loadJSON(urlAvaLangsRes)\r\n\r\n    let mapLangUri = {}\r\n    unparsed.forEach(function (langItem) {\r\n      mapLangUri[langItem.lang] = langItem.uri\r\n    })\r\n\r\n    adapter.mapLangUri[avaLangIntem] = mapLangUri\r\n  }\r\n  /**\r\n   * Loads translationsList for an array of Lemmas from inLang to outLang\r\n   * @param {Lemma []} lemmaList - An array of lemmas for translation\r\n   * @param {string} inLang - source lang of the input\r\n   * @param {string} outLang - result lang for the input\r\n   * @returns {Promise} a Promise that resolves to the text contents of the loaded file\r\n   */\r\n  async getTranslationsList (lemmaList, inLang, outLang) {\r\n    let adapter = this\r\n    let input = ''\r\n\r\n    for (let lemma of lemmaList) {\r\n      input += lemma.word + ','\r\n    }\r\n    if (input.length > 0) {\r\n      input = input.substr(0, input.length - 1)\r\n    }\r\n\r\n    if (adapter.mapLangUri[inLang] === undefined) {\r\n      await adapter.getAvailableResLang(inLang)\r\n    }\r\n\r\n    if (input.length > 0 && adapter.mapLangUri[inLang] !== undefined && adapter.mapLangUri[inLang][outLang] !== undefined) {\r\n      let urlTranslations = adapter.mapLangUri[inLang][outLang] + '?input=' + input\r\n      let unparsed = await adapter._loadJSON(urlTranslations)\r\n      return unparsed\r\n    }\r\n    return null\r\n  }\r\n\r\n  fetchWindow (url) {\r\n    return new promise_polyfill__WEBPACK_IMPORTED_MODULE_1___default.a((resolve, reject) => {\r\n      window.fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Accept': 'application/json'\r\n        }\r\n      })\r\n        .then(function (res) {\r\n          return res.json()\r\n        })\r\n        .then(\r\n          function (json) {\r\n            resolve(json)\r\n          }\r\n        ).catch((error) => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  async fetchAxios (url) {\r\n    try {\r\n      let res = await axios__WEBPACK_IMPORTED_MODULE_3___default.a.get(encodeURI(url))\r\n      return res.data\r\n    } catch (err) {\r\n      // console.info('Error occured with translations', err.message)\r\n    }\r\n  }\r\n  /**\r\n   * Loads a json data from a URL\r\n   * @param {string} url - the url\r\n   * @returns {Promise} a Promise that resolves to the text contents of the loaded file\r\n   */\r\n  _loadJSON (url) {\r\n    if (typeof window !== 'undefined') {\r\n      return this.fetchWindow(url)\r\n    } else {\r\n      return this.fetchAxios(url)\r\n    }\r\n  }\r\n  /**\r\n   * Get a configuration setting for this lemma client instance\r\n   * @param {string} property\r\n   * @returns {string} the value of the property\r\n   */\r\n  getConfig (property) {\r\n    return this.config[property]\r\n  }\r\n\r\n  /**\r\n   * Get fisrt available lang from config for unit testing\r\n   * @returns {string} the value of the property\r\n   */\r\n  getInLangForTesting (property) {\r\n    return this.config.availableLangSource[0]\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (AlpheiosLemmaTranslationsAdapter);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./alpheios/config.json\":\r\n/*!******************************!*\\\r\n  !*** ./alpheios/config.json ***!\r\n  \\******************************/\r\n/*! exports provided: url, availableLangSource, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"url\":\"https://ats.alpheios.net\",\"availableLangSource\":[\"lat\"]};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./driver.js\":\r\n/*!*******************!*\\\r\n  !*** ./driver.js ***!\r\n  \\*******************/\r\n/*! exports provided: LemmaTranslations, AlpheiosLemmaTranslationsAdapter */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alpheios/alpheios_adapter */ \"./alpheios/alpheios_adapter.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AlpheiosLemmaTranslationsAdapter\", function() { return _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\r\n\r\n/* harmony import */ var _lemma_translations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lemma_translations */ \"./lemma_translations.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LemmaTranslations\", function() { return _lemma_translations__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\r\n\r\n\r\n\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lemma_translations.js\":\r\n/*!*******************************!*\\\r\n  !*** ./lemma_translations.js ***!\r\n  \\*******************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LemmaTranslations; });\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__);\r\n/* harmony import */ var _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alpheios/alpheios_adapter */ \"./alpheios/alpheios_adapter.js\");\r\n/* harmony import */ var promise_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! promise-polyfill */ \"../node_modules/promise-polyfill/lib/index.js\");\r\n/* harmony import */ var promise_polyfill__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(promise_polyfill__WEBPACK_IMPORTED_MODULE_2__);\r\n\r\n\r\n\r\n\r\nclass LemmaTranslations {\r\n  static get defaultLang () {\r\n    return 'eng'\r\n  }\r\n\r\n  static defineOutLang (browserLang) {\r\n    let langMap = {\r\n      'en-US': 'eng',\r\n      'it': 'ita',\r\n      'pt': 'por',\r\n      'ca': 'cat',\r\n      'fr': 'fre',\r\n      'de': 'ger',\r\n      'es': 'spa'\r\n    }\r\n    return langMap[browserLang] || this.defaultLang\r\n  }\r\n\r\n  /**\r\n   * Send request for getting translations for lemmas list as a Promise\r\n   * @param {Lemma[]} lemma array - An array of lemmas we need translations for.\r\n   * @param {String} inLang - a lang for current lemmas.\r\n   * @param {String} outLang - a lang for translation.\r\n   * @return {Promise} A Promise for the translation request.\r\n   */\r\n\r\n  static fetchTranslations (lemmaList, inLang, browserLang) {\r\n    let outLang = this.defineOutLang(browserLang)\r\n    return new promise_polyfill__WEBPACK_IMPORTED_MODULE_2___default.a((resolve, reject) => {\r\n      try {\r\n        let lemmaAdapter = new _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\r\n        lemmaAdapter.getTranslationsList(lemmaList, inLang, outLang)\r\n          .then(function (translationsList) {\r\n            for (let lemma of lemmaList) {\r\n              alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__[\"Translation\"].loadTranslations(lemma, outLang, translationsList)\r\n            }\r\n            resolve(translationsList)\r\n          })\r\n          .catch(error => {\r\n            reject(error)\r\n          })\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"alpheios-data-models\":\r\n/*!***************************************!*\\\r\n  !*** external \"alpheios-data-models\" ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_alpheios_data_models__;\r\n\r\n/***/ }),\r\n\r\n/***/ \"assert\":\r\n/*!*************************!*\\\r\n  !*** external \"assert\" ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! assert */ \"assert\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"http\":\r\n/*!***********************!*\\\r\n  !*** external \"http\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! http */ \"http\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"https\":\r\n/*!************************!*\\\r\n  !*** external \"https\" ***!\r\n  \\************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! https */ \"https\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"stream\":\r\n/*!*************************!*\\\r\n  !*** external \"stream\" ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! stream */ \"stream\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"tty\":\r\n/*!**********************!*\\\r\n  !*** external \"tty\" ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! tty */ \"tty\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"url\":\r\n/*!**********************!*\\\r\n  !*** external \"url\" ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! url */ \"url\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"util\":\r\n/*!***********************!*\\\r\n  !*** external \"util\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! util */ \"util\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"zlib\":\r\n/*!***********************!*\\\r\n  !*** external \"zlib\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! zlib */ \"zlib\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=alpheios-lemma-client.node.js.map\n\n//# sourceURL=webpack:///./node_modules/alpheios-lemma-client/dist/alpheios-lemma-client.node.js?");

/***/ }),

/***/ "./node_modules/alpheios-lexicon-client/dist/alpheios-lexicon-client.node.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/alpheios-lexicon-client/dist/alpheios-lexicon-client.node.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(true)\r\n\t\tmodule.exports = factory(__webpack_require__(/*! alpheios-data-models */ \"./node_modules/alpheios-data-models/dist/alpheios-data-models.node.js\"));\r\n\telse { var i, a; }\r\n})(global, function(__WEBPACK_EXTERNAL_MODULE_alpheios_data_models__) {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./driver.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"../node_modules/axios/index.js\":\r\n/*!**************************************!*\\\r\n  !*** ../node_modules/axios/index.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"../node_modules/axios/lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/adapters/http.js\":\r\n/*!**************************************************!*\\\r\n  !*** ../node_modules/axios/lib/adapters/http.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../node_modules/axios/lib/core/settle.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../node_modules/axios/lib/helpers/buildURL.js\");\r\nvar http = __webpack_require__(/*! http */ \"http\");\r\nvar https = __webpack_require__(/*! https */ \"https\");\r\nvar httpFollow = __webpack_require__(/*! follow-redirects */ \"../node_modules/follow-redirects/index.js\").http;\r\nvar httpsFollow = __webpack_require__(/*! follow-redirects */ \"../node_modules/follow-redirects/index.js\").https;\r\nvar url = __webpack_require__(/*! url */ \"url\");\r\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"../node_modules/axios/package.json\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"../node_modules/axios/lib/core/createError.js\");\r\nvar enhanceError = __webpack_require__(/*! ../core/enhanceError */ \"../node_modules/axios/lib/core/enhanceError.js\");\r\n\r\n/*eslint consistent-return:0*/\r\nmodule.exports = function httpAdapter(config) {\r\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\r\n    var data = config.data;\r\n    var headers = config.headers;\r\n    var timer;\r\n\r\n    // Set User-Agent (required by some servers)\r\n    // Only set header if it hasn't been set in config\r\n    // See https://github.com/axios/axios/issues/69\r\n    if (!headers['User-Agent'] && !headers['user-agent']) {\r\n      headers['User-Agent'] = 'axios/' + pkg.version;\r\n    }\r\n\r\n    if (data && !utils.isStream(data)) {\r\n      if (Buffer.isBuffer(data)) {\r\n        // Nothing to do...\r\n      } else if (utils.isArrayBuffer(data)) {\r\n        data = new Buffer(new Uint8Array(data));\r\n      } else if (utils.isString(data)) {\r\n        data = new Buffer(data, 'utf-8');\r\n      } else {\r\n        return reject(createError(\r\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\r\n          config\r\n        ));\r\n      }\r\n\r\n      // Add Content-Length header if data exists\r\n      headers['Content-Length'] = data.length;\r\n    }\r\n\r\n    // HTTP basic authentication\r\n    var auth = undefined;\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password || '';\r\n      auth = username + ':' + password;\r\n    }\r\n\r\n    // Parse url\r\n    var parsed = url.parse(config.url);\r\n    var protocol = parsed.protocol || 'http:';\r\n\r\n    if (!auth && parsed.auth) {\r\n      var urlAuth = parsed.auth.split(':');\r\n      var urlUsername = urlAuth[0] || '';\r\n      var urlPassword = urlAuth[1] || '';\r\n      auth = urlUsername + ':' + urlPassword;\r\n    }\r\n\r\n    if (auth) {\r\n      delete headers.Authorization;\r\n    }\r\n\r\n    var isHttps = protocol === 'https:';\r\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\r\n\r\n    var options = {\r\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\r\n      method: config.method,\r\n      headers: headers,\r\n      agent: agent,\r\n      auth: auth\r\n    };\r\n\r\n    if (config.socketPath) {\r\n      options.socketPath = config.socketPath;\r\n    } else {\r\n      options.hostname = parsed.hostname;\r\n      options.port = parsed.port;\r\n    }\r\n\r\n    var proxy = config.proxy;\r\n    if (!proxy && proxy !== false) {\r\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\r\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\r\n      if (proxyUrl) {\r\n        var parsedProxyUrl = url.parse(proxyUrl);\r\n        proxy = {\r\n          host: parsedProxyUrl.hostname,\r\n          port: parsedProxyUrl.port\r\n        };\r\n\r\n        if (parsedProxyUrl.auth) {\r\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\r\n          proxy.auth = {\r\n            username: proxyUrlAuth[0],\r\n            password: proxyUrlAuth[1]\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if (proxy) {\r\n      options.hostname = proxy.host;\r\n      options.host = proxy.host;\r\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\r\n      options.port = proxy.port;\r\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\r\n\r\n      // Basic proxy authorization\r\n      if (proxy.auth) {\r\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\r\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\r\n      }\r\n    }\r\n\r\n    var transport;\r\n    if (config.transport) {\r\n      transport = config.transport;\r\n    } else if (config.maxRedirects === 0) {\r\n      transport = isHttps ? https : http;\r\n    } else {\r\n      if (config.maxRedirects) {\r\n        options.maxRedirects = config.maxRedirects;\r\n      }\r\n      transport = isHttps ? httpsFollow : httpFollow;\r\n    }\r\n\r\n    if (config.maxContentLength && config.maxContentLength > -1) {\r\n      options.maxBodyLength = config.maxContentLength;\r\n    }\r\n\r\n    // Create the request\r\n    var req = transport.request(options, function handleResponse(res) {\r\n      if (req.aborted) return;\r\n\r\n      // Response has been received so kill timer that handles request timeout\r\n      clearTimeout(timer);\r\n      timer = null;\r\n\r\n      // uncompress the response body transparently if required\r\n      var stream = res;\r\n      switch (res.headers['content-encoding']) {\r\n      /*eslint default-case:0*/\r\n      case 'gzip':\r\n      case 'compress':\r\n      case 'deflate':\r\n        // add the unzipper to the body stream processing pipeline\r\n        stream = stream.pipe(zlib.createUnzip());\r\n\r\n        // remove the content-encoding in order to not confuse downstream operations\r\n        delete res.headers['content-encoding'];\r\n        break;\r\n      }\r\n\r\n      // return the last request in case of redirects\r\n      var lastRequest = res.req || req;\r\n\r\n      var response = {\r\n        status: res.statusCode,\r\n        statusText: res.statusMessage,\r\n        headers: res.headers,\r\n        config: config,\r\n        request: lastRequest\r\n      };\r\n\r\n      if (config.responseType === 'stream') {\r\n        response.data = stream;\r\n        settle(resolve, reject, response);\r\n      } else {\r\n        var responseBuffer = [];\r\n        stream.on('data', function handleStreamData(chunk) {\r\n          responseBuffer.push(chunk);\r\n\r\n          // make sure the content length is not over the maxContentLength if specified\r\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\r\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\r\n              config, null, lastRequest));\r\n          }\r\n        });\r\n\r\n        stream.on('error', function handleStreamError(err) {\r\n          if (req.aborted) return;\r\n          reject(enhanceError(err, config, null, lastRequest));\r\n        });\r\n\r\n        stream.on('end', function handleStreamEnd() {\r\n          var responseData = Buffer.concat(responseBuffer);\r\n          if (config.responseType !== 'arraybuffer') {\r\n            responseData = responseData.toString('utf8');\r\n          }\r\n\r\n          response.data = responseData;\r\n          settle(resolve, reject, response);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Handle errors\r\n    req.on('error', function handleRequestError(err) {\r\n      if (req.aborted) return;\r\n      reject(enhanceError(err, config, null, req));\r\n    });\r\n\r\n    // Handle request timeout\r\n    if (config.timeout && !timer) {\r\n      timer = setTimeout(function handleRequestTimeout() {\r\n        req.abort();\r\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\r\n      }, config.timeout);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (req.aborted) return;\r\n\r\n        req.abort();\r\n        reject(cancel);\r\n      });\r\n    }\r\n\r\n    // Send the request\r\n    if (utils.isStream(data)) {\r\n      data.pipe(req);\r\n    } else {\r\n      req.end(data);\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/adapters/xhr.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/adapters/xhr.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../node_modules/axios/lib/core/settle.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../node_modules/axios/lib/helpers/buildURL.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"../node_modules/axios/lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"../node_modules/axios/lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"../node_modules/axios/lib/core/createError.js\");\r\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(/*! ./../helpers/btoa */ \"../node_modules/axios/lib/helpers/btoa.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n    var loadEvent = 'onreadystatechange';\r\n    var xDomain = false;\r\n\r\n    // For IE 8/9 CORS support\r\n    // Only supports POST and GET calls and doesn't returns the response headers.\r\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\r\n    if (\"development\" !== 'test' &&\r\n        typeof window !== 'undefined' &&\r\n        window.XDomainRequest && !('withCredentials' in request) &&\r\n        !isURLSameOrigin(config.url)) {\r\n      request = new window.XDomainRequest();\r\n      loadEvent = 'onload';\r\n      xDomain = true;\r\n      request.onprogress = function handleProgress() {};\r\n      request.ontimeout = function handleTimeout() {};\r\n    }\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password || '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    // Listen for ready state\r\n    request[loadEvent] = function handleLoad() {\r\n      if (!request || (request.readyState !== 4 && !xDomain)) {\r\n        return;\r\n      }\r\n\r\n      // The request errored out and we didn't get a response, this will be\r\n      // handled by onerror instead\r\n      // With one exception: request that using file: protocol, most browsers\r\n      // will return status as 0 even though it's a successful request\r\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n        return;\r\n      }\r\n\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\r\n        status: request.status === 1223 ? 204 : request.status,\r\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"../node_modules/axios/lib/helpers/cookies.js\");\r\n\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\r\n          cookies.read(config.xsrfCookieName) :\r\n          undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (config.withCredentials) {\r\n      request.withCredentials = true;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (config.responseType) {\r\n      try {\r\n        request.responseType = config.responseType;\r\n      } catch (e) {\r\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\r\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\r\n        if (config.responseType !== 'json') {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (requestData === undefined) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/axios.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/lib/axios.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../node_modules/axios/lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"../node_modules/axios/lib/core/Axios.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"../node_modules/axios/lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(utils.merge(defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"../node_modules/axios/lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"../node_modules/axios/lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"../node_modules/axios/lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"../node_modules/axios/lib/helpers/spread.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/Cancel.js\":\r\n/*!**************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/Cancel.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/CancelToken.js\":\r\n/*!*******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/CancelToken.js ***!\r\n  \\*******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"../node_modules/axios/lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/isCancel.js\":\r\n/*!****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/isCancel.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/Axios.js\":\r\n/*!***********************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/Axios.js ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"../node_modules/axios/lib/defaults.js\");\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"../node_modules/axios/lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"../node_modules/axios/lib/core/dispatchRequest.js\");\r\n\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = utils.merge({\r\n      url: arguments[0]\r\n    }, arguments[1]);\r\n  }\r\n\r\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\r\n  config.method = config.method.toLowerCase();\r\n\r\n  // Hook up interceptors middleware\r\n  var chain = [dispatchRequest, undefined];\r\n  var promise = Promise.resolve(config);\r\n\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    chain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  while (chain.length) {\r\n    promise = promise.then(chain.shift(), chain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/InterceptorManager.js\":\r\n/*!************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/InterceptorManager.js ***!\r\n  \\************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/createError.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/createError.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"../node_modules/axios/lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/dispatchRequest.js\":\r\n/*!*********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/dispatchRequest.js ***!\r\n  \\*********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"../node_modules/axios/lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"../node_modules/axios/lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"../node_modules/axios/lib/defaults.js\");\r\nvar isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ \"../node_modules/axios/lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ \"../node_modules/axios/lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Support baseURL config\r\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\r\n    config.url = combineURLs(config.baseURL, config.url);\r\n  }\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData(\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers || {}\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData(\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData(\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/enhanceError.js\":\r\n/*!******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/enhanceError.js ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n  error.request = request;\r\n  error.response = response;\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/settle.js\":\r\n/*!************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/settle.js ***!\r\n  \\************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"../node_modules/axios/lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  // Note: status is not exposed by XDomainRequest\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/transformData.js\":\r\n/*!*******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/transformData.js ***!\r\n  \\*******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn(data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/defaults.js\":\r\n/*!*********************************************!*\\\r\n  !*** ../node_modules/axios/lib/defaults.js ***!\r\n  \\*********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"../node_modules/axios/lib/helpers/normalizeHeaderName.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"../node_modules/axios/lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"../node_modules/axios/lib/adapters/http.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data)) {\r\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    /*eslint no-param-reassign:0*/\r\n    if (typeof data === 'string') {\r\n      try {\r\n        data = JSON.parse(data);\r\n      } catch (e) { /* Ignore */ }\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/bind.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/bind.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/btoa.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/btoa.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\nfunction E() {\r\n  this.message = 'String contains an invalid character';\r\n}\r\nE.prototype = new Error;\r\nE.prototype.code = 5;\r\nE.prototype.name = 'InvalidCharacterError';\r\n\r\nfunction btoa(input) {\r\n  var str = String(input);\r\n  var output = '';\r\n  for (\r\n    // initialize result and counter\r\n    var block, charCode, idx = 0, map = chars;\r\n    // if the next str index does not exist:\r\n    //   change the mapping table to \"=\"\r\n    //   check if d has no fractional digits\r\n    str.charAt(idx | 0) || (map = '=', idx % 1);\r\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\r\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\r\n  ) {\r\n    charCode = str.charCodeAt(idx += 3 / 4);\r\n    if (charCode > 0xFF) {\r\n      throw new E();\r\n    }\r\n    block = block << 8 | charCode;\r\n  }\r\n  return output;\r\n}\r\n\r\nmodule.exports = btoa;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/buildURL.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/buildURL.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%40/gi, '@').\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/combineURLs.js\":\r\n/*!********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/combineURLs.js ***!\r\n  \\********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/cookies.js\":\r\n/*!****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/cookies.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n  (function standardBrowserEnv() {\r\n    return {\r\n      write: function write(name, value, expires, path, domain, secure) {\r\n        var cookie = [];\r\n        cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n        if (utils.isNumber(expires)) {\r\n          cookie.push('expires=' + new Date(expires).toGMTString());\r\n        }\r\n\r\n        if (utils.isString(path)) {\r\n          cookie.push('path=' + path);\r\n        }\r\n\r\n        if (utils.isString(domain)) {\r\n          cookie.push('domain=' + domain);\r\n        }\r\n\r\n        if (secure === true) {\r\n          cookie.push('secure');\r\n        }\r\n\r\n        document.cookie = cookie.join('; ');\r\n      },\r\n\r\n      read: function read(name) {\r\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n        return (match ? decodeURIComponent(match[3]) : null);\r\n      },\r\n\r\n      remove: function remove(name) {\r\n        this.write(name, '', Date.now() - 86400000);\r\n      }\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return {\r\n      write: function write() {},\r\n      read: function read() { return null; },\r\n      remove: function remove() {}\r\n    };\r\n  })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/isAbsoluteURL.js\":\r\n/*!**********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/isAbsoluteURL.js ***!\r\n  \\**********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/isURLSameOrigin.js\":\r\n/*!************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/isURLSameOrigin.js ***!\r\n  \\************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n  (function standardBrowserEnv() {\r\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n    var urlParsingNode = document.createElement('a');\r\n    var originURL;\r\n\r\n    /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n    function resolveURL(url) {\r\n      var href = url;\r\n\r\n      if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n        urlParsingNode.setAttribute('href', href);\r\n        href = urlParsingNode.href;\r\n      }\r\n\r\n      urlParsingNode.setAttribute('href', href);\r\n\r\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n      return {\r\n        href: urlParsingNode.href,\r\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n        host: urlParsingNode.host,\r\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n        hostname: urlParsingNode.hostname,\r\n        port: urlParsingNode.port,\r\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n                  urlParsingNode.pathname :\r\n                  '/' + urlParsingNode.pathname\r\n      };\r\n    }\r\n\r\n    originURL = resolveURL(window.location.href);\r\n\r\n    /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n    return function isURLSameOrigin(requestURL) {\r\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n      return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return function isURLSameOrigin() {\r\n      return true;\r\n    };\r\n  })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/normalizeHeaderName.js\":\r\n/*!****************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/normalizeHeaderName.js ***!\r\n  \\****************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/parseHeaders.js\":\r\n/*!*********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/parseHeaders.js ***!\r\n  \\*********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/spread.js\":\r\n/*!***************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/spread.js ***!\r\n  \\***************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/utils.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/lib/utils.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../node_modules/axios/lib/helpers/bind.js\");\r\nvar isBuffer = __webpack_require__(/*! is-buffer */ \"../node_modules/is-buffer/index.js\");\r\n\r\n/*global toString:true*/\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n      result[key] = merge(result[key], val);\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/package.json\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/package.json ***!\r\n  \\******************************************/\r\n/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, browser, bugs, bundleDependencies, bundlesize, dependencies, deprecated, description, devDependencies, homepage, keywords, license, main, name, repository, scripts, typings, version, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"_from\":\"axios@*\",\"_id\":\"axios@0.18.0\",\"_inBundle\":false,\"_integrity\":\"sha1-MtU+SFHv3AoRmTts0AB4nXDAUQI=\",\"_location\":\"/axios\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"range\",\"registry\":true,\"raw\":\"axios@*\",\"name\":\"axios\",\"escapedName\":\"axios\",\"rawSpec\":\"*\",\"saveSpec\":null,\"fetchSpec\":\"*\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/axios/-/axios-0.18.0.tgz\",\"_shasum\":\"32d53e4851efdc0a11993b6cd000789d70c05102\",\"_spec\":\"axios@*\",\"_where\":\"C:\\\\_Irina\\\\_clients\\\\_Alpheios Project\\\\git\\\\lexicon-client\",\"author\":{\"name\":\"Matt Zabriskie\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"bundleDependencies\":false,\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}],\"dependencies\":{\"follow-redirects\":\"^1.3.0\",\"is-buffer\":\"^1.1.5\"},\"deprecated\":false,\"description\":\"Promise based HTTP client for the browser and node.js\",\"devDependencies\":{\"bundlesize\":\"^0.5.7\",\"coveralls\":\"^2.11.9\",\"es6-promise\":\"^4.0.5\",\"grunt\":\"^1.0.1\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.0.0\",\"grunt-contrib-nodeunit\":\"^1.0.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^19.0.0\",\"grunt-karma\":\"^2.0.0\",\"grunt-ts\":\"^6.0.0-beta.3\",\"grunt-webpack\":\"^1.0.18\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^1.3.0\",\"karma-chrome-launcher\":\"^2.0.0\",\"karma-coverage\":\"^1.0.0\",\"karma-firefox-launcher\":\"^1.0.0\",\"karma-jasmine\":\"^1.0.2\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-opera-launcher\":\"^1.0.0\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^1.1.0\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.7\",\"karma-webpack\":\"^1.7.0\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"sinon\":\"^1.17.4\",\"typescript\":\"^2.0.3\",\"url-search-params\":\"^0.6.1\",\"webpack\":\"^1.13.1\",\"webpack-dev-server\":\"^1.14.1\"},\"homepage\":\"https://github.com/axios/axios\",\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"axios\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/axios/axios.git\"},\"scripts\":{\"build\":\"NODE_ENV=production grunt build\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"examples\":\"node ./examples/server.js\",\"postversion\":\"git push && git push --tags\",\"preversion\":\"npm test\",\"start\":\"node ./sandbox/server.js\",\"test\":\"grunt test && bundlesize\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\"},\"typings\":\"./index.d.ts\",\"version\":\"0.18.0\"};\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/index.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/index.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar url = __webpack_require__(/*! url */ \"url\");\r\nvar http = __webpack_require__(/*! http */ \"http\");\r\nvar https = __webpack_require__(/*! https */ \"https\");\r\nvar assert = __webpack_require__(/*! assert */ \"assert\");\r\nvar Writable = __webpack_require__(/*! stream */ \"stream\").Writable;\r\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/follow-redirects/node_modules/debug/src/index.js\")(\"follow-redirects\");\r\n\r\n// RFC7231§4.2.1: Of the request methods defined by this specification,\r\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\r\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\r\n\r\n// Create handlers that pass events from native requests\r\nvar eventHandlers = Object.create(null);\r\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\r\n  eventHandlers[event] = function (arg) {\r\n    this._redirectable.emit(event, arg);\r\n  };\r\n});\r\n\r\n// An HTTP(S) request that can be redirected\r\nfunction RedirectableRequest(options, responseCallback) {\r\n  // Initialize the request\r\n  Writable.call(this);\r\n  options.headers = options.headers || {};\r\n  this._options = options;\r\n  this._redirectCount = 0;\r\n  this._redirects = [];\r\n  this._requestBodyLength = 0;\r\n  this._requestBodyBuffers = [];\r\n\r\n  // Attach a callback if passed\r\n  if (responseCallback) {\r\n    this.on(\"response\", responseCallback);\r\n  }\r\n\r\n  // React to responses of native requests\r\n  var self = this;\r\n  this._onNativeResponse = function (response) {\r\n    self._processResponse(response);\r\n  };\r\n\r\n  // Complete the URL object when necessary\r\n  if (!options.pathname && options.path) {\r\n    var searchPos = options.path.indexOf(\"?\");\r\n    if (searchPos < 0) {\r\n      options.pathname = options.path;\r\n    }\r\n    else {\r\n      options.pathname = options.path.substring(0, searchPos);\r\n      options.search = options.path.substring(searchPos);\r\n    }\r\n  }\r\n\r\n  // Perform the first request\r\n  this._performRequest();\r\n}\r\nRedirectableRequest.prototype = Object.create(Writable.prototype);\r\n\r\n// Writes buffered data to the current native request\r\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\r\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\r\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\r\n  }\r\n  // Ignore empty buffers, since writing them doesn't invoke the callback\r\n  // https://github.com/nodejs/node/issues/22066\r\n  if (data.length === 0) {\r\n    callback();\r\n    return;\r\n  }\r\n  // Only write when we don't exceed the maximum body length\r\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\r\n    this._requestBodyLength += data.length;\r\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\r\n    this._currentRequest.write(data, encoding, callback);\r\n  }\r\n  // Error when we exceed the maximum body length\r\n  else {\r\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\r\n    this.abort();\r\n  }\r\n};\r\n\r\n// Ends the current native request\r\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\r\n  var currentRequest = this._currentRequest;\r\n  if (!data) {\r\n    currentRequest.end(null, null, callback);\r\n  }\r\n  else {\r\n    this.write(data, encoding, function () {\r\n      currentRequest.end(null, null, callback);\r\n    });\r\n  }\r\n};\r\n\r\n// Sets a header value on the current native request\r\nRedirectableRequest.prototype.setHeader = function (name, value) {\r\n  this._options.headers[name] = value;\r\n  this._currentRequest.setHeader(name, value);\r\n};\r\n\r\n// Clears a header value on the current native request\r\nRedirectableRequest.prototype.removeHeader = function (name) {\r\n  delete this._options.headers[name];\r\n  this._currentRequest.removeHeader(name);\r\n};\r\n\r\n// Proxy all other public ClientRequest methods\r\n[\r\n  \"abort\", \"flushHeaders\", \"getHeader\",\r\n  \"setNoDelay\", \"setSocketKeepAlive\", \"setTimeout\",\r\n].forEach(function (method) {\r\n  RedirectableRequest.prototype[method] = function (a, b) {\r\n    return this._currentRequest[method](a, b);\r\n  };\r\n});\r\n\r\n// Proxy all public ClientRequest properties\r\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\r\n  Object.defineProperty(RedirectableRequest.prototype, property, {\r\n    get: function () { return this._currentRequest[property]; },\r\n  });\r\n});\r\n\r\n// Executes the next native request (initial or redirect)\r\nRedirectableRequest.prototype._performRequest = function () {\r\n  // Load the native protocol\r\n  var protocol = this._options.protocol;\r\n  var nativeProtocol = this._options.nativeProtocols[protocol];\r\n\r\n  // If specified, use the agent corresponding to the protocol\r\n  // (HTTP and HTTPS use different types of agents)\r\n  if (this._options.agents) {\r\n    var scheme = protocol.substr(0, protocol.length - 1);\r\n    this._options.agent = this._options.agents[scheme];\r\n  }\r\n\r\n  // Create the native request\r\n  var request = this._currentRequest =\r\n        nativeProtocol.request(this._options, this._onNativeResponse);\r\n  this._currentUrl = url.format(this._options);\r\n\r\n  // Set up event handlers\r\n  request._redirectable = this;\r\n  for (var event in eventHandlers) {\r\n    /* istanbul ignore else */\r\n    if (event) {\r\n      request.on(event, eventHandlers[event]);\r\n    }\r\n  }\r\n\r\n  // End a redirected request\r\n  // (The first request must be ended explicitly with RedirectableRequest#end)\r\n  if (this._isRedirect) {\r\n    // Write the request entity and end.\r\n    var requestBodyBuffers = this._requestBodyBuffers;\r\n    (function writeNext() {\r\n      if (requestBodyBuffers.length !== 0) {\r\n        var buffer = requestBodyBuffers.pop();\r\n        request.write(buffer.data, buffer.encoding, writeNext);\r\n      }\r\n      else {\r\n        request.end();\r\n      }\r\n    }());\r\n  }\r\n};\r\n\r\n// Processes a response from the current native request\r\nRedirectableRequest.prototype._processResponse = function (response) {\r\n  // Store the redirected response\r\n  if (this._options.trackRedirects) {\r\n    this._redirects.push({\r\n      url: this._currentUrl,\r\n      headers: response.headers,\r\n      statusCode: response.statusCode,\r\n    });\r\n  }\r\n\r\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\r\n  // that further action needs to be taken by the user agent in order to\r\n  // fulfill the request. If a Location header field is provided,\r\n  // the user agent MAY automatically redirect its request to the URI\r\n  // referenced by the Location field value,\r\n  // even if the specific status code is not understood.\r\n  var location = response.headers.location;\r\n  if (location && this._options.followRedirects !== false &&\r\n      response.statusCode >= 300 && response.statusCode < 400) {\r\n    // RFC7231§6.4: A client SHOULD detect and intervene\r\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\r\n    if (++this._redirectCount > this._options.maxRedirects) {\r\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\r\n      return;\r\n    }\r\n\r\n    // RFC7231§6.4: Automatic redirection needs to done with\r\n    // care for methods not known to be safe […],\r\n    // since the user might not wish to redirect an unsafe request.\r\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\r\n    // that the target resource resides temporarily under a different URI\r\n    // and the user agent MUST NOT change the request method\r\n    // if it performs an automatic redirection to that URI.\r\n    var header;\r\n    var headers = this._options.headers;\r\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\r\n      this._options.method = \"GET\";\r\n      // Drop a possible entity and headers related to it\r\n      this._requestBodyBuffers = [];\r\n      for (header in headers) {\r\n        if (/^content-/i.test(header)) {\r\n          delete headers[header];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Drop the Host header, as the redirect might lead to a different host\r\n    if (!this._isRedirect) {\r\n      for (header in headers) {\r\n        if (/^host$/i.test(header)) {\r\n          delete headers[header];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Perform the redirected request\r\n    var redirectUrl = url.resolve(this._currentUrl, location);\r\n    debug(\"redirecting to\", redirectUrl);\r\n    Object.assign(this._options, url.parse(redirectUrl));\r\n    this._isRedirect = true;\r\n    this._performRequest();\r\n\r\n    // Discard the remainder of the response to avoid waiting for data\r\n    response.destroy();\r\n  }\r\n  else {\r\n    // The response is not a redirect; return it as-is\r\n    response.responseUrl = this._currentUrl;\r\n    response.redirects = this._redirects;\r\n    this.emit(\"response\", response);\r\n\r\n    // Clean up\r\n    this._requestBodyBuffers = [];\r\n  }\r\n};\r\n\r\n// Wraps the key/value object of protocols with redirect functionality\r\nfunction wrap(protocols) {\r\n  // Default settings\r\n  var exports = {\r\n    maxRedirects: 21,\r\n    maxBodyLength: 10 * 1024 * 1024,\r\n  };\r\n\r\n  // Wrap each protocol\r\n  var nativeProtocols = {};\r\n  Object.keys(protocols).forEach(function (scheme) {\r\n    var protocol = scheme + \":\";\r\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\r\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\r\n\r\n    // Executes a request, following redirects\r\n    wrappedProtocol.request = function (options, callback) {\r\n      if (typeof options === \"string\") {\r\n        options = url.parse(options);\r\n        options.maxRedirects = exports.maxRedirects;\r\n      }\r\n      else {\r\n        options = Object.assign({\r\n          protocol: protocol,\r\n          maxRedirects: exports.maxRedirects,\r\n          maxBodyLength: exports.maxBodyLength,\r\n        }, options);\r\n      }\r\n      options.nativeProtocols = nativeProtocols;\r\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\r\n      debug(\"options\", options);\r\n      return new RedirectableRequest(options, callback);\r\n    };\r\n\r\n    // Executes a GET request, following redirects\r\n    wrappedProtocol.get = function (options, callback) {\r\n      var request = wrappedProtocol.request(options, callback);\r\n      request.end();\r\n      return request;\r\n    };\r\n  });\r\n  return exports;\r\n}\r\n\r\n// Exports\r\nmodule.exports = wrap({ http: http, https: https });\r\nmodule.exports.wrap = wrap;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/browser.js\":\r\n/*!**************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/browser.js ***!\r\n  \\**************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = __webpack_require__(/*! ./debug */ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\");\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = 'undefined' != typeof chrome\r\n               && 'undefined' != typeof chrome.storage\r\n                  ? chrome.storage.local\r\n                  : localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\r\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\r\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\r\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\r\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\r\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\r\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\r\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\r\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\r\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\r\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\nfunction useColors() {\r\n  // NB: In an Electron preload script, document will be defined but not fully\r\n  // initialized. Since we know we're in Chrome, we'll just detect this case\r\n  // explicitly\r\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\r\n    return true;\r\n  }\r\n\r\n  // Internet Explorer and Edge do not support colors.\r\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n    return false;\r\n  }\r\n\r\n  // is webkit? http://stackoverflow.com/a/16459606/376773\r\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n    // is firebug? http://stackoverflow.com/a/398120/376773\r\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n    // is firefox >= v31?\r\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n    // double check webkit in userAgent just in case we are in a worker\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nexports.formatters.j = function(v) {\r\n  try {\r\n    return JSON.stringify(v);\r\n  } catch (err) {\r\n    return '[UnexpectedJSONParseError]: ' + err.message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var useColors = this.useColors;\r\n\r\n  args[0] = (useColors ? '%c' : '')\r\n    + this.namespace\r\n    + (useColors ? ' %c' : ' ')\r\n    + args[0]\r\n    + (useColors ? '%c ' : ' ')\r\n    + '+' + exports.humanize(this.diff);\r\n\r\n  if (!useColors) return;\r\n\r\n  var c = 'color: ' + this.color;\r\n  args.splice(1, 0, c, 'color: inherit')\r\n\r\n  // the final \"%c\" is somewhat tricky, because there could be other\r\n  // arguments passed either before or after the %c, so we need to\r\n  // figure out the correct index to insert the CSS into\r\n  var index = 0;\r\n  var lastC = 0;\r\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\r\n    if ('%%' === match) return;\r\n    index++;\r\n    if ('%c' === match) {\r\n      // we only are interested in the *last* %c\r\n      // (the user may have provided their own)\r\n      lastC = index;\r\n    }\r\n  });\r\n\r\n  args.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\n\r\nfunction log() {\r\n  // this hackery is required for IE8/9, where\r\n  // the `console.log` function doesn't have 'apply'\r\n  return 'object' === typeof console\r\n    && console.log\r\n    && Function.prototype.apply.call(console.log, console, arguments);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  try {\r\n    if (null == namespaces) {\r\n      exports.storage.removeItem('debug');\r\n    } else {\r\n      exports.storage.debug = namespaces;\r\n    }\r\n  } catch(e) {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  var r;\r\n  try {\r\n    r = exports.storage.debug;\r\n  } catch(e) {}\r\n\r\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\r\n    r = process.env.DEBUG;\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `localStorage.debug` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n  try {\r\n    return window.localStorage;\r\n  } catch (e) {}\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\":\r\n/*!************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/debug.js ***!\r\n  \\************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = __webpack_require__(/*! ms */ \"../node_modules/ms/index.js\");\r\n\r\n/**\r\n * Active `debug` instances.\r\n */\r\nexports.instances = [];\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColor(namespace) {\r\n  var hash = 0, i;\r\n\r\n  for (i in namespace) {\r\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n\r\n  return exports.colors[Math.abs(hash) % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createDebug(namespace) {\r\n\r\n  var prevTime;\r\n\r\n  function debug() {\r\n    // disabled?\r\n    if (!debug.enabled) return;\r\n\r\n    var self = debug;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // turn the `arguments` into a proper Array\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if ('string' !== typeof args[0]) {\r\n      // anything else let's inspect with %O\r\n      args.unshift('%O');\r\n    }\r\n\r\n    // apply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\r\n      // if we encounter an escaped % then don't increase the array index\r\n      if (match === '%%') return match;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if ('function' === typeof formatter) {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index]` since it's inlined in the `format`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    // apply env-specific formatting (colors, etc.)\r\n    exports.formatArgs.call(self, args);\r\n\r\n    var logFn = debug.log || exports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n\r\n  debug.namespace = namespace;\r\n  debug.enabled = exports.enabled(namespace);\r\n  debug.useColors = exports.useColors();\r\n  debug.color = selectColor(namespace);\r\n  debug.destroy = destroy;\r\n\r\n  // env-specific initialization logic for debug instances\r\n  if ('function' === typeof exports.init) {\r\n    exports.init(debug);\r\n  }\r\n\r\n  exports.instances.push(debug);\r\n\r\n  return debug;\r\n}\r\n\r\nfunction destroy () {\r\n  var index = exports.instances.indexOf(this);\r\n  if (index !== -1) {\r\n    exports.instances.splice(index, 1);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  exports.names = [];\r\n  exports.skips = [];\r\n\r\n  var i;\r\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i].replace(/\\*/g, '.*?');\r\n    if (namespaces[0] === '-') {\r\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n    } else {\r\n      exports.names.push(new RegExp('^' + namespaces + '$'));\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < exports.instances.length; i++) {\r\n    var instance = exports.instances[i];\r\n    instance.enabled = exports.enabled(instance.namespace);\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.enable('');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  if (name[name.length - 1] === '*') {\r\n    return true;\r\n  }\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/index.js\":\r\n/*!************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/index.js ***!\r\n  \\************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Detect Electron renderer process, which is node, but we should\r\n * treat as a browser.\r\n */\r\n\r\nif (typeof process === 'undefined' || process.type === 'renderer') {\r\n  module.exports = __webpack_require__(/*! ./browser.js */ \"../node_modules/follow-redirects/node_modules/debug/src/browser.js\");\r\n} else {\r\n  module.exports = __webpack_require__(/*! ./node.js */ \"../node_modules/follow-redirects/node_modules/debug/src/node.js\");\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/node.js\":\r\n/*!***********************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/node.js ***!\r\n  \\***********************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar tty = __webpack_require__(/*! tty */ \"tty\");\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\n/**\r\n * This is the Node.js implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = __webpack_require__(/*! ./debug */ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\");\r\nexports.init = init;\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\r\n\r\ntry {\r\n  var supportsColor = __webpack_require__(/*! supports-color */ \"../node_modules/supports-color/index.js\");\r\n  if (supportsColor && supportsColor.level >= 2) {\r\n    exports.colors = [\r\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\r\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\r\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\r\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\r\n      205, 206, 207, 208, 209, 214, 215, 220, 221\r\n    ];\r\n  }\r\n} catch (err) {\r\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\r\n}\r\n\r\n/**\r\n * Build up the default `inspectOpts` object from the environment variables.\r\n *\r\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\r\n */\r\n\r\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\r\n  return /^debug_/i.test(key);\r\n}).reduce(function (obj, key) {\r\n  // camel-case\r\n  var prop = key\r\n    .substring(6)\r\n    .toLowerCase()\r\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\r\n\r\n  // coerce string value into JS value\r\n  var val = process.env[key];\r\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\r\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\r\n  else if (val === 'null') val = null;\r\n  else val = Number(val);\r\n\r\n  obj[prop] = val;\r\n  return obj;\r\n}, {});\r\n\r\n/**\r\n * Is stdout a TTY? Colored output is enabled when `true`.\r\n */\r\n\r\nfunction useColors() {\r\n  return 'colors' in exports.inspectOpts\r\n    ? Boolean(exports.inspectOpts.colors)\r\n    : tty.isatty(process.stderr.fd);\r\n}\r\n\r\n/**\r\n * Map %o to `util.inspect()`, all on a single line.\r\n */\r\n\r\nexports.formatters.o = function(v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts)\r\n    .split('\\n').map(function(str) {\r\n      return str.trim()\r\n    }).join(' ');\r\n};\r\n\r\n/**\r\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\r\n */\r\n\r\nexports.formatters.O = function(v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts);\r\n};\r\n\r\n/**\r\n * Adds ANSI color escape codes if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var name = this.namespace;\r\n  var useColors = this.useColors;\r\n\r\n  if (useColors) {\r\n    var c = this.color;\r\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\r\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\r\n\r\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\r\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\r\n  } else {\r\n    args[0] = getDate() + name + ' ' + args[0];\r\n  }\r\n}\r\n\r\nfunction getDate() {\r\n  if (exports.inspectOpts.hideDate) {\r\n    return '';\r\n  } else {\r\n    return new Date().toISOString() + ' ';\r\n  }\r\n}\r\n\r\n/**\r\n * Invokes `util.format()` with the specified arguments and writes to stderr.\r\n */\r\n\r\nfunction log() {\r\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  if (null == namespaces) {\r\n    // If you set a process.env field to null or undefined, it gets cast to the\r\n    // string 'null' or 'undefined'. Just delete instead.\r\n    delete process.env.DEBUG;\r\n  } else {\r\n    process.env.DEBUG = namespaces;\r\n  }\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  return process.env.DEBUG;\r\n}\r\n\r\n/**\r\n * Init logic for `debug` instances.\r\n *\r\n * Create a new `inspectOpts` object in case `useColors` is set\r\n * differently for a particular `debug` instance.\r\n */\r\n\r\nfunction init (debug) {\r\n  debug.inspectOpts = {};\r\n\r\n  var keys = Object.keys(exports.inspectOpts);\r\n  for (var i = 0; i < keys.length; i++) {\r\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\r\n  }\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `process.env.DEBUG` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/is-buffer/index.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/is-buffer/index.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\n/*!\r\n * Determine if an object is a Buffer\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n\r\n// The _isBuffer check is for Safari 5-7 support, because it's missing\r\n// Object.prototype.constructor. Remove this eventually\r\nmodule.exports = function (obj) {\r\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\r\n}\r\n\r\nfunction isBuffer (obj) {\r\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\r\n}\r\n\r\n// For Node v0.10 support. Remove this eventually.\r\nfunction isSlowBuffer (obj) {\r\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/ms/index.js\":\r\n/*!***********************************!*\\\r\n  !*** ../node_modules/ms/index.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isNaN(val) === false) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  if (ms >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (ms >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (ms >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (ms >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  return plural(ms, d, 'day') ||\r\n    plural(ms, h, 'hour') ||\r\n    plural(ms, m, 'minute') ||\r\n    plural(ms, s, 'second') ||\r\n    ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, n, name) {\r\n  if (ms < n) {\r\n    return;\r\n  }\r\n  if (ms < n * 1.5) {\r\n    return Math.floor(ms / n) + ' ' + name;\r\n  }\r\n  return Math.ceil(ms / n) + ' ' + name + 's';\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/papaparse/papaparse.js\":\r\n/*!**********************************************!*\\\r\n  !*** ../node_modules/papaparse/papaparse.js ***!\r\n  \\**********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*@license\r\n\tPapa Parse\r\n\tv4.6.0\r\n\thttps://github.com/mholt/PapaParse\r\n\tLicense: MIT\r\n*/\r\n(function(root, factory)\r\n{\r\n\t/* globals define */\r\n\tif (true)\r\n\t{\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\r\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t}\r\n\telse {}\r\n}(this, function()\r\n{\r\n\t'use strict';\r\n\r\n\tvar global = (function() {\r\n\t\t// alternative method, similar to `Function('return this')()`\r\n\t\t// but without using `eval` (which is disabled when\r\n\t\t// using Content Security Policy).\r\n\r\n\t\tif (typeof self !== 'undefined') { return self; }\r\n\t\tif (typeof window !== 'undefined') { return window; }\r\n\t\tif (typeof global !== 'undefined') { return global; }\r\n\r\n\t\t// When running tests none of the above have been defined\r\n\t\treturn {};\r\n\t})();\r\n\r\n\r\n\tvar IS_WORKER = !global.document && !!global.postMessage,\r\n\t\tIS_PAPA_WORKER = IS_WORKER && /(\\?|&)papaworker(=|&|$)/.test(global.location.search),\r\n\t\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\r\n\tvar workers = {}, workerIdCounter = 0;\r\n\r\n\tvar Papa = {};\r\n\r\n\tPapa.parse = CsvToJson;\r\n\tPapa.unparse = JsonToCsv;\r\n\r\n\tPapa.RECORD_SEP = String.fromCharCode(30);\r\n\tPapa.UNIT_SEP = String.fromCharCode(31);\r\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\r\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\r\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\r\n\tPapa.SCRIPT_PATH = null;\t// Must be set by your code if you use workers and this lib is loaded asynchronously\r\n\tPapa.NODE_STREAM_INPUT = 1;\r\n\r\n\t// Configurable chunk sizes for local and remote files, respectively\r\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\r\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\r\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\r\n\r\n\t// Exposed for testing and development only\r\n\tPapa.Parser = Parser;\r\n\tPapa.ParserHandle = ParserHandle;\r\n\tPapa.NetworkStreamer = NetworkStreamer;\r\n\tPapa.FileStreamer = FileStreamer;\r\n\tPapa.StringStreamer = StringStreamer;\r\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\r\n\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\r\n\r\n\tif (global.jQuery)\r\n\t{\r\n\t\tvar $ = global.jQuery;\r\n\t\t$.fn.parse = function(options)\r\n\t\t{\r\n\t\t\tvar config = options.config || {};\r\n\t\t\tvar queue = [];\r\n\r\n\t\t\tthis.each(function(idx)\r\n\t\t\t{\r\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\r\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\r\n\t\t\t\t\t\t\t\t&& global.FileReader;\r\n\r\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\r\n\t\t\t\t\treturn true;\t// continue to next input element\r\n\r\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tqueue.push({\r\n\t\t\t\t\t\tfile: this.files[i],\r\n\t\t\t\t\t\tinputElem: this,\r\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tparseNextFile();\t// begin parsing\r\n\t\t\treturn this;\t\t// maintains chainability\r\n\r\n\r\n\t\t\tfunction parseNextFile()\r\n\t\t\t{\r\n\t\t\t\tif (queue.length === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (isFunction(options.complete))\r\n\t\t\t\t\t\toptions.complete();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar f = queue[0];\r\n\r\n\t\t\t\tif (isFunction(options.before))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\r\n\r\n\t\t\t\t\tif (typeof returned === 'object')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (returned.action === 'abort')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\r\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (returned.action === 'skip')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\r\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (returned === 'skip')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\r\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\r\n\t\t\t\tf.instanceConfig.complete = function(results)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (isFunction(userCompleteFunc))\r\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\r\n\t\t\t\t\tfileComplete();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\r\n\t\t\t}\r\n\r\n\t\t\tfunction error(name, file, elem, reason)\r\n\t\t\t{\r\n\t\t\t\tif (isFunction(options.error))\r\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\r\n\t\t\t}\r\n\r\n\t\t\tfunction fileComplete()\r\n\t\t\t{\r\n\t\t\t\tqueue.splice(0, 1);\r\n\t\t\t\tparseNextFile();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tif (IS_PAPA_WORKER)\r\n\t{\r\n\t\tglobal.onmessage = workerThreadReceivedMessage;\r\n\t}\r\n\telse if (Papa.WORKERS_SUPPORTED)\r\n\t{\r\n\t\tAUTO_SCRIPT_PATH = getScriptPath();\r\n\r\n\t\t// Check if the script was loaded synchronously\r\n\t\tif (!document.body)\r\n\t\t{\r\n\t\t\t// Body doesn't exist yet, must be synchronous\r\n\t\t\tLOADED_SYNC = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\r\n\t\t\t\tLOADED_SYNC = true;\r\n\t\t\t}, true);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction CsvToJson(_input, _config)\r\n\t{\r\n\t\t_config = _config || {};\r\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\r\n\t\tif (isFunction(dynamicTyping)) {\r\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\r\n\t\t\t// Will be filled on first row call\r\n\t\t\tdynamicTyping = {};\r\n\t\t}\r\n\t\t_config.dynamicTyping = dynamicTyping;\r\n\r\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\r\n\r\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\r\n\t\t{\r\n\t\t\tvar w = newWorker();\r\n\r\n\t\t\tw.userStep = _config.step;\r\n\t\t\tw.userChunk = _config.chunk;\r\n\t\t\tw.userComplete = _config.complete;\r\n\t\t\tw.userError = _config.error;\r\n\r\n\t\t\t_config.step = isFunction(_config.step);\r\n\t\t\t_config.chunk = isFunction(_config.chunk);\r\n\t\t\t_config.complete = isFunction(_config.complete);\r\n\t\t\t_config.error = isFunction(_config.error);\r\n\t\t\tdelete _config.worker;\t// prevent infinite loop\r\n\r\n\t\t\tw.postMessage({\r\n\t\t\t\tinput: _input,\r\n\t\t\t\tconfig: _config,\r\n\t\t\t\tworkerId: w.id\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar streamer = null;\r\n\t\tif (_input === Papa.NODE_STREAM_INPUT)\r\n\t\t{\r\n\t\t\t// create a node Duplex stream for use\r\n\t\t\t// with .pipe\r\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\r\n\t\t\treturn streamer.getStream();\r\n\t\t}\r\n\t\telse if (typeof _input === 'string')\r\n\t\t{\r\n\t\t\tif (_config.download)\r\n\t\t\t\tstreamer = new NetworkStreamer(_config);\r\n\t\t\telse\r\n\t\t\t\tstreamer = new StringStreamer(_config);\r\n\t\t}\r\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\r\n\t\t{\r\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\r\n\t\t}\r\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\r\n\t\t\tstreamer = new FileStreamer(_config);\r\n\r\n\t\treturn streamer.stream(_input);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction JsonToCsv(_input, _config)\r\n\t{\r\n\t\t// Default configuration\r\n\r\n\t\t/** whether to surround every datum with quotes */\r\n\t\tvar _quotes = false;\r\n\r\n\t\t/** whether to write headers */\r\n\t\tvar _writeHeader = true;\r\n\r\n\t\t/** delimiting character(s) */\r\n\t\tvar _delimiter = ',';\r\n\r\n\t\t/** newline character(s) */\r\n\t\tvar _newline = '\\r\\n';\r\n\r\n\t\t/** quote character */\r\n\t\tvar _quoteChar = '\"';\r\n\r\n\t\tunpackConfig();\r\n\r\n\t\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\r\n\r\n\t\tif (typeof _input === 'string')\r\n\t\t\t_input = JSON.parse(_input);\r\n\r\n\t\tif (_input instanceof Array)\r\n\t\t{\r\n\t\t\tif (!_input.length || _input[0] instanceof Array)\r\n\t\t\t\treturn serialize(null, _input);\r\n\t\t\telse if (typeof _input[0] === 'object')\r\n\t\t\t\treturn serialize(objectKeys(_input[0]), _input);\r\n\t\t}\r\n\t\telse if (typeof _input === 'object')\r\n\t\t{\r\n\t\t\tif (typeof _input.data === 'string')\r\n\t\t\t\t_input.data = JSON.parse(_input.data);\r\n\r\n\t\t\tif (_input.data instanceof Array)\r\n\t\t\t{\r\n\t\t\t\tif (!_input.fields)\r\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\r\n\r\n\t\t\t\tif (!_input.fields)\r\n\t\t\t\t\t_input.fields =  _input.data[0] instanceof Array\r\n\t\t\t\t\t\t? _input.fields\r\n\t\t\t\t\t\t: objectKeys(_input.data[0]);\r\n\r\n\t\t\t\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\r\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\r\n\t\t\t}\r\n\r\n\t\t\treturn serialize(_input.fields || [], _input.data || []);\r\n\t\t}\r\n\r\n\t\t// Default (any valid paths should return before this)\r\n\t\tthrow 'exception: Unable to serialize unrecognized input';\r\n\r\n\r\n\t\tfunction unpackConfig()\r\n\t\t{\r\n\t\t\tif (typeof _config !== 'object')\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (typeof _config.delimiter === 'string'\r\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\r\n\t\t\t{\r\n\t\t\t\t_delimiter = _config.delimiter;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof _config.quotes === 'boolean'\r\n\t\t\t\t|| _config.quotes instanceof Array)\r\n\t\t\t\t_quotes = _config.quotes;\r\n\r\n\t\t\tif (typeof _config.newline === 'string')\r\n\t\t\t\t_newline = _config.newline;\r\n\r\n\t\t\tif (typeof _config.quoteChar === 'string')\r\n\t\t\t\t_quoteChar = _config.quoteChar;\r\n\r\n\t\t\tif (typeof _config.header === 'boolean')\r\n\t\t\t\t_writeHeader = _config.header;\r\n\t\t}\r\n\r\n\r\n\t\t/** Turns an object's keys into an array */\r\n\t\tfunction objectKeys(obj)\r\n\t\t{\r\n\t\t\tif (typeof obj !== 'object')\r\n\t\t\t\treturn [];\r\n\t\t\tvar keys = [];\r\n\t\t\tfor (var key in obj)\r\n\t\t\t\tkeys.push(key);\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\r\n\t\tfunction serialize(fields, data)\r\n\t\t{\r\n\t\t\tvar csv = '';\r\n\r\n\t\t\tif (typeof fields === 'string')\r\n\t\t\t\tfields = JSON.parse(fields);\r\n\t\t\tif (typeof data === 'string')\r\n\t\t\t\tdata = JSON.parse(data);\r\n\r\n\t\t\tvar hasHeader = fields instanceof Array && fields.length > 0;\r\n\t\t\tvar dataKeyedByField = !(data[0] instanceof Array);\r\n\r\n\t\t\t// If there a header row, write it first\r\n\t\t\tif (hasHeader && _writeHeader)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (i > 0)\r\n\t\t\t\t\t\tcsv += _delimiter;\r\n\t\t\t\t\tcsv += safe(fields[i], i);\r\n\t\t\t\t}\r\n\t\t\t\tif (data.length > 0)\r\n\t\t\t\t\tcsv += _newline;\r\n\t\t\t}\r\n\r\n\t\t\t// Then write out the data\r\n\t\t\tfor (var row = 0; row < data.length; row++)\r\n\t\t\t{\r\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\r\n\r\n\t\t\t\tfor (var col = 0; col < maxCol; col++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (col > 0)\r\n\t\t\t\t\t\tcsv += _delimiter;\r\n\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\r\n\t\t\t\t\tcsv += safe(data[row][colIdx], col);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (row < data.length - 1)\r\n\t\t\t\t\tcsv += _newline;\r\n\t\t\t}\r\n\r\n\t\t\treturn csv;\r\n\t\t}\r\n\r\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\r\n\t\tfunction safe(str, col)\r\n\t\t{\r\n\t\t\tif (typeof str === 'undefined' || str === null)\r\n\t\t\t\treturn '';\r\n\r\n\t\t\tif (str.constructor === Date)\r\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\r\n\r\n\t\t\tstr = str.toString().replace(quoteCharRegex, _quoteChar + _quoteChar);\r\n\r\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\r\n\t\t\t\t\t\t\t|| (_quotes instanceof Array && _quotes[col])\r\n\t\t\t\t\t\t\t|| hasAny(str, Papa.BAD_DELIMITERS)\r\n\t\t\t\t\t\t\t|| str.indexOf(_delimiter) > -1\r\n\t\t\t\t\t\t\t|| str.charAt(0) === ' '\r\n\t\t\t\t\t\t\t|| str.charAt(str.length - 1) === ' ';\r\n\r\n\t\t\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\r\n\t\t}\r\n\r\n\t\tfunction hasAny(str, substrings)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < substrings.length; i++)\r\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\r\n\tfunction ChunkStreamer(config)\r\n\t{\r\n\t\tthis._handle = null;\r\n\t\tthis._finished = false;\r\n\t\tthis._completed = false;\r\n\t\tthis._input = null;\r\n\t\tthis._baseIndex = 0;\r\n\t\tthis._partialLine = '';\r\n\t\tthis._rowCount = 0;\r\n\t\tthis._start = 0;\r\n\t\tthis._nextChunk = null;\r\n\t\tthis.isFirstChunk = true;\r\n\t\tthis._completeResults = {\r\n\t\t\tdata: [],\r\n\t\t\terrors: [],\r\n\t\t\tmeta: {}\r\n\t\t};\r\n\t\treplaceConfig.call(this, config);\r\n\r\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\r\n\t\t{\r\n\t\t\t// First chunk pre-processing\r\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\r\n\t\t\t{\r\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\r\n\t\t\t\tif (modifiedChunk !== undefined)\r\n\t\t\t\t\tchunk = modifiedChunk;\r\n\t\t\t}\r\n\t\t\tthis.isFirstChunk = false;\r\n\r\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\r\n\t\t\tvar aggregate = this._partialLine + chunk;\r\n\t\t\tthis._partialLine = '';\r\n\r\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\r\n\r\n\t\t\tif (this._handle.paused() || this._handle.aborted())\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar lastIndex = results.meta.cursor;\r\n\r\n\t\t\tif (!this._finished)\r\n\t\t\t{\r\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\r\n\t\t\t\tthis._baseIndex = lastIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (results && results.data)\r\n\t\t\t\tthis._rowCount += results.data.length;\r\n\r\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\r\n\r\n\t\t\tif (IS_PAPA_WORKER)\r\n\t\t\t{\r\n\t\t\t\tglobal.postMessage({\r\n\t\t\t\t\tresults: results,\r\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\r\n\t\t\t\t\tfinished: finishedIncludingPreview\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\r\n\t\t\t{\r\n\t\t\t\tthis._config.chunk(results, this._handle);\r\n\t\t\t\tif (this._handle.paused() || this._handle.aborted())\r\n\t\t\t\t\treturn;\r\n\t\t\t\tresults = undefined;\r\n\t\t\t\tthis._completeResults = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._config.step && !this._config.chunk) {\r\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\r\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\r\n\t\t\t\tthis._completeResults.meta = results.meta;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\r\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\r\n\t\t\t\tthis._completed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\r\n\t\t\t\tthis._nextChunk();\r\n\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t\tthis._sendError = function(error)\r\n\t\t{\r\n\t\t\tif (isFunction(this._config.error))\r\n\t\t\t\tthis._config.error(error);\r\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\r\n\t\t\t{\r\n\t\t\t\tglobal.postMessage({\r\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\r\n\t\t\t\t\terror: error,\r\n\t\t\t\t\tfinished: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction replaceConfig(config)\r\n\t\t{\r\n\t\t\t// Deep-copy the config so we can edit it\r\n\t\t\tvar configCopy = copy(config);\r\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\r\n\t\t\tif (!config.step && !config.chunk)\r\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\r\n\t\t\tthis._handle = new ParserHandle(configCopy);\r\n\t\t\tthis._handle.streamer = this;\r\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction NetworkStreamer(config)\r\n\t{\r\n\t\tconfig = config || {};\r\n\t\tif (!config.chunkSize)\r\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tvar xhr;\r\n\r\n\t\tif (IS_WORKER)\r\n\t\t{\r\n\t\t\tthis._nextChunk = function()\r\n\t\t\t{\r\n\t\t\t\tthis._readChunk();\r\n\t\t\t\tthis._chunkLoaded();\r\n\t\t\t};\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis._nextChunk = function()\r\n\t\t\t{\r\n\t\t\t\tthis._readChunk();\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.stream = function(url)\r\n\t\t{\r\n\t\t\tthis._input = url;\r\n\t\t\tthis._nextChunk();\t// Starts streaming\r\n\t\t};\r\n\r\n\t\tthis._readChunk = function()\r\n\t\t{\r\n\t\t\tif (this._finished)\r\n\t\t\t{\r\n\t\t\t\tthis._chunkLoaded();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\txhr = new XMLHttpRequest();\r\n\r\n\t\t\tif (this._config.withCredentials)\r\n\t\t\t{\r\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\r\n\t\t\t}\r\n\r\n\t\t\tif (!IS_WORKER)\r\n\t\t\t{\r\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\r\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\r\n\t\t\t}\r\n\r\n\t\t\txhr.open('GET', this._input, !IS_WORKER);\r\n\t\t\t// Headers can only be set when once the request state is OPENED\r\n\t\t\tif (this._config.downloadRequestHeaders)\r\n\t\t\t{\r\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\r\n\r\n\t\t\t\tfor (var headerName in headers)\r\n\t\t\t\t{\r\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._config.chunkSize)\r\n\t\t\t{\r\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\r\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\r\n\t\t\t\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send();\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\t\t\t\tthis._chunkError(err.message);\r\n\t\t\t}\r\n\r\n\t\t\tif (IS_WORKER && xhr.status === 0)\r\n\t\t\t\tthis._chunkError();\r\n\t\t\telse\r\n\t\t\t\tthis._start += this._config.chunkSize;\r\n\t\t};\r\n\r\n\t\tthis._chunkLoaded = function()\r\n\t\t{\r\n\t\t\tif (xhr.readyState !== 4)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\r\n\t\t\t{\r\n\t\t\t\tthis._chunkError();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\r\n\t\t\tthis.parseChunk(xhr.responseText);\r\n\t\t};\r\n\r\n\t\tthis._chunkError = function(errorMessage)\r\n\t\t{\r\n\t\t\tvar errorText = xhr.statusText || errorMessage;\r\n\t\t\tthis._sendError(new Error(errorText));\r\n\t\t};\r\n\r\n\t\tfunction getFileSize(xhr)\r\n\t\t{\r\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\r\n\t\t\tif (contentRange === null) { // no content range, then finish!\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\r\n\t\t}\r\n\t}\r\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\r\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\r\n\r\n\r\n\tfunction FileStreamer(config)\r\n\t{\r\n\t\tconfig = config || {};\r\n\t\tif (!config.chunkSize)\r\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tvar reader, slice;\r\n\r\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\r\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\r\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\r\n\r\n\t\tthis.stream = function(file)\r\n\t\t{\r\n\t\t\tthis._input = file;\r\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\r\n\r\n\t\t\tif (usingAsyncReader)\r\n\t\t\t{\r\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\r\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\r\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\r\n\r\n\t\t\tthis._nextChunk();\t// Starts streaming\r\n\t\t};\r\n\r\n\t\tthis._nextChunk = function()\r\n\t\t{\r\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\r\n\t\t\t\tthis._readChunk();\r\n\t\t};\r\n\r\n\t\tthis._readChunk = function()\r\n\t\t{\r\n\t\t\tvar input = this._input;\r\n\t\t\tif (this._config.chunkSize)\r\n\t\t\t{\r\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\r\n\t\t\t\tinput = slice.call(input, this._start, end);\r\n\t\t\t}\r\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\r\n\t\t\tif (!usingAsyncReader)\r\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\r\n\t\t};\r\n\r\n\t\tthis._chunkLoaded = function(event)\r\n\t\t{\r\n\t\t\t// Very important to increment start each time before handling results\r\n\t\t\tthis._start += this._config.chunkSize;\r\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\r\n\t\t\tthis.parseChunk(event.target.result);\r\n\t\t};\r\n\r\n\t\tthis._chunkError = function()\r\n\t\t{\r\n\t\t\tthis._sendError(reader.error);\r\n\t\t};\r\n\r\n\t}\r\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\r\n\tFileStreamer.prototype.constructor = FileStreamer;\r\n\r\n\r\n\tfunction StringStreamer(config)\r\n\t{\r\n\t\tconfig = config || {};\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tvar remaining;\r\n\t\tthis.stream = function(s)\r\n\t\t{\r\n\t\t\tremaining = s;\r\n\t\t\treturn this._nextChunk();\r\n\t\t};\r\n\t\tthis._nextChunk = function()\r\n\t\t{\r\n\t\t\tif (this._finished) return;\r\n\t\t\tvar size = this._config.chunkSize;\r\n\t\t\tvar chunk = size ? remaining.substr(0, size) : remaining;\r\n\t\t\tremaining = size ? remaining.substr(size) : '';\r\n\t\t\tthis._finished = !remaining;\r\n\t\t\treturn this.parseChunk(chunk);\r\n\t\t};\r\n\t}\r\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\r\n\tStringStreamer.prototype.constructor = StringStreamer;\r\n\r\n\r\n\tfunction ReadableStreamStreamer(config)\r\n\t{\r\n\t\tconfig = config || {};\r\n\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tvar queue = [];\r\n\t\tvar parseOnData = true;\r\n\t\tvar streamHasEnded = false;\r\n\r\n\t\tthis.pause = function()\r\n\t\t{\r\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\r\n\t\t\tthis._input.pause();\r\n\t\t};\r\n\r\n\t\tthis.resume = function()\r\n\t\t{\r\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\r\n\t\t\tthis._input.resume();\r\n\t\t};\r\n\r\n\t\tthis.stream = function(stream)\r\n\t\t{\r\n\t\t\tthis._input = stream;\r\n\r\n\t\t\tthis._input.on('data', this._streamData);\r\n\t\t\tthis._input.on('end', this._streamEnd);\r\n\t\t\tthis._input.on('error', this._streamError);\r\n\t\t};\r\n\r\n\t\tthis._checkIsFinished = function()\r\n\t\t{\r\n\t\t\tif (streamHasEnded && queue.length === 1) {\r\n\t\t\t\tthis._finished = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._nextChunk = function()\r\n\t\t{\r\n\t\t\tthis._checkIsFinished();\r\n\t\t\tif (queue.length)\r\n\t\t\t{\r\n\t\t\t\tthis.parseChunk(queue.shift());\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tparseOnData = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._streamData = bindFunction(function(chunk)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\r\n\r\n\t\t\t\tif (parseOnData)\r\n\t\t\t\t{\r\n\t\t\t\t\tparseOnData = false;\r\n\t\t\t\t\tthis._checkIsFinished();\r\n\t\t\t\t\tthis.parseChunk(queue.shift());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (error)\r\n\t\t\t{\r\n\t\t\t\tthis._streamError(error);\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\tthis._streamError = bindFunction(function(error)\r\n\t\t{\r\n\t\t\tthis._streamCleanUp();\r\n\t\t\tthis._sendError(error);\r\n\t\t}, this);\r\n\r\n\t\tthis._streamEnd = bindFunction(function()\r\n\t\t{\r\n\t\t\tthis._streamCleanUp();\r\n\t\t\tstreamHasEnded = true;\r\n\t\t\tthis._streamData('');\r\n\t\t}, this);\r\n\r\n\t\tthis._streamCleanUp = bindFunction(function()\r\n\t\t{\r\n\t\t\tthis._input.removeListener('data', this._streamData);\r\n\t\t\tthis._input.removeListener('end', this._streamEnd);\r\n\t\t\tthis._input.removeListener('error', this._streamError);\r\n\t\t}, this);\r\n\t}\r\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\r\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\r\n\r\n\r\n\tfunction DuplexStreamStreamer(_config) {\r\n\t\tvar Duplex = __webpack_require__(/*! stream */ \"stream\").Duplex;\r\n\t\tvar config = copy(_config);\r\n\t\tvar parseOnWrite = true;\r\n\t\tvar writeStreamHasFinished = false;\r\n\t\tvar parseCallbackQueue = [];\r\n\t\tvar stream = null;\r\n\r\n\t\tthis._onCsvData = function(results)\r\n\t\t{\r\n\t\t\tvar data = results.data;\r\n\t\t\tfor (var i = 0; i < data.length; i++) {\r\n\t\t\t\tif (!stream.push(data[i]) && !this._handle.paused()) {\r\n\t\t\t\t\t// the writeable consumer buffer has filled up\r\n\t\t\t\t\t// so we need to pause until more items\r\n\t\t\t\t\t// can be processed\r\n\t\t\t\t\tthis._handle.pause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._onCsvComplete = function()\r\n\t\t{\r\n\t\t\t// node will finish the read stream when\r\n\t\t\t// null is pushed\r\n\t\t\tstream.push(null);\r\n\t\t};\r\n\r\n\t\tconfig.step = bindFunction(this._onCsvData, this);\r\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tthis._nextChunk = function()\r\n\t\t{\r\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\r\n\t\t\t\tthis._finished = true;\r\n\t\t\t}\r\n\t\t\tif (parseCallbackQueue.length) {\r\n\t\t\t\tparseCallbackQueue.shift()();\r\n\t\t\t} else {\r\n\t\t\t\tparseOnWrite = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._addToParseQueue = function(chunk, callback)\r\n\t\t{\r\n\t\t\t// add to queue so that we can indicate\r\n\t\t\t// completion via callback\r\n\t\t\t// node will automatically pause the incoming stream\r\n\t\t\t// when too many items have been added without their\r\n\t\t\t// callback being invoked\r\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\r\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\r\n\t\t\t\tif (isFunction(callback)) {\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tif (parseOnWrite) {\r\n\t\t\t\tparseOnWrite = false;\r\n\t\t\t\tthis._nextChunk();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._onRead = function()\r\n\t\t{\r\n\t\t\tif (this._handle.paused()) {\r\n\t\t\t\t// the writeable consumer can handle more data\r\n\t\t\t\t// so resume the chunk parsing\r\n\t\t\t\tthis._handle.resume();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._onWrite = function(chunk, encoding, callback)\r\n\t\t{\r\n\t\t\tthis._addToParseQueue(chunk, callback);\r\n\t\t};\r\n\r\n\t\tthis._onWriteComplete = function()\r\n\t\t{\r\n\t\t\twriteStreamHasFinished = true;\r\n\t\t\t// have to write empty string\r\n\t\t\t// so parser knows its done\r\n\t\t\tthis._addToParseQueue('');\r\n\t\t};\r\n\r\n\t\tthis.getStream = function()\r\n\t\t{\r\n\t\t\treturn stream;\r\n\t\t};\r\n\t\tstream = new Duplex({\r\n\t\t\treadableObjectMode: true,\r\n\t\t\tdecodeStrings: false,\r\n\t\t\tread: bindFunction(this._onRead, this),\r\n\t\t\twrite: bindFunction(this._onWrite, this)\r\n\t\t});\r\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\r\n\t}\r\n\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\r\n\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\r\n\r\n\r\n\t// Use one ParserHandle per entire CSV file or string\r\n\tfunction ParserHandle(_config)\r\n\t{\r\n\t\t// One goal is to minimize the use of regular expressions...\r\n\t\tvar FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\r\n\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\r\n\r\n\t\tvar self = this;\r\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\r\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\r\n\t\tvar _input;\t\t\t\t// The input being parsed\r\n\t\tvar _parser;\t\t\t// The core parser being used\r\n\t\tvar _paused = false;\t// Whether we are paused or not\r\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\r\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\r\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\r\n\t\tvar _results = {\t\t// The last results returned from the parser\r\n\t\t\tdata: [],\r\n\t\t\terrors: [],\r\n\t\t\tmeta: {}\r\n\t\t};\r\n\r\n\t\tif (isFunction(_config.step))\r\n\t\t{\r\n\t\t\tvar userStep = _config.step;\r\n\t\t\t_config.step = function(results)\r\n\t\t\t{\r\n\t\t\t\t_results = results;\r\n\r\n\t\t\t\tif (needsHeaderRow())\r\n\t\t\t\t\tprocessResults();\r\n\t\t\t\telse\t// only call user's step function after header row\r\n\t\t\t\t{\r\n\t\t\t\t\tprocessResults();\r\n\r\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\r\n\t\t\t\t\tif (_results.data.length === 0)\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t_stepCounter += results.data.length;\r\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\r\n\t\t\t\t\t\t_parser.abort();\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tuserStep(_results, self);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\r\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\r\n\t\t * when an input comes in multiple chunks, like from a file.\r\n\t\t */\r\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\r\n\t\t{\r\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\r\n\t\t\tif (!_config.newline)\r\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\r\n\r\n\t\t\t_delimiterError = false;\r\n\t\t\tif (!_config.delimiter)\r\n\t\t\t{\r\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments);\r\n\t\t\t\tif (delimGuess.successful)\r\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\r\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\r\n\t\t\t\t}\r\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\r\n\t\t\t}\r\n\t\t\telse if(isFunction(_config.delimiter))\r\n\t\t\t{\r\n\t\t\t\t_config.delimiter = _config.delimiter(input);\r\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\r\n\t\t\t}\r\n\r\n\t\t\tvar parserConfig = copy(_config);\r\n\t\t\tif (_config.preview && _config.header)\r\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\r\n\r\n\t\t\t_input = input;\r\n\t\t\t_parser = new Parser(parserConfig);\r\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\r\n\t\t\tprocessResults();\r\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\r\n\t\t};\r\n\r\n\t\tthis.paused = function()\r\n\t\t{\r\n\t\t\treturn _paused;\r\n\t\t};\r\n\r\n\t\tthis.pause = function()\r\n\t\t{\r\n\t\t\t_paused = true;\r\n\t\t\t_parser.abort();\r\n\t\t\t_input = _input.substr(_parser.getCharIndex());\r\n\t\t};\r\n\r\n\t\tthis.resume = function()\r\n\t\t{\r\n\t\t\t_paused = false;\r\n\t\t\tself.streamer.parseChunk(_input, true);\r\n\t\t};\r\n\r\n\t\tthis.aborted = function()\r\n\t\t{\r\n\t\t\treturn _aborted;\r\n\t\t};\r\n\r\n\t\tthis.abort = function()\r\n\t\t{\r\n\t\t\t_aborted = true;\r\n\t\t\t_parser.abort();\r\n\t\t\t_results.meta.aborted = true;\r\n\t\t\tif (isFunction(_config.complete))\r\n\t\t\t\t_config.complete(_results);\r\n\t\t\t_input = '';\r\n\t\t};\r\n\r\n\t\tfunction testEmptyLine(s) {\r\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\r\n\t\t}\r\n\r\n\t\tfunction processResults()\r\n\t\t{\r\n\t\t\tif (_results && _delimiterError)\r\n\t\t\t{\r\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\r\n\t\t\t\t_delimiterError = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (_config.skipEmptyLines)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\r\n\t\t\t\t\tif (testEmptyLine(_results.data[i]))\r\n\t\t\t\t\t\t_results.data.splice(i--, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif (needsHeaderRow())\r\n\t\t\t\tfillHeaderFields();\r\n\r\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\r\n\t\t}\r\n\r\n\t\tfunction needsHeaderRow()\r\n\t\t{\r\n\t\t\treturn _config.header && _fields.length === 0;\r\n\t\t}\r\n\r\n\t\tfunction fillHeaderFields()\r\n\t\t{\r\n\t\t\tif (!_results)\r\n\t\t\t\treturn;\r\n\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\r\n\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar header = _results.data[i][j];\r\n\r\n\t\t\t\t\tif (_config.trimHeaders) {\r\n\t\t\t\t\t\theader = header.trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_fields.push(header);\r\n\t\t\t\t}\r\n\t\t\t_results.data.splice(0, 1);\r\n\t\t}\r\n\r\n\t\tfunction shouldApplyDynamicTyping(field) {\r\n\t\t\t// Cache function values to avoid calling it for each row\r\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\r\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\r\n\t\t\t}\r\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\r\n\t\t}\r\n\r\n\t\tfunction parseDynamic(field, value)\r\n\t\t{\r\n\t\t\tif (shouldApplyDynamicTyping(field))\r\n\t\t\t{\r\n\t\t\t\tif (value === 'true' || value === 'TRUE')\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\r\n\t\t\t\t\treturn false;\r\n\t\t\t\telse if (FLOAT.test(value))\r\n\t\t\t\t\treturn parseFloat(value);\r\n\t\t\t\telse if (ISO_DATE.test(value))\r\n\t\t\t\t\treturn new Date(value);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn (value === '' ? null : value);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\r\n\t\t{\r\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\r\n\t\t\t\treturn _results;\r\n\r\n\t\t\tfor (var i = 0; i < _results.data.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar row = _config.header ? {} : [];\r\n\r\n\t\t\t\tvar j;\r\n\t\t\t\tfor (j = 0; j < _results.data[i].length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar field = j;\r\n\t\t\t\t\tvar value = _results.data[i][j];\r\n\r\n\t\t\t\t\tif (_config.header)\r\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\r\n\r\n\t\t\t\t\tif (_config.transform)\r\n\t\t\t\t\t\tvalue = _config.transform(value,field);\r\n\r\n\t\t\t\t\tvalue = parseDynamic(field, value);\r\n\r\n\t\t\t\t\tif (field === '__parsed_extra')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trow[field] = row[field] || [];\r\n\t\t\t\t\t\trow[field].push(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\trow[field] = value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_results.data[i] = row;\r\n\r\n\t\t\t\tif (_config.header)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (j > _fields.length)\r\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\r\n\t\t\t\t\telse if (j < _fields.length)\r\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (_config.header && _results.meta)\r\n\t\t\t\t_results.meta.fields = _fields;\r\n\r\n\t\t\t_rowCounter += _results.data.length;\r\n\t\t\treturn _results;\r\n\t\t}\r\n\r\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments)\r\n\t\t{\r\n\t\t\tvar delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\r\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow;\r\n\r\n\t\t\tfor (var i = 0; i < delimChoices.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar delim = delimChoices[i];\r\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\r\n\t\t\t\tfieldCountPrevRow = undefined;\r\n\r\n\t\t\t\tvar preview = new Parser({\r\n\t\t\t\t\tcomments: comments,\r\n\t\t\t\t\tdelimiter: delim,\r\n\t\t\t\t\tnewline: newline,\r\n\t\t\t\t\tpreview: 10\r\n\t\t\t\t}).parse(input);\r\n\r\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j]))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\temptyLinesCount++;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\r\n\t\t\t\t\tavgFieldCount += fieldCount;\r\n\r\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (fieldCount > 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\r\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (preview.data.length > 0)\r\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\r\n\r\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\r\n\t\t\t\t\t&& avgFieldCount > 1.99)\r\n\t\t\t\t{\r\n\t\t\t\t\tbestDelta = delta;\r\n\t\t\t\t\tbestDelim = delim;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_config.delimiter = bestDelim;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tsuccessful: !!bestDelim,\r\n\t\t\t\tbestDelimiter: bestDelim\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction guessLineEndings(input, quoteChar)\r\n\t\t{\r\n\t\t\tinput = input.substr(0, 1024 * 1024);\t// max length 1 MB\r\n\t\t\t// Replace all the text inside quotes\r\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\r\n\t\t\tinput = input.replace(re, '');\r\n\r\n\t\t\tvar r = input.split('\\r');\r\n\r\n\t\t\tvar n = input.split('\\n');\r\n\r\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\r\n\r\n\t\t\tif (r.length === 1 || nAppearsFirst)\r\n\t\t\t\treturn '\\n';\r\n\r\n\t\t\tvar numWithN = 0;\r\n\t\t\tfor (var i = 0; i < r.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (r[i][0] === '\\n')\r\n\t\t\t\t\tnumWithN++;\r\n\t\t\t}\r\n\r\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\r\n\t\t}\r\n\r\n\t\tfunction addError(type, code, msg, row)\r\n\t\t{\r\n\t\t\t_results.errors.push({\r\n\t\t\t\ttype: type,\r\n\t\t\t\tcode: code,\r\n\t\t\t\tmessage: msg,\r\n\t\t\t\trow: row\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\r\n\tfunction escapeRegExp(string)\r\n\t{\r\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n\t}\r\n\r\n\t/** The core parser implements speedy and correct CSV parsing */\r\n\tfunction Parser(config)\r\n\t{\r\n\t\t// Unpack the config object\r\n\t\tconfig = config || {};\r\n\t\tvar delim = config.delimiter;\r\n\t\tvar newline = config.newline;\r\n\t\tvar comments = config.comments;\r\n\t\tvar step = config.step;\r\n\t\tvar preview = config.preview;\r\n\t\tvar fastMode = config.fastMode;\r\n\t\tvar quoteChar;\r\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\r\n\t\tif (config.quoteChar === undefined) {\r\n\t\t\tquoteChar = '\"';\r\n\t\t} else {\r\n\t\t\tquoteChar = config.quoteChar;\r\n\t\t}\r\n\t\tvar escapeChar = quoteChar;\r\n\t\tif (config.escapeChar !== undefined) {\r\n\t\t\tescapeChar = config.escapeChar;\r\n\t\t}\r\n\r\n\t\t// Delimiter must be valid\r\n\t\tif (typeof delim !== 'string'\r\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\r\n\t\t\tdelim = ',';\r\n\r\n\t\t// Comment character must be valid\r\n\t\tif (comments === delim)\r\n\t\t\tthrow 'Comment character same as delimiter';\r\n\t\telse if (comments === true)\r\n\t\t\tcomments = '#';\r\n\t\telse if (typeof comments !== 'string'\r\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\r\n\t\t\tcomments = false;\r\n\r\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\r\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\r\n\t\t\tnewline = '\\n';\r\n\r\n\t\t// We're gonna need these at the Parser scope\r\n\t\tvar cursor = 0;\r\n\t\tvar aborted = false;\r\n\r\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\r\n\t\t{\r\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\r\n\t\t\tif (typeof input !== 'string')\r\n\t\t\t\tthrow 'Input must be a string';\r\n\r\n\t\t\t// We don't need to compute some of these every time parse() is called,\r\n\t\t\t// but having them in a more local scope seems to perform better\r\n\t\t\tvar inputLen = input.length,\r\n\t\t\t\tdelimLen = delim.length,\r\n\t\t\t\tnewlineLen = newline.length,\r\n\t\t\t\tcommentsLen = comments.length;\r\n\t\t\tvar stepIsFunction = isFunction(step);\r\n\r\n\t\t\t// Establish starting state\r\n\t\t\tcursor = 0;\r\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\r\n\r\n\t\t\tif (!input)\r\n\t\t\t\treturn returnable();\r\n\r\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\r\n\t\t\t{\r\n\t\t\t\tvar rows = input.split(newline);\r\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\trow = rows[i];\r\n\t\t\t\t\tcursor += row.length;\r\n\t\t\t\t\tif (i !== rows.length - 1)\r\n\t\t\t\t\t\tcursor += newline.length;\r\n\t\t\t\t\telse if (ignoreLastRow)\r\n\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\tif (comments && row.substr(0, commentsLen) === comments)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\tif (stepIsFunction)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata = [];\r\n\t\t\t\t\t\tpushRow(row.split(delim));\r\n\t\t\t\t\t\tdoStep();\r\n\t\t\t\t\t\tif (aborted)\r\n\t\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tpushRow(row.split(delim));\r\n\t\t\t\t\tif (preview && i >= preview)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata = data.slice(0, preview);\r\n\t\t\t\t\t\treturn returnable(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn returnable();\r\n\t\t\t}\r\n\r\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\r\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\r\n\t\t\tvar quoteCharRegex = new RegExp(escapeChar.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&') + quoteChar, 'g');\r\n\t\t\tvar quoteSearch;\r\n\r\n\t\t\t// Parser loop\r\n\t\t\tfor (;;)\r\n\t\t\t{\r\n\t\t\t\t// Field has opening quote\r\n\t\t\t\tif (input[cursor] === quoteChar)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\r\n\t\t\t\t\tquoteSearch = cursor;\r\n\r\n\t\t\t\t\t// Skip the opening quote\r\n\t\t\t\t\tcursor++;\r\n\r\n\t\t\t\t\tfor (;;)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Find closing quote\r\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\r\n\r\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\r\n\t\t\t\t\t\tif (quoteSearch === -1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\r\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\r\n\t\t\t\t\t\t\t\terrors.push({\r\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\r\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\r\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\r\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\r\n\t\t\t\t\t\t\t\t\tindex: cursor\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn finish();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Closing quote at EOF\r\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\r\n\t\t\t\t\t\t\treturn finish(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\r\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\r\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tquoteSearch++;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\r\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\r\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\r\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\r\n\r\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\r\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\r\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\r\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\r\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\r\n\r\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\r\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, newlineLen) === newline)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\r\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\r\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\r\n\r\n\t\t\t\t\t\t\tif (stepIsFunction)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdoStep();\r\n\t\t\t\t\t\t\t\tif (aborted)\r\n\t\t\t\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\r\n\t\t\t\t\t\t\t\treturn returnable(true);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\r\n\t\t\t\t\t\terrors.push({\r\n\t\t\t\t\t\t\ttype: 'Quotes',\r\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\r\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\r\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\r\n\t\t\t\t\t\t\tindex: cursor\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tquoteSearch++;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Comment found at start of new line\r\n\t\t\t\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\r\n\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\tcursor = nextNewline + newlineLen;\r\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\r\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\r\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\r\n\t\t\t\t{\r\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\r\n\t\t\t\t\tcursor = nextDelim + delimLen;\r\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// End of row\r\n\t\t\t\tif (nextNewline !== -1)\r\n\t\t\t\t{\r\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\r\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\r\n\r\n\t\t\t\t\tif (stepIsFunction)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdoStep();\r\n\t\t\t\t\t\tif (aborted)\r\n\t\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (preview && data.length >= preview)\r\n\t\t\t\t\t\treturn returnable(true);\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn finish();\r\n\r\n\r\n\t\t\tfunction pushRow(row)\r\n\t\t\t{\r\n\t\t\t\tdata.push(row);\r\n\t\t\t\tlastCursor = cursor;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n             * checks if there are extra spaces after closing quote and given index without any text\r\n             * if Yes, returns the number of spaces\r\n             */\r\n\t\t\tfunction extraSpaces(index) {\r\n\t\t\t\tvar spaceLength = 0;\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\r\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\r\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn spaceLength;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Appends the remaining input from cursor to the end into\r\n\t\t\t * row, saves the row, calls step, and returns the results.\r\n\t\t\t */\r\n\t\t\tfunction finish(value)\r\n\t\t\t{\r\n\t\t\t\tif (ignoreLastRow)\r\n\t\t\t\t\treturn returnable();\r\n\t\t\t\tif (typeof value === 'undefined')\r\n\t\t\t\t\tvalue = input.substr(cursor);\r\n\t\t\t\trow.push(value);\r\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\r\n\t\t\t\tpushRow(row);\r\n\t\t\t\tif (stepIsFunction)\r\n\t\t\t\t\tdoStep();\r\n\t\t\t\treturn returnable();\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Appends the current row to the results. It sets the cursor\r\n\t\t\t * to newCursor and finds the nextNewline. The caller should\r\n\t\t\t * take care to execute user's step function and check for\r\n\t\t\t * preview and end parsing if necessary.\r\n\t\t\t */\r\n\t\t\tfunction saveRow(newCursor)\r\n\t\t\t{\r\n\t\t\t\tcursor = newCursor;\r\n\t\t\t\tpushRow(row);\r\n\t\t\t\trow = [];\r\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\r\n\t\t\t}\r\n\r\n\t\t\t/** Returns an object with the results, errors, and meta. */\r\n\t\t\tfunction returnable(stopped)\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\terrors: errors,\r\n\t\t\t\t\tmeta: {\r\n\t\t\t\t\t\tdelimiter: delim,\r\n\t\t\t\t\t\tlinebreak: newline,\r\n\t\t\t\t\t\taborted: aborted,\r\n\t\t\t\t\t\ttruncated: !!stopped,\r\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t/** Executes the user's step function and resets data & errors. */\r\n\t\t\tfunction doStep()\r\n\t\t\t{\r\n\t\t\t\tstep(returnable());\r\n\t\t\t\tdata = [];\r\n\t\t\t\terrors = [];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/** Sets the abort flag */\r\n\t\tthis.abort = function()\r\n\t\t{\r\n\t\t\taborted = true;\r\n\t\t};\r\n\r\n\t\t/** Gets the cursor position */\r\n\t\tthis.getCharIndex = function()\r\n\t\t{\r\n\t\t\treturn cursor;\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\r\n\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\r\n\tfunction getScriptPath()\r\n\t{\r\n\t\tvar scripts = document.getElementsByTagName('script');\r\n\t\treturn scripts.length ? scripts[scripts.length - 1].src : '';\r\n\t}\r\n\r\n\tfunction newWorker()\r\n\t{\r\n\t\tif (!Papa.WORKERS_SUPPORTED)\r\n\t\t\treturn false;\r\n\t\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\r\n\t\t\t\t'You need to set Papa.SCRIPT_PATH manually.'\r\n\t\t\t);\r\n\t\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\r\n\t\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\r\n\t\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\r\n\t\tvar w = new global.Worker(workerUrl);\r\n\t\tw.onmessage = mainThreadReceivedMessage;\r\n\t\tw.id = workerIdCounter++;\r\n\t\tworkers[w.id] = w;\r\n\t\treturn w;\r\n\t}\r\n\r\n\t/** Callback when main thread receives a message */\r\n\tfunction mainThreadReceivedMessage(e)\r\n\t{\r\n\t\tvar msg = e.data;\r\n\t\tvar worker = workers[msg.workerId];\r\n\t\tvar aborted = false;\r\n\r\n\t\tif (msg.error)\r\n\t\t\tworker.userError(msg.error, msg.file);\r\n\t\telse if (msg.results && msg.results.data)\r\n\t\t{\r\n\t\t\tvar abort = function() {\r\n\t\t\t\taborted = true;\r\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\r\n\t\t\t};\r\n\r\n\t\t\tvar handle = {\r\n\t\t\t\tabort: abort,\r\n\t\t\t\tpause: notImplemented,\r\n\t\t\t\tresume: notImplemented\r\n\t\t\t};\r\n\r\n\t\t\tif (isFunction(worker.userStep))\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tworker.userStep({\r\n\t\t\t\t\t\tdata: [msg.results.data[i]],\r\n\t\t\t\t\t\terrors: msg.results.errors,\r\n\t\t\t\t\t\tmeta: msg.results.meta\r\n\t\t\t\t\t}, handle);\r\n\t\t\t\t\tif (aborted)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdelete msg.results;\t// free memory ASAP\r\n\t\t\t}\r\n\t\t\telse if (isFunction(worker.userChunk))\r\n\t\t\t{\r\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\r\n\t\t\t\tdelete msg.results;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (msg.finished && !aborted)\r\n\t\t\tcompleteWorker(msg.workerId, msg.results);\r\n\t}\r\n\r\n\tfunction completeWorker(workerId, results) {\r\n\t\tvar worker = workers[workerId];\r\n\t\tif (isFunction(worker.userComplete))\r\n\t\t\tworker.userComplete(results);\r\n\t\tworker.terminate();\r\n\t\tdelete workers[workerId];\r\n\t}\r\n\r\n\tfunction notImplemented() {\r\n\t\tthrow 'Not implemented.';\r\n\t}\r\n\r\n\t/** Callback when worker thread receives a message */\r\n\tfunction workerThreadReceivedMessage(e)\r\n\t{\r\n\t\tvar msg = e.data;\r\n\r\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\r\n\t\t\tPapa.WORKER_ID = msg.workerId;\r\n\r\n\t\tif (typeof msg.input === 'string')\r\n\t\t{\r\n\t\t\tglobal.postMessage({\r\n\t\t\t\tworkerId: Papa.WORKER_ID,\r\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\r\n\t\t\t\tfinished: true\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\r\n\t\t{\r\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\r\n\t\t\tif (results)\r\n\t\t\t\tglobal.postMessage({\r\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\r\n\t\t\t\t\tresults: results,\r\n\t\t\t\t\tfinished: true\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/** Makes a deep copy of an array or object (mostly) */\r\n\tfunction copy(obj)\r\n\t{\r\n\t\tif (typeof obj !== 'object' || obj === null)\r\n\t\t\treturn obj;\r\n\t\tvar cpy = obj instanceof Array ? [] : {};\r\n\t\tfor (var key in obj)\r\n\t\t\tcpy[key] = copy(obj[key]);\r\n\t\treturn cpy;\r\n\t}\r\n\r\n\tfunction bindFunction(f, self)\r\n\t{\r\n\t\treturn function() { f.apply(self, arguments); };\r\n\t}\r\n\r\n\tfunction isFunction(func)\r\n\t{\r\n\t\treturn typeof func === 'function';\r\n\t}\r\n\r\n\treturn Papa;\r\n}));\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/supports-color/index.js\":\r\n/*!***********************************************!*\\\r\n  !*** ../node_modules/supports-color/index.js ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nvar argv = process.argv;\r\n\r\nvar terminator = argv.indexOf('--');\r\nvar hasFlag = function (flag) {\r\n\tflag = '--' + flag;\r\n\tvar pos = argv.indexOf(flag);\r\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\r\n};\r\n\r\nmodule.exports = (function () {\r\n\tif ('FORCE_COLOR' in process.env) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (hasFlag('no-color') ||\r\n\t\thasFlag('no-colors') ||\r\n\t\thasFlag('color=false')) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (hasFlag('color') ||\r\n\t\thasFlag('colors') ||\r\n\t\thasFlag('color=true') ||\r\n\t\thasFlag('color=always')) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (process.stdout && !process.stdout.isTTY) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (process.platform === 'win32') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ('COLORTERM' in process.env) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (process.env.TERM === 'dumb') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n})();\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./alpheios/alpheios_adapter.js\":\r\n/*!**************************************!*\\\r\n  !*** ./alpheios/alpheios_adapter.js ***!\r\n  \\**************************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _base_adapter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base_adapter.js */ \"./base_adapter.js\");\r\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! papaparse */ \"../node_modules/papaparse/papaparse.js\");\r\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(papaparse__WEBPACK_IMPORTED_MODULE_1__);\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__);\r\n/* harmony import */ var _config_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config.json */ \"./alpheios/config.json\");\r\nvar _config_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./config.json */ \"./alpheios/config.json\", 1);\r\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\r\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_4__);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AlpheiosLexAdapter extends _base_adapter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * A Client Adapter for the Alpheios V1 Lexicon service\r\n   * @constructor\r\n   * @param {string} lexid - the idenitifer code for the lexicon this instance\r\n   *                         provides access to\r\n   * @param {Object} config - JSON configuration object override\r\n   */\r\n  constructor (lexid = null, config = null) {\r\n    super()\r\n    this.lexid = lexid\r\n    this.data = null\r\n    this.index = null\r\n    // this is a bit of a hack to enable inclusion of a JSON config file\r\n    // in a way that works both pre and post-rollup. Our rollup config\r\n    // will stringify the file and then we can parse it but if we want to\r\n    // run unit tests on pre-rolled up code, then we need to have a fallback\r\n    // which works with the raw ES6 import\r\n    if (config == null) {\r\n      try {\r\n        let fullconfig = JSON.parse(_config_json__WEBPACK_IMPORTED_MODULE_3__)\r\n        this.config = fullconfig[lexid]\r\n      } catch (e) {\r\n        this.config = _config_json__WEBPACK_IMPORTED_MODULE_3__[lexid]\r\n      }\r\n    } else {\r\n      this.config = config\r\n    }\r\n    this.provider = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"ResourceProvider\"](this.lexid, this.config.rights)\r\n  }\r\n\r\n  fetchFullDefWindow (requests, lemma) {\r\n    let targetLanguage = this.getConfig('langs').target\r\n    let promises = []\r\n    for (let r of requests) {\r\n      let p = new Promise((resolve, reject) => {\r\n        window.fetch(r).then(\r\n          function (response) {\r\n            let text = response.text()\r\n            resolve(text)\r\n          }\r\n        ).catch((error) => {\r\n          reject(error)\r\n        })\r\n      }).then((result) => {\r\n        if (result.match(/No entries found/)) {\r\n          throw new Error('Not Found')\r\n        } else {\r\n          let def = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"Definition\"](result, targetLanguage, 'text/html', lemma.word)\r\n          return alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"ResourceProvider\"].getProxy(this.provider, def)\r\n        }\r\n      })\r\n      promises.push(p)\r\n    }\r\n    return Promise.all(promises).then(\r\n      values => {\r\n        return values.filter(value => { return value })\r\n      },\r\n      error => {\r\n        console.log(error)\r\n        throw (error)\r\n        // quietly fail?\r\n      }\r\n    )\r\n  }\r\n\r\n  async fetchFullDefAxios (requests, lemma) {\r\n    let targetLanguage = this.getConfig('langs').target\r\n    let values = []\r\n    for (let url of requests) {\r\n      try {\r\n        let response = await axios__WEBPACK_IMPORTED_MODULE_4___default.a.get(encodeURI(url))\r\n        let result = response.data\r\n\r\n        if (result.match(/No entries found/)) {\r\n          throw new Error('Not Found')\r\n        } else {\r\n          let def = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"Definition\"](result, targetLanguage, 'text/html', lemma.word)\r\n\r\n          alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"ResourceProvider\"].getProxy(this.provider, def)\r\n          values.push(def)\r\n        }\r\n      } catch (err) {\r\n        console.error('Error with request ', url, err.message)\r\n      }\r\n    }\r\n    return values\r\n  }\r\n  /**\r\n   * @override BaseLexiconAdapter#lookupFullDef\r\n   */\r\n  async lookupFullDef (lemma = null) {\r\n    // TODO figure out the best way to handle initial reading of the data file\r\n    if (this.index === null && this.getConfig('urls').index) {\r\n      let url = this.getConfig('urls').index\r\n      let unparsed = await this._loadData(url)\r\n      let parsed = papaparse__WEBPACK_IMPORTED_MODULE_1___default.a.parse(unparsed, {})\r\n      this.index = this._fillMap(parsed.data)\r\n    }\r\n    let ids\r\n    if (this.index) {\r\n      let model = alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"LanguageModelFactory\"].getLanguageModel(lemma.languageID)\r\n      ids = this._lookupInDataIndex(this.index, lemma, model)\r\n    }\r\n\r\n    let url = this.getConfig('urls').full\r\n    if (!url) {\r\n      console.error(`URL data is not available`)\r\n      return\r\n    }\r\n    let requests = []\r\n    if (ids) {\r\n      for (let id of ids) {\r\n        requests.push(`${url}&n=${id}`)\r\n      }\r\n    } else {\r\n      requests.push(`${url}&l=${lemma.word}`)\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n      return this.fetchFullDefWindow(requests, lemma)\r\n    } else {\r\n      return this.fetchFullDefAxios(requests, lemma)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override BaseLexiconAdapter#lookupShortDef\r\n   */\r\n  async lookupShortDef (lemma = null) {\r\n    if (this.data === null) {\r\n      let url = this.getConfig('urls').short\r\n      if (!url) { throw new Error(`URL data is not available`) }\r\n      let unparsed = await this._loadData(url)\r\n      // the PapaParse algorigthm doesn't deal well with fields with start with data\r\n      // in quotes but doesn't use quotes to enclose the entire field contents.\r\n      // eg. a row like\r\n      //   lemma|\"some def\" and more def.\r\n      // throws it off. Since these data files don't contain quoted\r\n      // fields just use a non-printable unicode char as the quoteChar\r\n      // (i.e. one which is unlikely to appear in the data) as the\r\n      // in the papaparse config to prevent it from doing this\r\n      let parsed = papaparse__WEBPACK_IMPORTED_MODULE_1___default.a.parse(unparsed, {quoteChar: '\\u{0000}', delimiter: '|'})\r\n      this.data = this._fillMap(parsed.data)\r\n    }\r\n    let model = alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"LanguageModelFactory\"].getLanguageModel(lemma.languageID)\r\n    let deftexts = this._lookupInDataIndex(this.data, lemma, model)\r\n    let promises = []\r\n    if (deftexts) {\r\n      for (let d of deftexts) {\r\n        promises.push(new Promise((resolve, reject) => {\r\n          let def = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"Definition\"](d, this.getConfig('langs').target, 'text/plain', lemma.word)\r\n          resolve(alpheios_data_models__WEBPACK_IMPORTED_MODULE_2__[\"ResourceProvider\"].getProxy(this.provider, def))\r\n        }))\r\n      }\r\n    } else {\r\n      promises.push(new Promise((resolve, reject) => {\r\n        reject(new Error('Not Found'))\r\n      }\r\n      ))\r\n    }\r\n    return Promise.all(promises).then(\r\n      values => {\r\n        return values.filter(value => { return value })\r\n      },\r\n      error => {\r\n        throw (error)\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Lookup a Lemma object in an Alpheios v1 data index\r\n   * @param {Map} data the data inddex\r\n   * @param {Lemma} lemma the lemma to lookupInDataIndex\r\n   * @param {LanguageModel} model a language model for language specific methods\r\n   * @return {string} the index entry as a text string\r\n   */\r\n  _lookupInDataIndex (data, lemma, model) {\r\n    // legacy behavior from Alpheios lemma data file indices\r\n    // first look to see if we explicitly have an instance of this lemma\r\n    // with capitalization retained\r\n    let found\r\n\r\n    let alternatives = []\r\n    let altEncodings = []\r\n    for (let l of [lemma.word, ...lemma.principalParts]) {\r\n      alternatives.push(l)\r\n      for (let a of model.alternateWordEncodings(l)) {\r\n        // we gather altEncodings separately because they should\r\n        // be tried last after the lemma and principalParts in their\r\n        // original form\r\n        altEncodings.push(a)\r\n      }\r\n      let nosense = l.replace(/_?\\d+$/, '')\r\n      if (l !== nosense) {\r\n        alternatives.push(nosense)\r\n      }\r\n    }\r\n    alternatives = [...alternatives, ...altEncodings]\r\n\r\n    for (let lookup of alternatives) {\r\n      found = data.get(lookup.toLocaleLowerCase())\r\n      if (found && found.length === 1 && found[0] === '@') {\r\n        found = data.get(`@${lookup}`)\r\n      }\r\n      if (found) {\r\n        break\r\n      }\r\n    }\r\n    return found\r\n  }\r\n\r\n  fetchWindow (url) {\r\n    return new Promise((resolve, reject) => {\r\n      window.fetch(url).then(\r\n        function (response) {\r\n          let text = response.text()\r\n          resolve(text)\r\n        }\r\n      ).catch((error) => {\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n\r\n  async fetchAxios (url) {\r\n    let res = await axios__WEBPACK_IMPORTED_MODULE_4___default.a.get(encodeURI(url))\r\n    return res.data\r\n  }\r\n\r\n  /**\r\n   * Loads a data file from a URL\r\n   * @param {string} url - the url of the file\r\n   * @returns {Promise} a Promise that resolves to the text contents of the loaded file\r\n   */\r\n  _loadData (url) {\r\n    // TODO figure out best way to load this data\r\n    if (typeof window !== 'undefined') {\r\n      return this.fetchWindow(url)\r\n    } else {\r\n      return this.fetchAxios(url)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * fills the data map with the rows from the parsed file\r\n   * we need a method to do this because there may be homonyms in\r\n   * the files\r\n   * @param {string[]} rows\r\n   * @return {Map} the filled map\r\n   */\r\n  _fillMap (rows) {\r\n    let data = new Map()\r\n    for (let row of rows) {\r\n      if (data.has(row[0])) {\r\n        data.get(row[0]).push(row[1])\r\n      } else {\r\n        data.set(row[0], [ row[1] ])\r\n      }\r\n    }\r\n    return data\r\n  }\r\n\r\n  /**\r\n   * Get a configuration setting for this lexicon client instance\r\n   * @param {string} property\r\n   * @returns {string} the value of the property\r\n   */\r\n  getConfig (property) {\r\n    return this.config[property]\r\n  }\r\n\r\n  /**\r\n   * @override BaseAdapter#getLexicons\r\n   */\r\n  static getLexicons (language) {\r\n    let fullconfig\r\n    let lexicons = new Map()\r\n    try {\r\n      fullconfig = JSON.parse(_config_json__WEBPACK_IMPORTED_MODULE_3__)\r\n    } catch (e) {\r\n      fullconfig = _config_json__WEBPACK_IMPORTED_MODULE_3__\r\n    }\r\n    for (let l of Object.keys(fullconfig)) {\r\n      if (fullconfig[l].langs.source === language) {\r\n        lexicons.set(l, fullconfig[l].description)\r\n      }\r\n    }\r\n    return lexicons\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (AlpheiosLexAdapter);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./alpheios/config.json\":\r\n/*!******************************!*\\\r\n  !*** ./alpheios/config.json ***!\r\n  \\******************************/\r\n/*! exports provided: https://github.com/alpheios-project/lsj, https://github.com/alpheios-project/aut, https://github.com/alpheios-project/ml, https://github.com/alpheios-project/as, https://github.com/alpheios-project/dod, https://github.com/alpheios-project/ls, https://github.com/alpheios-project/lan, https://github.com/alpheios-project/sal, https://github.com/alpheios-project/stg, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"https://github.com/alpheios-project/lsj\":{\"urls\":{\"short\":\"https://repos1.alpheios.net/lexdata/lsj/dat/grc-lsj-defs.dat\",\"index\":\"https://repos1.alpheios.net/lexdata/lsj/dat/grc-lsj-ids.dat\",\"full\":\"https://repos1.alpheios.net/exist/rest/db/xq/lexi-get.xq?lx=lsj&lg=grc&out=html\"},\"langs\":{\"source\":\"grc\",\"target\":\"en\"},\"description\":\"\\\"A Greek-English Lexicon\\\" (Henry George Liddell, Robert Scott)\",\"rights\":\"\\\"A Greek-English Lexicon\\\" (Henry George Liddell, Robert Scott). Provided by the Perseus Digital Library at Tufts University.\"},\"https://github.com/alpheios-project/aut\":{\"urls\":{\"short\":\"https://repos1.alpheios.net/lexdata/aut/dat/grc-aut-defs.dat\",\"index\":\"https://repos1.alpheios.net/lexdata/aut//dat/grc-aut-ids.dat\",\"full\":\"https://repos1.alpheios.net/exist/rest/db/xq/lexi-get.xq?lx=aut&lg=grc&out=html\"},\"langs\":{\"source\":\"grc\",\"target\":\"en\"},\"description\":\"\\\"Autenrieth Homeric Dictionary\\\" (Geoerge Autenrieth)\",\"rights\":\"\\\"Autenrieth Homeric Dictionary\\\" (Geoerge Autenrieth). Provided by the Perseus Digital Library at Tufts University\"},\"https://github.com/alpheios-project/ml\":{\"urls\":{\"short\":\"https://repos1.alpheios.net/lexdata/ml/dat/grc-ml-defs.dat\",\"index\":\"https://repos1.alpheios.net/lexdata/ml/dat/grc-ml-ids.dat\",\"full\":\"https://repos1.alpheios.net/exist/rest/db/xq/lexi-get.xq?lx=ml&lg=grc&out=html\"},\"langs\":{\"source\":\"grc\",\"target\":\"en\"},\"description\":\"\\\"Middle Liddell\\\"\",\"rights\":\"\\\"An Intermediate Greek-English Lexicon\\\" (Henry George Liddell, Robert Scott). Provided by the Perseus Digital Library at Tufts University\"},\"https://github.com/alpheios-project/as\":{\"urls\":{\"short\":\"https://repos1.alpheios.net/lexdata/as/dat/grc-as-defs.dat\",\"index\":\"https://repos1.alpheios.net/lexdata/as/dat/grc-as-ids.dat\",\"full\":\"https://repos1.alpheios.net/exist/rest/db/xq/lexi-get.xq?lx=as&lg=grc&out=html\"},\"langs\":{\"source\":\"grc\",\"target\":\"en\"},\"description\":\"\\\"A Manual Greek Lexicon of the New Testament\\\"\",\"rights\":\"\\\"A Manual Greek Lexicon of the New Testament\\\" (G. Abbott-Smith). Provided by biblicalhumanities.org.\"},\"https://github.com/alpheios-project/dod\":{\"urls\":{\"short\":\"https://repos1.alpheios.net/lexdata/dod/dat/grc-dod-defs.dat\",\"index\":\"https://repos1.alpheios.net/lexdata/dod/dat/grc-dod-ids.dat\",\"full\":null},\"langs\":{\"source\":\"grc\",\"target\":\"en\"},\"description\":\"\\\"Dodson\\\"\",\"rights\":\"\\\"A Public Domain lexicon by John Jeffrey Dodson (2010)\\\". Provided by biblicalhumanities.org.\"},\"https://github.com/alpheios-project/ls\":{\"urls\":{\"short\":null,\"index\":\"https://repos1.alpheios.net/lexdata/ls/dat/lat-ls-ids.dat\",\"full\":\"https://repos1.alpheios.net/exist/rest/db/xq/lexi-get.xq?lx=ls&lg=lat&out=html\"},\"langs\":{\"source\":\"lat\",\"target\":\"en\"},\"description\":\"\\\"A Latin Dictionary\\\" (Charlton T. Lewis, Charles Short)\",\"rights\":\"\\\"A Latin Dictionary\\\" (Charlton T. Lewis, Charles Short). Provided by the Perseus Digital Library at Tufts University.\"},\"https://github.com/alpheios-project/lan\":{\"urls\":{\"short\":null,\"index\":\"https://repos1.alpheios.net/lexdata/lan/dat/ara-lan-ids.dat\",\"full\":\"https://repos1.alpheios.net/exist/rest/db/xq/lexi-get.xq?lx=lan&lg=ara&out=html\"},\"langs\":{\"source\":\"ara\",\"target\":\"en\"},\"description\":\"\\\"The Arabic-English Lexicon\\\" (Edward Lane)\",\"rights\":\"\\\"The Arabic-English Lexicon\\\" (Edward Lane). Provided by the Perseus Digital Library at Tufts University.\"},\"https://github.com/alpheios-project/sal\":{\"urls\":{\"short\":null,\"index\":\"https://repos1.alpheios.net/lexdata/sal/dat/ara-sal-ids.dat\",\"full\":\"https://repos1.alpheios.net/exist/rest/db/xq/lexi-get.xq?lx=sal&lg=ara&out=html\"},\"langs\":{\"source\":\"ara\",\"target\":\"en\"},\"description\":\"\\\"An Advanced Learner's Arabic Dictionary\\\" (H. Anthony Salmone)\",\"rights\":\"\\\"An Advanced Learner's Arabic Dictionary\\\" (H. Anthony Salmone). Provided by the Perseus Digital Library at Tufts University.\"},\"https://github.com/alpheios-project/stg\":{\"urls\":{\"short\":\"https://repos1.alpheios.net/lexdata/stg/dat/per-stg-defs.dat\",\"index\":\"https://repos1.alpheios.net/lexdata/stg/dat/per-stg-ids.dat\",\"full\":null},\"langs\":{\"source\":\"per\",\"target\":\"en\"},\"description\":\"\\\"A Comprehensive Persian-English Dictionary\\\" (Francis Joseph Steingass)\",\"rights\":\"\\\"A Comprehensive Persian-English Dictionary\\\" (Francis Joseph Steingass). Provided by the Center for Advanced Study of Language (CASL) at the University of Maryland, College Park.\"}};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./base_adapter.js\":\r\n/*!*************************!*\\\r\n  !*** ./base_adapter.js ***!\r\n  \\*************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/**\r\n * Base Adapter Class for a Lexicon Service\r\n */\r\nclass BaseLexiconAdapter {\r\n  /**\r\n   * Lookup a short definition in a lexicon\r\n   * @param {Lemma} lemma Lemma to lookup\r\n   * @return {Promise} a Promise that resolves to an array Definition objects\r\n   */\r\n  async lookupShortDef (lemma) {\r\n    throw new Error('Unimplemented')\r\n  }\r\n\r\n  /**\r\n   * Lookup a full definition in a lexicon\r\n   * @param {Lemma} lemma Lemma to lookup\r\n   * @return {Promise} a Promise that resolves to an array of Definition objects\r\n   */\r\n  async lookupFullDef (lemma) {\r\n    throw new Error('Unimplemented')\r\n  }\r\n\r\n  /**\r\n   * Get the available lexicons provided by this adapter class for the\r\n   * requested language\r\n   * @param {string} language languageCode\r\n   * @return {Array} a Map of lexicon objects. Keys are lexicon uris, values are the lexicon description.\r\n   */\r\n  static getLexicons (language) {\r\n    return []\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseLexiconAdapter);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./driver.js\":\r\n/*!*******************!*\\\r\n  !*** ./driver.js ***!\r\n  \\*******************/\r\n/*! exports provided: Lexicons, AlpheiosLexAdapter */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alpheios/alpheios_adapter */ \"./alpheios/alpheios_adapter.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AlpheiosLexAdapter\", function() { return _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\r\n\r\n/* harmony import */ var _lexicons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lexicons */ \"./lexicons.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Lexicons\", function() { return _lexicons__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\r\n\r\n\r\n\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./lexicons.js\":\r\n/*!*********************!*\\\r\n  !*** ./lexicons.js ***!\r\n  \\*********************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Lexicons; });\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__);\r\n/* harmony import */ var _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alpheios/alpheios_adapter */ \"./alpheios/alpheios_adapter.js\");\r\n\r\n\r\n\r\nlet lexicons = new Map() // Maps a language ID into an array of lexicons\r\n\r\nclass Lexicons {\r\n  /**\r\n   * Default request parameters\r\n   * @return {{timeout: number}}\r\n   */\r\n  static get defaults () {\r\n    return {\r\n      timeout: 0 // If zero, no timeout will be used\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A short definition request wrapper. See fetchFullDefs for more details.\r\n   * @param lemma\r\n   * @param options\r\n   * @return {Promise[]}\r\n   */\r\n  static fetchShortDefs (lemma, options = {}) {\r\n    return Lexicons.fetchDefinitions(lemma, options, 'lookupShortDef')\r\n  }\r\n\r\n  /**\r\n   * A full definition request wrapper. See fetchFullDefs for more details.\r\n   * @param lemma\r\n   * @param options\r\n   * @return {Promise[]}\r\n   */\r\n  static fetchFullDefs (lemma, options = {}) {\r\n    return Lexicons.fetchDefinitions(lemma, options, 'lookupFullDef')\r\n  }\r\n\r\n  /**\r\n   * Send requests to either short of full definitions depending on the `lookupFunction` value.\r\n   * @param {Lemma} lemma - A lemma we need definitions for.\r\n   * @param {Object} requestOptions - With what options run a request.\r\n   * @param {String} lookupFunction - A name of an adapter lookup function to use for a request.\r\n   * @return {Promise[]} Array of Promises, one for each request. They will be either fulfilled with\r\n   * a Definition object or resolved with an error if request cannot be made/failed/timeout expired.\r\n   */\r\n  static fetchDefinitions (lemma, requestOptions, lookupFunction) {\r\n    let options = Object.assign(Lexicons.defaults, requestOptions)\r\n    let requests = []\r\n    try {\r\n      let adapters = Lexicons._filterAdapters(lemma, requestOptions)\r\n      requests = adapters.map(adapter => {\r\n        if (typeof window !== 'undefined') {\r\n          console.log(`Preparing a request to \"${adapter.config.description}\"`)\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n          let timeout = 0\r\n          if (options.timeout > 0) {\r\n            if (typeof window !== 'undefined') {\r\n              timeout = window.setTimeout(() => {\r\n                reject(new Error(`Timeout of ${options.timeout} ms has been expired for a request to \"${adapter.config.description}\"`))\r\n              }, options.timeout)\r\n            } else {\r\n              timeout = setTimeout(() => {\r\n                reject(new Error(`Timeout of ${options.timeout} ms has been expired for a request to \"${adapter.config.description}\"`))\r\n              }, options.timeout)\r\n            }\r\n          }\r\n\r\n          try {\r\n            adapter[lookupFunction](lemma)\r\n              .then(value => {\r\n                if (typeof window !== 'undefined') {\r\n                  console.log(`A definition object has been returned from \"${adapter.config.description}\"`, value)\r\n                }\r\n                if (timeout) {\r\n                  if (typeof window !== 'undefined') {\r\n                    window.clearTimeout(timeout)\r\n                  } else {\r\n                    clearTimeout(timeout)\r\n                  }\r\n                }\r\n                // value is a Definition object wrapped in a Proxy\r\n                resolve(value)\r\n              }).catch(error => {\r\n                if (timeout) {\r\n                  if (typeof window !== 'undefined') {\r\n                    window.clearTimeout(timeout)\r\n                  } else {\r\n                    clearTimeout(timeout)\r\n                  }\r\n                }\r\n                reject(error)\r\n              })\r\n          } catch (error) {\r\n            reject(error)\r\n          }\r\n        })\r\n      })\r\n\r\n      return requests\r\n    } catch (error) {\r\n      console.log(`Unable to fetch full definitions due to: ${error}`)\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filter the adapters for a request according to the options\r\n   * @param {Lemma} lemma - the requested lemma\r\n   * @param {Object} objects - the request options\r\n   * @return the list of applicable Adapters\r\n   */\r\n  static _filterAdapters (lemma, options) {\r\n    if (typeof window !== 'undefined') {\r\n      console.log('Request Options', options)\r\n    }\r\n    let adapters = Lexicons.getLexiconAdapters(lemma.languageID)\r\n    if (adapters && options.allow) {\r\n      adapters = adapters.filter((a) => options.allow.includes(a.lexid))\r\n    }\r\n    if (!adapters || adapters.length === 0) { return [] } // No adapters found for this language\r\n    return adapters\r\n  }\r\n\r\n  /**\r\n   * Returns a list of suitable lexicon adapters for a given language ID.\r\n   * @param {Symbol} languageID - A language ID of adapters returned.\r\n   * @return {BaseLexiconAdapter[]} An array of lexicon adapters for a given language.\r\n   */\r\n  static getLexiconAdapters (languageID) {\r\n    if (!lexicons.has(languageID)) {\r\n      // As getLexicons need a language code, let's convert a language ID to a code\r\n      let languageCode = alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__[\"LanguageModelFactory\"].getLanguageCodeFromId(languageID)\r\n\r\n      let lexiconsList = _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getLexicons(languageCode)\r\n      lexicons.set(languageID, Array.from(lexiconsList.keys()).map(id => new _alpheios_alpheios_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"](id)))\r\n    }\r\n    return lexicons.get(languageID)\r\n  }\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"alpheios-data-models\":\r\n/*!***************************************!*\\\r\n  !*** external \"alpheios-data-models\" ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_alpheios_data_models__;\r\n\r\n/***/ }),\r\n\r\n/***/ \"assert\":\r\n/*!*************************!*\\\r\n  !*** external \"assert\" ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! assert */ \"assert\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"http\":\r\n/*!***********************!*\\\r\n  !*** external \"http\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! http */ \"http\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"https\":\r\n/*!************************!*\\\r\n  !*** external \"https\" ***!\r\n  \\************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! https */ \"https\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"stream\":\r\n/*!*************************!*\\\r\n  !*** external \"stream\" ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! stream */ \"stream\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"tty\":\r\n/*!**********************!*\\\r\n  !*** external \"tty\" ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! tty */ \"tty\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"url\":\r\n/*!**********************!*\\\r\n  !*** external \"url\" ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! url */ \"url\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"util\":\r\n/*!***********************!*\\\r\n  !*** external \"util\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! util */ \"util\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"zlib\":\r\n/*!***********************!*\\\r\n  !*** external \"zlib\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! zlib */ \"zlib\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=alpheios-lexicon-client.node.js.map\n\n//# sourceURL=webpack:///./node_modules/alpheios-lexicon-client/dist/alpheios-lexicon-client.node.js?");

/***/ }),

/***/ "./node_modules/alpheios-morph-client/dist/alpheios-morph-client.node.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/alpheios-morph-client/dist/alpheios-morph-client.node.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(true)\r\n\t\tmodule.exports = factory(__webpack_require__(/*! alpheios-data-models */ \"./node_modules/alpheios-data-models/dist/alpheios-data-models.node.js\"));\r\n\telse { var i, a; }\r\n})(global, function(__WEBPACK_EXTERNAL_MODULE_alpheios_data_models__) {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = function(exports) {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/\r\n/******/ \t// create a fake namespace object\r\n/******/ \t// mode & 1: value is a module id, require it\r\n/******/ \t// mode & 2: merge all properties of value into the ns\r\n/******/ \t// mode & 4: return value when already ns object\r\n/******/ \t// mode & 8|1: behave like require\r\n/******/ \t__webpack_require__.t = function(value, mode) {\r\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\r\n/******/ \t\tif(mode & 8) return value;\r\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\r\n/******/ \t\tvar ns = Object.create(null);\r\n/******/ \t\t__webpack_require__.r(ns);\r\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\r\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\r\n/******/ \t\treturn ns;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./driver.js\");\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ({\r\n\r\n/***/ \"../node_modules/axios/index.js\":\r\n/*!**************************************!*\\\r\n  !*** ../node_modules/axios/index.js ***!\r\n  \\**************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nmodule.exports = __webpack_require__(/*! ./lib/axios */ \"../node_modules/axios/lib/axios.js\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/adapters/http.js\":\r\n/*!**************************************************!*\\\r\n  !*** ../node_modules/axios/lib/adapters/http.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../node_modules/axios/lib/core/settle.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../node_modules/axios/lib/helpers/buildURL.js\");\r\nvar http = __webpack_require__(/*! http */ \"http\");\r\nvar https = __webpack_require__(/*! https */ \"https\");\r\nvar httpFollow = __webpack_require__(/*! follow-redirects */ \"../node_modules/follow-redirects/index.js\").http;\r\nvar httpsFollow = __webpack_require__(/*! follow-redirects */ \"../node_modules/follow-redirects/index.js\").https;\r\nvar url = __webpack_require__(/*! url */ \"url\");\r\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\r\nvar pkg = __webpack_require__(/*! ./../../package.json */ \"../node_modules/axios/package.json\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"../node_modules/axios/lib/core/createError.js\");\r\nvar enhanceError = __webpack_require__(/*! ../core/enhanceError */ \"../node_modules/axios/lib/core/enhanceError.js\");\r\n\r\n/*eslint consistent-return:0*/\r\nmodule.exports = function httpAdapter(config) {\r\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\r\n    var data = config.data;\r\n    var headers = config.headers;\r\n    var timer;\r\n\r\n    // Set User-Agent (required by some servers)\r\n    // Only set header if it hasn't been set in config\r\n    // See https://github.com/axios/axios/issues/69\r\n    if (!headers['User-Agent'] && !headers['user-agent']) {\r\n      headers['User-Agent'] = 'axios/' + pkg.version;\r\n    }\r\n\r\n    if (data && !utils.isStream(data)) {\r\n      if (Buffer.isBuffer(data)) {\r\n        // Nothing to do...\r\n      } else if (utils.isArrayBuffer(data)) {\r\n        data = new Buffer(new Uint8Array(data));\r\n      } else if (utils.isString(data)) {\r\n        data = new Buffer(data, 'utf-8');\r\n      } else {\r\n        return reject(createError(\r\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\r\n          config\r\n        ));\r\n      }\r\n\r\n      // Add Content-Length header if data exists\r\n      headers['Content-Length'] = data.length;\r\n    }\r\n\r\n    // HTTP basic authentication\r\n    var auth = undefined;\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password || '';\r\n      auth = username + ':' + password;\r\n    }\r\n\r\n    // Parse url\r\n    var parsed = url.parse(config.url);\r\n    var protocol = parsed.protocol || 'http:';\r\n\r\n    if (!auth && parsed.auth) {\r\n      var urlAuth = parsed.auth.split(':');\r\n      var urlUsername = urlAuth[0] || '';\r\n      var urlPassword = urlAuth[1] || '';\r\n      auth = urlUsername + ':' + urlPassword;\r\n    }\r\n\r\n    if (auth) {\r\n      delete headers.Authorization;\r\n    }\r\n\r\n    var isHttps = protocol === 'https:';\r\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\r\n\r\n    var options = {\r\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\r\n      method: config.method,\r\n      headers: headers,\r\n      agent: agent,\r\n      auth: auth\r\n    };\r\n\r\n    if (config.socketPath) {\r\n      options.socketPath = config.socketPath;\r\n    } else {\r\n      options.hostname = parsed.hostname;\r\n      options.port = parsed.port;\r\n    }\r\n\r\n    var proxy = config.proxy;\r\n    if (!proxy && proxy !== false) {\r\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\r\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\r\n      if (proxyUrl) {\r\n        var parsedProxyUrl = url.parse(proxyUrl);\r\n        proxy = {\r\n          host: parsedProxyUrl.hostname,\r\n          port: parsedProxyUrl.port\r\n        };\r\n\r\n        if (parsedProxyUrl.auth) {\r\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\r\n          proxy.auth = {\r\n            username: proxyUrlAuth[0],\r\n            password: proxyUrlAuth[1]\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    if (proxy) {\r\n      options.hostname = proxy.host;\r\n      options.host = proxy.host;\r\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\r\n      options.port = proxy.port;\r\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\r\n\r\n      // Basic proxy authorization\r\n      if (proxy.auth) {\r\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\r\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\r\n      }\r\n    }\r\n\r\n    var transport;\r\n    if (config.transport) {\r\n      transport = config.transport;\r\n    } else if (config.maxRedirects === 0) {\r\n      transport = isHttps ? https : http;\r\n    } else {\r\n      if (config.maxRedirects) {\r\n        options.maxRedirects = config.maxRedirects;\r\n      }\r\n      transport = isHttps ? httpsFollow : httpFollow;\r\n    }\r\n\r\n    if (config.maxContentLength && config.maxContentLength > -1) {\r\n      options.maxBodyLength = config.maxContentLength;\r\n    }\r\n\r\n    // Create the request\r\n    var req = transport.request(options, function handleResponse(res) {\r\n      if (req.aborted) return;\r\n\r\n      // Response has been received so kill timer that handles request timeout\r\n      clearTimeout(timer);\r\n      timer = null;\r\n\r\n      // uncompress the response body transparently if required\r\n      var stream = res;\r\n      switch (res.headers['content-encoding']) {\r\n      /*eslint default-case:0*/\r\n      case 'gzip':\r\n      case 'compress':\r\n      case 'deflate':\r\n        // add the unzipper to the body stream processing pipeline\r\n        stream = stream.pipe(zlib.createUnzip());\r\n\r\n        // remove the content-encoding in order to not confuse downstream operations\r\n        delete res.headers['content-encoding'];\r\n        break;\r\n      }\r\n\r\n      // return the last request in case of redirects\r\n      var lastRequest = res.req || req;\r\n\r\n      var response = {\r\n        status: res.statusCode,\r\n        statusText: res.statusMessage,\r\n        headers: res.headers,\r\n        config: config,\r\n        request: lastRequest\r\n      };\r\n\r\n      if (config.responseType === 'stream') {\r\n        response.data = stream;\r\n        settle(resolve, reject, response);\r\n      } else {\r\n        var responseBuffer = [];\r\n        stream.on('data', function handleStreamData(chunk) {\r\n          responseBuffer.push(chunk);\r\n\r\n          // make sure the content length is not over the maxContentLength if specified\r\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\r\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\r\n              config, null, lastRequest));\r\n          }\r\n        });\r\n\r\n        stream.on('error', function handleStreamError(err) {\r\n          if (req.aborted) return;\r\n          reject(enhanceError(err, config, null, lastRequest));\r\n        });\r\n\r\n        stream.on('end', function handleStreamEnd() {\r\n          var responseData = Buffer.concat(responseBuffer);\r\n          if (config.responseType !== 'arraybuffer') {\r\n            responseData = responseData.toString('utf8');\r\n          }\r\n\r\n          response.data = responseData;\r\n          settle(resolve, reject, response);\r\n        });\r\n      }\r\n    });\r\n\r\n    // Handle errors\r\n    req.on('error', function handleRequestError(err) {\r\n      if (req.aborted) return;\r\n      reject(enhanceError(err, config, null, req));\r\n    });\r\n\r\n    // Handle request timeout\r\n    if (config.timeout && !timer) {\r\n      timer = setTimeout(function handleRequestTimeout() {\r\n        req.abort();\r\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\r\n      }, config.timeout);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (req.aborted) return;\r\n\r\n        req.abort();\r\n        reject(cancel);\r\n      });\r\n    }\r\n\r\n    // Send the request\r\n    if (utils.isStream(data)) {\r\n      data.pipe(req);\r\n    } else {\r\n      req.end(data);\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/adapters/xhr.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/adapters/xhr.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar settle = __webpack_require__(/*! ./../core/settle */ \"../node_modules/axios/lib/core/settle.js\");\r\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"../node_modules/axios/lib/helpers/buildURL.js\");\r\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"../node_modules/axios/lib/helpers/parseHeaders.js\");\r\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"../node_modules/axios/lib/helpers/isURLSameOrigin.js\");\r\nvar createError = __webpack_require__(/*! ../core/createError */ \"../node_modules/axios/lib/core/createError.js\");\r\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(/*! ./../helpers/btoa */ \"../node_modules/axios/lib/helpers/btoa.js\");\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n\r\n    if (utils.isFormData(requestData)) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n    var loadEvent = 'onreadystatechange';\r\n    var xDomain = false;\r\n\r\n    // For IE 8/9 CORS support\r\n    // Only supports POST and GET calls and doesn't returns the response headers.\r\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\r\n    if (\"development\" !== 'test' &&\r\n        typeof window !== 'undefined' &&\r\n        window.XDomainRequest && !('withCredentials' in request) &&\r\n        !isURLSameOrigin(config.url)) {\r\n      request = new window.XDomainRequest();\r\n      loadEvent = 'onload';\r\n      xDomain = true;\r\n      request.onprogress = function handleProgress() {};\r\n      request.ontimeout = function handleTimeout() {};\r\n    }\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password || '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    // Listen for ready state\r\n    request[loadEvent] = function handleLoad() {\r\n      if (!request || (request.readyState !== 4 && !xDomain)) {\r\n        return;\r\n      }\r\n\r\n      // The request errored out and we didn't get a response, this will be\r\n      // handled by onerror instead\r\n      // With one exception: request that using file: protocol, most browsers\r\n      // will return status as 0 even though it's a successful request\r\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n        return;\r\n      }\r\n\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\r\n        status: request.status === 1223 ? 204 : request.status,\r\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(resolve, reject, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(createError('Network Error', config, null, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"../node_modules/axios/lib/helpers/cookies.js\");\r\n\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\r\n          cookies.read(config.xsrfCookieName) :\r\n          undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (config.withCredentials) {\r\n      request.withCredentials = true;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (config.responseType) {\r\n      try {\r\n        request.responseType = config.responseType;\r\n      } catch (e) {\r\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\r\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\r\n        if (config.responseType !== 'json') {\r\n          throw e;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken) {\r\n      // Handle cancellation\r\n      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n\r\n        request.abort();\r\n        reject(cancel);\r\n        // Clean up request\r\n        request = null;\r\n      });\r\n    }\r\n\r\n    if (requestData === undefined) {\r\n      requestData = null;\r\n    }\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/axios.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/lib/axios.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../node_modules/axios/lib/helpers/bind.js\");\r\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"../node_modules/axios/lib/core/Axios.js\");\r\nvar defaults = __webpack_require__(/*! ./defaults */ \"../node_modules/axios/lib/defaults.js\");\r\n\r\n/**\r\n * Create an instance of Axios\r\n *\r\n * @param {Object} defaultConfig The default config for the instance\r\n * @return {Axios} A new instance of Axios\r\n */\r\nfunction createInstance(defaultConfig) {\r\n  var context = new Axios(defaultConfig);\r\n  var instance = bind(Axios.prototype.request, context);\r\n\r\n  // Copy axios.prototype to instance\r\n  utils.extend(instance, Axios.prototype, context);\r\n\r\n  // Copy context to instance\r\n  utils.extend(instance, context);\r\n\r\n  return instance;\r\n}\r\n\r\n// Create the default instance to be exported\r\nvar axios = createInstance(defaults);\r\n\r\n// Expose Axios class to allow class inheritance\r\naxios.Axios = Axios;\r\n\r\n// Factory for creating new instances\r\naxios.create = function create(instanceConfig) {\r\n  return createInstance(utils.merge(defaults, instanceConfig));\r\n};\r\n\r\n// Expose Cancel & CancelToken\r\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"../node_modules/axios/lib/cancel/Cancel.js\");\r\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"../node_modules/axios/lib/cancel/CancelToken.js\");\r\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"../node_modules/axios/lib/cancel/isCancel.js\");\r\n\r\n// Expose all/spread\r\naxios.all = function all(promises) {\r\n  return Promise.all(promises);\r\n};\r\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"../node_modules/axios/lib/helpers/spread.js\");\r\n\r\nmodule.exports = axios;\r\n\r\n// Allow use of default import syntax in TypeScript\r\nmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/Cancel.js\":\r\n/*!**************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/Cancel.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * A `Cancel` is an object that is thrown when an operation is canceled.\r\n *\r\n * @class\r\n * @param {string=} message The message.\r\n */\r\nfunction Cancel(message) {\r\n  this.message = message;\r\n}\r\n\r\nCancel.prototype.toString = function toString() {\r\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n};\r\n\r\nCancel.prototype.__CANCEL__ = true;\r\n\r\nmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/CancelToken.js\":\r\n/*!*******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/CancelToken.js ***!\r\n  \\*******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"../node_modules/axios/lib/cancel/Cancel.js\");\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @class\r\n * @param {Function} executor The executor function.\r\n */\r\nfunction CancelToken(executor) {\r\n  if (typeof executor !== 'function') {\r\n    throw new TypeError('executor must be a function.');\r\n  }\r\n\r\n  var resolvePromise;\r\n  this.promise = new Promise(function promiseExecutor(resolve) {\r\n    resolvePromise = resolve;\r\n  });\r\n\r\n  var token = this;\r\n  executor(function cancel(message) {\r\n    if (token.reason) {\r\n      // Cancellation has already been requested\r\n      return;\r\n    }\r\n\r\n    token.reason = new Cancel(message);\r\n    resolvePromise(token.reason);\r\n  });\r\n}\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n  if (this.reason) {\r\n    throw this.reason;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n * cancels the `CancelToken`.\r\n */\r\nCancelToken.source = function source() {\r\n  var cancel;\r\n  var token = new CancelToken(function executor(c) {\r\n    cancel = c;\r\n  });\r\n  return {\r\n    token: token,\r\n    cancel: cancel\r\n  };\r\n};\r\n\r\nmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/cancel/isCancel.js\":\r\n/*!****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/cancel/isCancel.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function isCancel(value) {\r\n  return !!(value && value.__CANCEL__);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/Axios.js\":\r\n/*!***********************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/Axios.js ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar defaults = __webpack_require__(/*! ./../defaults */ \"../node_modules/axios/lib/defaults.js\");\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"../node_modules/axios/lib/core/InterceptorManager.js\");\r\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"../node_modules/axios/lib/core/dispatchRequest.js\");\r\n\r\n/**\r\n * Create a new instance of Axios\r\n *\r\n * @param {Object} instanceConfig The default config for the instance\r\n */\r\nfunction Axios(instanceConfig) {\r\n  this.defaults = instanceConfig;\r\n  this.interceptors = {\r\n    request: new InterceptorManager(),\r\n    response: new InterceptorManager()\r\n  };\r\n}\r\n\r\n/**\r\n * Dispatch a request\r\n *\r\n * @param {Object} config The config specific for this request (merged with this.defaults)\r\n */\r\nAxios.prototype.request = function request(config) {\r\n  /*eslint no-param-reassign:0*/\r\n  // Allow for axios('example/url'[, config]) a la fetch API\r\n  if (typeof config === 'string') {\r\n    config = utils.merge({\r\n      url: arguments[0]\r\n    }, arguments[1]);\r\n  }\r\n\r\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\r\n  config.method = config.method.toLowerCase();\r\n\r\n  // Hook up interceptors middleware\r\n  var chain = [dispatchRequest, undefined];\r\n  var promise = Promise.resolve(config);\r\n\r\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n    chain.push(interceptor.fulfilled, interceptor.rejected);\r\n  });\r\n\r\n  while (chain.length) {\r\n    promise = promise.then(chain.shift(), chain.shift());\r\n  }\r\n\r\n  return promise;\r\n};\r\n\r\n// Provide aliases for supported request methods\r\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url\r\n    }));\r\n  };\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  /*eslint func-names:0*/\r\n  Axios.prototype[method] = function(url, data, config) {\r\n    return this.request(utils.merge(config || {}, {\r\n      method: method,\r\n      url: url,\r\n      data: data\r\n    }));\r\n  };\r\n});\r\n\r\nmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/InterceptorManager.js\":\r\n/*!************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/InterceptorManager.js ***!\r\n  \\************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nfunction InterceptorManager() {\r\n  this.handlers = [];\r\n}\r\n\r\n/**\r\n * Add a new interceptor to the stack\r\n *\r\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n *\r\n * @return {Number} An ID used to remove interceptor later\r\n */\r\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\r\n  this.handlers.push({\r\n    fulfilled: fulfilled,\r\n    rejected: rejected\r\n  });\r\n  return this.handlers.length - 1;\r\n};\r\n\r\n/**\r\n * Remove an interceptor from the stack\r\n *\r\n * @param {Number} id The ID that was returned by `use`\r\n */\r\nInterceptorManager.prototype.eject = function eject(id) {\r\n  if (this.handlers[id]) {\r\n    this.handlers[id] = null;\r\n  }\r\n};\r\n\r\n/**\r\n * Iterate over all the registered interceptors\r\n *\r\n * This method is particularly useful for skipping over any\r\n * interceptors that may have become `null` calling `eject`.\r\n *\r\n * @param {Function} fn The function to call for each interceptor\r\n */\r\nInterceptorManager.prototype.forEach = function forEach(fn) {\r\n  utils.forEach(this.handlers, function forEachHandler(h) {\r\n    if (h !== null) {\r\n      fn(h);\r\n    }\r\n  });\r\n};\r\n\r\nmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/createError.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/createError.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"../node_modules/axios/lib/core/enhanceError.js\");\r\n\r\n/**\r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nmodule.exports = function createError(message, config, code, request, response) {\r\n  var error = new Error(message);\r\n  return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/dispatchRequest.js\":\r\n/*!*********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/dispatchRequest.js ***!\r\n  \\*********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar transformData = __webpack_require__(/*! ./transformData */ \"../node_modules/axios/lib/core/transformData.js\");\r\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"../node_modules/axios/lib/cancel/isCancel.js\");\r\nvar defaults = __webpack_require__(/*! ../defaults */ \"../node_modules/axios/lib/defaults.js\");\r\nvar isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ \"../node_modules/axios/lib/helpers/isAbsoluteURL.js\");\r\nvar combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ \"../node_modules/axios/lib/helpers/combineURLs.js\");\r\n\r\n/**\r\n * Throws a `Cancel` if cancellation has been requested.\r\n */\r\nfunction throwIfCancellationRequested(config) {\r\n  if (config.cancelToken) {\r\n    config.cancelToken.throwIfRequested();\r\n  }\r\n}\r\n\r\n/**\r\n * Dispatch a request to the server using the configured adapter.\r\n *\r\n * @param {object} config The config that is to be used for the request\r\n * @returns {Promise} The Promise to be fulfilled\r\n */\r\nmodule.exports = function dispatchRequest(config) {\r\n  throwIfCancellationRequested(config);\r\n\r\n  // Support baseURL config\r\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\r\n    config.url = combineURLs(config.baseURL, config.url);\r\n  }\r\n\r\n  // Ensure headers exist\r\n  config.headers = config.headers || {};\r\n\r\n  // Transform request data\r\n  config.data = transformData(\r\n    config.data,\r\n    config.headers,\r\n    config.transformRequest\r\n  );\r\n\r\n  // Flatten headers\r\n  config.headers = utils.merge(\r\n    config.headers.common || {},\r\n    config.headers[config.method] || {},\r\n    config.headers || {}\r\n  );\r\n\r\n  utils.forEach(\r\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n    function cleanHeaderConfig(method) {\r\n      delete config.headers[method];\r\n    }\r\n  );\r\n\r\n  var adapter = config.adapter || defaults.adapter;\r\n\r\n  return adapter(config).then(function onAdapterResolution(response) {\r\n    throwIfCancellationRequested(config);\r\n\r\n    // Transform response data\r\n    response.data = transformData(\r\n      response.data,\r\n      response.headers,\r\n      config.transformResponse\r\n    );\r\n\r\n    return response;\r\n  }, function onAdapterRejection(reason) {\r\n    if (!isCancel(reason)) {\r\n      throwIfCancellationRequested(config);\r\n\r\n      // Transform response data\r\n      if (reason && reason.response) {\r\n        reason.response.data = transformData(\r\n          reason.response.data,\r\n          reason.response.headers,\r\n          config.transformResponse\r\n        );\r\n      }\r\n    }\r\n\r\n    return Promise.reject(reason);\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/enhanceError.js\":\r\n/*!******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/enhanceError.js ***!\r\n  \\******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nmodule.exports = function enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n  error.request = request;\r\n  error.response = response;\r\n  return error;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/settle.js\":\r\n/*!************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/settle.js ***!\r\n  \\************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar createError = __webpack_require__(/*! ./createError */ \"../node_modules/axios/lib/core/createError.js\");\r\n\r\n/**\r\n * Resolve or reject a Promise based on response status.\r\n *\r\n * @param {Function} resolve A function that resolves the promise.\r\n * @param {Function} reject A function that rejects the promise.\r\n * @param {object} response The response.\r\n */\r\nmodule.exports = function settle(resolve, reject, response) {\r\n  var validateStatus = response.config.validateStatus;\r\n  // Note: status is not exposed by XDomainRequest\r\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\r\n    resolve(response);\r\n  } else {\r\n    reject(createError(\r\n      'Request failed with status code ' + response.status,\r\n      response.config,\r\n      null,\r\n      response.request,\r\n      response\r\n    ));\r\n  }\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/core/transformData.js\":\r\n/*!*******************************************************!*\\\r\n  !*** ../node_modules/axios/lib/core/transformData.js ***!\r\n  \\*******************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\n/**\r\n * Transform the data for a request or a response\r\n *\r\n * @param {Object|String} data The data to be transformed\r\n * @param {Array} headers The headers for the request or response\r\n * @param {Array|Function} fns A single function or Array of functions\r\n * @returns {*} The resulting transformed data\r\n */\r\nmodule.exports = function transformData(data, headers, fns) {\r\n  /*eslint no-param-reassign:0*/\r\n  utils.forEach(fns, function transform(fn) {\r\n    data = fn(data, headers);\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/defaults.js\":\r\n/*!*********************************************!*\\\r\n  !*** ../node_modules/axios/lib/defaults.js ***!\r\n  \\*********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./utils */ \"../node_modules/axios/lib/utils.js\");\r\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"../node_modules/axios/lib/helpers/normalizeHeaderName.js\");\r\n\r\nvar DEFAULT_CONTENT_TYPE = {\r\n  'Content-Type': 'application/x-www-form-urlencoded'\r\n};\r\n\r\nfunction setContentTypeIfUnset(headers, value) {\r\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n    headers['Content-Type'] = value;\r\n  }\r\n}\r\n\r\nfunction getDefaultAdapter() {\r\n  var adapter;\r\n  if (typeof XMLHttpRequest !== 'undefined') {\r\n    // For browsers use XHR adapter\r\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"../node_modules/axios/lib/adapters/xhr.js\");\r\n  } else if (typeof process !== 'undefined') {\r\n    // For node use HTTP adapter\r\n    adapter = __webpack_require__(/*! ./adapters/http */ \"../node_modules/axios/lib/adapters/http.js\");\r\n  }\r\n  return adapter;\r\n}\r\n\r\nvar defaults = {\r\n  adapter: getDefaultAdapter(),\r\n\r\n  transformRequest: [function transformRequest(data, headers) {\r\n    normalizeHeaderName(headers, 'Content-Type');\r\n    if (utils.isFormData(data) ||\r\n      utils.isArrayBuffer(data) ||\r\n      utils.isBuffer(data) ||\r\n      utils.isStream(data) ||\r\n      utils.isFile(data) ||\r\n      utils.isBlob(data)\r\n    ) {\r\n      return data;\r\n    }\r\n    if (utils.isArrayBufferView(data)) {\r\n      return data.buffer;\r\n    }\r\n    if (utils.isURLSearchParams(data)) {\r\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n      return data.toString();\r\n    }\r\n    if (utils.isObject(data)) {\r\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\r\n      return JSON.stringify(data);\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  transformResponse: [function transformResponse(data) {\r\n    /*eslint no-param-reassign:0*/\r\n    if (typeof data === 'string') {\r\n      try {\r\n        data = JSON.parse(data);\r\n      } catch (e) { /* Ignore */ }\r\n    }\r\n    return data;\r\n  }],\r\n\r\n  /**\r\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n   * timeout is not created.\r\n   */\r\n  timeout: 0,\r\n\r\n  xsrfCookieName: 'XSRF-TOKEN',\r\n  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\r\n  maxContentLength: -1,\r\n\r\n  validateStatus: function validateStatus(status) {\r\n    return status >= 200 && status < 300;\r\n  }\r\n};\r\n\r\ndefaults.headers = {\r\n  common: {\r\n    'Accept': 'application/json, text/plain, */*'\r\n  }\r\n};\r\n\r\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n  defaults.headers[method] = {};\r\n});\r\n\r\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n});\r\n\r\nmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/bind.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/bind.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nmodule.exports = function bind(fn, thisArg) {\r\n  return function wrap() {\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n    return fn.apply(thisArg, args);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/btoa.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/btoa.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\r\n\r\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\r\nfunction E() {\r\n  this.message = 'String contains an invalid character';\r\n}\r\nE.prototype = new Error;\r\nE.prototype.code = 5;\r\nE.prototype.name = 'InvalidCharacterError';\r\n\r\nfunction btoa(input) {\r\n  var str = String(input);\r\n  var output = '';\r\n  for (\r\n    // initialize result and counter\r\n    var block, charCode, idx = 0, map = chars;\r\n    // if the next str index does not exist:\r\n    //   change the mapping table to \"=\"\r\n    //   check if d has no fractional digits\r\n    str.charAt(idx | 0) || (map = '=', idx % 1);\r\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\r\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\r\n  ) {\r\n    charCode = str.charCodeAt(idx += 3 / 4);\r\n    if (charCode > 0xFF) {\r\n      throw new E();\r\n    }\r\n    block = block << 8 | charCode;\r\n  }\r\n  return output;\r\n}\r\n\r\nmodule.exports = btoa;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/buildURL.js\":\r\n/*!*****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/buildURL.js ***!\r\n  \\*****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nfunction encode(val) {\r\n  return encodeURIComponent(val).\r\n    replace(/%40/gi, '@').\r\n    replace(/%3A/gi, ':').\r\n    replace(/%24/g, '$').\r\n    replace(/%2C/gi, ',').\r\n    replace(/%20/g, '+').\r\n    replace(/%5B/gi, '[').\r\n    replace(/%5D/gi, ']');\r\n}\r\n\r\n/**\r\n * Build a URL by appending params to the end\r\n *\r\n * @param {string} url The base of the url (e.g., http://www.google.com)\r\n * @param {object} [params] The params to be appended\r\n * @returns {string} The formatted url\r\n */\r\nmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n  /*eslint no-param-reassign:0*/\r\n  if (!params) {\r\n    return url;\r\n  }\r\n\r\n  var serializedParams;\r\n  if (paramsSerializer) {\r\n    serializedParams = paramsSerializer(params);\r\n  } else if (utils.isURLSearchParams(params)) {\r\n    serializedParams = params.toString();\r\n  } else {\r\n    var parts = [];\r\n\r\n    utils.forEach(params, function serialize(val, key) {\r\n      if (val === null || typeof val === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      if (utils.isArray(val)) {\r\n        key = key + '[]';\r\n      } else {\r\n        val = [val];\r\n      }\r\n\r\n      utils.forEach(val, function parseValue(v) {\r\n        if (utils.isDate(v)) {\r\n          v = v.toISOString();\r\n        } else if (utils.isObject(v)) {\r\n          v = JSON.stringify(v);\r\n        }\r\n        parts.push(encode(key) + '=' + encode(v));\r\n      });\r\n    });\r\n\r\n    serializedParams = parts.join('&');\r\n  }\r\n\r\n  if (serializedParams) {\r\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/combineURLs.js\":\r\n/*!********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/combineURLs.js ***!\r\n  \\********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Creates a new URL by combining the specified URLs\r\n *\r\n * @param {string} baseURL The base URL\r\n * @param {string} relativeURL The relative URL\r\n * @returns {string} The combined URL\r\n */\r\nmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n  return relativeURL\r\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n    : baseURL;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/cookies.js\":\r\n/*!****************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/cookies.js ***!\r\n  \\****************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs support document.cookie\r\n  (function standardBrowserEnv() {\r\n    return {\r\n      write: function write(name, value, expires, path, domain, secure) {\r\n        var cookie = [];\r\n        cookie.push(name + '=' + encodeURIComponent(value));\r\n\r\n        if (utils.isNumber(expires)) {\r\n          cookie.push('expires=' + new Date(expires).toGMTString());\r\n        }\r\n\r\n        if (utils.isString(path)) {\r\n          cookie.push('path=' + path);\r\n        }\r\n\r\n        if (utils.isString(domain)) {\r\n          cookie.push('domain=' + domain);\r\n        }\r\n\r\n        if (secure === true) {\r\n          cookie.push('secure');\r\n        }\r\n\r\n        document.cookie = cookie.join('; ');\r\n      },\r\n\r\n      read: function read(name) {\r\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n        return (match ? decodeURIComponent(match[3]) : null);\r\n      },\r\n\r\n      remove: function remove(name) {\r\n        this.write(name, '', Date.now() - 86400000);\r\n      }\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser env (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return {\r\n      write: function write() {},\r\n      read: function read() { return null; },\r\n      remove: function remove() {}\r\n    };\r\n  })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/isAbsoluteURL.js\":\r\n/*!**********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/isAbsoluteURL.js ***!\r\n  \\**********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Determines whether the specified URL is absolute\r\n *\r\n * @param {string} url The URL to test\r\n * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n */\r\nmodule.exports = function isAbsoluteURL(url) {\r\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n  // by any combination of letters, digits, plus, period, or hyphen.\r\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/isURLSameOrigin.js\":\r\n/*!************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/isURLSameOrigin.js ***!\r\n  \\************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = (\r\n  utils.isStandardBrowserEnv() ?\r\n\r\n  // Standard browser envs have full support of the APIs needed to test\r\n  // whether the request URL is of the same origin as current location.\r\n  (function standardBrowserEnv() {\r\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n    var urlParsingNode = document.createElement('a');\r\n    var originURL;\r\n\r\n    /**\r\n    * Parse a URL to discover it's components\r\n    *\r\n    * @param {String} url The URL to be parsed\r\n    * @returns {Object}\r\n    */\r\n    function resolveURL(url) {\r\n      var href = url;\r\n\r\n      if (msie) {\r\n        // IE needs attribute set twice to normalize properties\r\n        urlParsingNode.setAttribute('href', href);\r\n        href = urlParsingNode.href;\r\n      }\r\n\r\n      urlParsingNode.setAttribute('href', href);\r\n\r\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n      return {\r\n        href: urlParsingNode.href,\r\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n        host: urlParsingNode.host,\r\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n        hostname: urlParsingNode.hostname,\r\n        port: urlParsingNode.port,\r\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n                  urlParsingNode.pathname :\r\n                  '/' + urlParsingNode.pathname\r\n      };\r\n    }\r\n\r\n    originURL = resolveURL(window.location.href);\r\n\r\n    /**\r\n    * Determine if a URL shares the same origin as the current location\r\n    *\r\n    * @param {String} requestURL The URL to test\r\n    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n    */\r\n    return function isURLSameOrigin(requestURL) {\r\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n      return (parsed.protocol === originURL.protocol &&\r\n            parsed.host === originURL.host);\r\n    };\r\n  })() :\r\n\r\n  // Non standard browser envs (web workers, react-native) lack needed support.\r\n  (function nonStandardBrowserEnv() {\r\n    return function isURLSameOrigin() {\r\n      return true;\r\n    };\r\n  })()\r\n);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/normalizeHeaderName.js\":\r\n/*!****************************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/normalizeHeaderName.js ***!\r\n  \\****************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n  utils.forEach(headers, function processHeader(value, name) {\r\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n      headers[normalizedName] = value;\r\n      delete headers[name];\r\n    }\r\n  });\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/parseHeaders.js\":\r\n/*!*********************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/parseHeaders.js ***!\r\n  \\*********************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar utils = __webpack_require__(/*! ./../utils */ \"../node_modules/axios/lib/utils.js\");\r\n\r\n// Headers whose duplicates are ignored by node\r\n// c.f. https://nodejs.org/api/http.html#http_message_headers\r\nvar ignoreDuplicateOf = [\r\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n  'referer', 'retry-after', 'user-agent'\r\n];\r\n\r\n/**\r\n * Parse headers into an object\r\n *\r\n * ```\r\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n * Content-Type: application/json\r\n * Connection: keep-alive\r\n * Transfer-Encoding: chunked\r\n * ```\r\n *\r\n * @param {String} headers Headers needing to be parsed\r\n * @returns {Object} Headers parsed into an object\r\n */\r\nmodule.exports = function parseHeaders(headers) {\r\n  var parsed = {};\r\n  var key;\r\n  var val;\r\n  var i;\r\n\r\n  if (!headers) { return parsed; }\r\n\r\n  utils.forEach(headers.split('\\n'), function parser(line) {\r\n    i = line.indexOf(':');\r\n    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n    val = utils.trim(line.substr(i + 1));\r\n\r\n    if (key) {\r\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n        return;\r\n      }\r\n      if (key === 'set-cookie') {\r\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n      } else {\r\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n      }\r\n    }\r\n  });\r\n\r\n  return parsed;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/helpers/spread.js\":\r\n/*!***************************************************!*\\\r\n  !*** ../node_modules/axios/lib/helpers/spread.js ***!\r\n  \\***************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\n/**\r\n * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n *\r\n * Common use case would be to use `Function.prototype.apply`.\r\n *\r\n *  ```js\r\n *  function f(x, y, z) {}\r\n *  var args = [1, 2, 3];\r\n *  f.apply(null, args);\r\n *  ```\r\n *\r\n * With `spread` this example can be re-written.\r\n *\r\n *  ```js\r\n *  spread(function(x, y, z) {})([1, 2, 3]);\r\n *  ```\r\n *\r\n * @param {Function} callback\r\n * @returns {Function}\r\n */\r\nmodule.exports = function spread(callback) {\r\n  return function wrap(arr) {\r\n    return callback.apply(null, arr);\r\n  };\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/lib/utils.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/lib/utils.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\n\r\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"../node_modules/axios/lib/helpers/bind.js\");\r\nvar isBuffer = __webpack_require__(/*! is-buffer */ \"../node_modules/is-buffer/index.js\");\r\n\r\n/*global toString:true*/\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return toString.call(val) === '[object Array]';\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBuffer(val) {\r\n  return toString.call(val) === '[object ArrayBuffer]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(val) {\r\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n}\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nfunction isDate(val) {\r\n  return toString.call(val) === '[object Date]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nfunction isFile(val) {\r\n  return toString.call(val) === '[object File]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nfunction isBlob(val) {\r\n  return toString.call(val) === '[object Blob]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nfunction isURLSearchParams(val) {\r\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n}\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n      result[key] = merge(result[key], val);\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/axios/package.json\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/axios/package.json ***!\r\n  \\******************************************/\r\n/*! exports provided: _args, _development, _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _spec, _where, author, browser, bugs, bundlesize, dependencies, description, devDependencies, homepage, keywords, license, main, name, repository, scripts, typings, version, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"_args\":[[\"axios@0.18.0\",\"C:\\\\_Irina\\\\_clients\\\\_Alpheios Project\\\\git\\\\morph-client\"]],\"_development\":true,\"_from\":\"axios@0.18.0\",\"_id\":\"axios@0.18.0\",\"_inBundle\":false,\"_integrity\":\"sha1-MtU+SFHv3AoRmTts0AB4nXDAUQI=\",\"_location\":\"/axios\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"axios@0.18.0\",\"name\":\"axios\",\"escapedName\":\"axios\",\"rawSpec\":\"0.18.0\",\"saveSpec\":null,\"fetchSpec\":\"0.18.0\"},\"_requiredBy\":[\"#DEV:/\"],\"_resolved\":\"https://registry.npmjs.org/axios/-/axios-0.18.0.tgz\",\"_spec\":\"0.18.0\",\"_where\":\"C:\\\\_Irina\\\\_clients\\\\_Alpheios Project\\\\git\\\\morph-client\",\"author\":{\"name\":\"Matt Zabriskie\"},\"browser\":{\"./lib/adapters/http.js\":\"./lib/adapters/xhr.js\"},\"bugs\":{\"url\":\"https://github.com/axios/axios/issues\"},\"bundlesize\":[{\"path\":\"./dist/axios.min.js\",\"threshold\":\"5kB\"}],\"dependencies\":{\"follow-redirects\":\"^1.3.0\",\"is-buffer\":\"^1.1.5\"},\"description\":\"Promise based HTTP client for the browser and node.js\",\"devDependencies\":{\"bundlesize\":\"^0.5.7\",\"coveralls\":\"^2.11.9\",\"es6-promise\":\"^4.0.5\",\"grunt\":\"^1.0.1\",\"grunt-banner\":\"^0.6.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-clean\":\"^1.0.0\",\"grunt-contrib-nodeunit\":\"^1.0.0\",\"grunt-contrib-watch\":\"^1.0.0\",\"grunt-eslint\":\"^19.0.0\",\"grunt-karma\":\"^2.0.0\",\"grunt-ts\":\"^6.0.0-beta.3\",\"grunt-webpack\":\"^1.0.18\",\"istanbul-instrumenter-loader\":\"^1.0.0\",\"jasmine-core\":\"^2.4.1\",\"karma\":\"^1.3.0\",\"karma-chrome-launcher\":\"^2.0.0\",\"karma-coverage\":\"^1.0.0\",\"karma-firefox-launcher\":\"^1.0.0\",\"karma-jasmine\":\"^1.0.2\",\"karma-jasmine-ajax\":\"^0.1.13\",\"karma-opera-launcher\":\"^1.0.0\",\"karma-safari-launcher\":\"^1.0.0\",\"karma-sauce-launcher\":\"^1.1.0\",\"karma-sinon\":\"^1.0.5\",\"karma-sourcemap-loader\":\"^0.3.7\",\"karma-webpack\":\"^1.7.0\",\"load-grunt-tasks\":\"^3.5.2\",\"minimist\":\"^1.2.0\",\"sinon\":\"^1.17.4\",\"typescript\":\"^2.0.3\",\"url-search-params\":\"^0.6.1\",\"webpack\":\"^1.13.1\",\"webpack-dev-server\":\"^1.14.1\"},\"homepage\":\"https://github.com/axios/axios\",\"keywords\":[\"xhr\",\"http\",\"ajax\",\"promise\",\"node\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"axios\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/axios/axios.git\"},\"scripts\":{\"build\":\"NODE_ENV=production grunt build\",\"coveralls\":\"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\"examples\":\"node ./examples/server.js\",\"postversion\":\"git push && git push --tags\",\"preversion\":\"npm test\",\"start\":\"node ./sandbox/server.js\",\"test\":\"grunt test && bundlesize\",\"version\":\"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\"},\"typings\":\"./index.d.ts\",\"version\":\"0.18.0\"};\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/index.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/index.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar url = __webpack_require__(/*! url */ \"url\");\r\nvar http = __webpack_require__(/*! http */ \"http\");\r\nvar https = __webpack_require__(/*! https */ \"https\");\r\nvar assert = __webpack_require__(/*! assert */ \"assert\");\r\nvar Writable = __webpack_require__(/*! stream */ \"stream\").Writable;\r\nvar debug = __webpack_require__(/*! debug */ \"../node_modules/follow-redirects/node_modules/debug/src/index.js\")(\"follow-redirects\");\r\n\r\n// RFC7231§4.2.1: Of the request methods defined by this specification,\r\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\r\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\r\n\r\n// Create handlers that pass events from native requests\r\nvar eventHandlers = Object.create(null);\r\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\r\n  eventHandlers[event] = function (arg) {\r\n    this._redirectable.emit(event, arg);\r\n  };\r\n});\r\n\r\n// An HTTP(S) request that can be redirected\r\nfunction RedirectableRequest(options, responseCallback) {\r\n  // Initialize the request\r\n  Writable.call(this);\r\n  options.headers = options.headers || {};\r\n  this._options = options;\r\n  this._redirectCount = 0;\r\n  this._redirects = [];\r\n  this._requestBodyLength = 0;\r\n  this._requestBodyBuffers = [];\r\n\r\n  // Attach a callback if passed\r\n  if (responseCallback) {\r\n    this.on(\"response\", responseCallback);\r\n  }\r\n\r\n  // React to responses of native requests\r\n  var self = this;\r\n  this._onNativeResponse = function (response) {\r\n    self._processResponse(response);\r\n  };\r\n\r\n  // Complete the URL object when necessary\r\n  if (!options.pathname && options.path) {\r\n    var searchPos = options.path.indexOf(\"?\");\r\n    if (searchPos < 0) {\r\n      options.pathname = options.path;\r\n    }\r\n    else {\r\n      options.pathname = options.path.substring(0, searchPos);\r\n      options.search = options.path.substring(searchPos);\r\n    }\r\n  }\r\n\r\n  // Perform the first request\r\n  this._performRequest();\r\n}\r\nRedirectableRequest.prototype = Object.create(Writable.prototype);\r\n\r\n// Writes buffered data to the current native request\r\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\r\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\r\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\r\n  }\r\n  // Ignore empty buffers, since writing them doesn't invoke the callback\r\n  // https://github.com/nodejs/node/issues/22066\r\n  if (data.length === 0) {\r\n    callback();\r\n    return;\r\n  }\r\n  // Only write when we don't exceed the maximum body length\r\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\r\n    this._requestBodyLength += data.length;\r\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\r\n    this._currentRequest.write(data, encoding, callback);\r\n  }\r\n  // Error when we exceed the maximum body length\r\n  else {\r\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\r\n    this.abort();\r\n  }\r\n};\r\n\r\n// Ends the current native request\r\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\r\n  var currentRequest = this._currentRequest;\r\n  if (!data) {\r\n    currentRequest.end(null, null, callback);\r\n  }\r\n  else {\r\n    this.write(data, encoding, function () {\r\n      currentRequest.end(null, null, callback);\r\n    });\r\n  }\r\n};\r\n\r\n// Sets a header value on the current native request\r\nRedirectableRequest.prototype.setHeader = function (name, value) {\r\n  this._options.headers[name] = value;\r\n  this._currentRequest.setHeader(name, value);\r\n};\r\n\r\n// Clears a header value on the current native request\r\nRedirectableRequest.prototype.removeHeader = function (name) {\r\n  delete this._options.headers[name];\r\n  this._currentRequest.removeHeader(name);\r\n};\r\n\r\n// Proxy all other public ClientRequest methods\r\n[\r\n  \"abort\", \"flushHeaders\", \"getHeader\",\r\n  \"setNoDelay\", \"setSocketKeepAlive\", \"setTimeout\",\r\n].forEach(function (method) {\r\n  RedirectableRequest.prototype[method] = function (a, b) {\r\n    return this._currentRequest[method](a, b);\r\n  };\r\n});\r\n\r\n// Proxy all public ClientRequest properties\r\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\r\n  Object.defineProperty(RedirectableRequest.prototype, property, {\r\n    get: function () { return this._currentRequest[property]; },\r\n  });\r\n});\r\n\r\n// Executes the next native request (initial or redirect)\r\nRedirectableRequest.prototype._performRequest = function () {\r\n  // Load the native protocol\r\n  var protocol = this._options.protocol;\r\n  var nativeProtocol = this._options.nativeProtocols[protocol];\r\n\r\n  // If specified, use the agent corresponding to the protocol\r\n  // (HTTP and HTTPS use different types of agents)\r\n  if (this._options.agents) {\r\n    var scheme = protocol.substr(0, protocol.length - 1);\r\n    this._options.agent = this._options.agents[scheme];\r\n  }\r\n\r\n  // Create the native request\r\n  var request = this._currentRequest =\r\n        nativeProtocol.request(this._options, this._onNativeResponse);\r\n  this._currentUrl = url.format(this._options);\r\n\r\n  // Set up event handlers\r\n  request._redirectable = this;\r\n  for (var event in eventHandlers) {\r\n    /* istanbul ignore else */\r\n    if (event) {\r\n      request.on(event, eventHandlers[event]);\r\n    }\r\n  }\r\n\r\n  // End a redirected request\r\n  // (The first request must be ended explicitly with RedirectableRequest#end)\r\n  if (this._isRedirect) {\r\n    // Write the request entity and end.\r\n    var requestBodyBuffers = this._requestBodyBuffers;\r\n    (function writeNext() {\r\n      if (requestBodyBuffers.length !== 0) {\r\n        var buffer = requestBodyBuffers.pop();\r\n        request.write(buffer.data, buffer.encoding, writeNext);\r\n      }\r\n      else {\r\n        request.end();\r\n      }\r\n    }());\r\n  }\r\n};\r\n\r\n// Processes a response from the current native request\r\nRedirectableRequest.prototype._processResponse = function (response) {\r\n  // Store the redirected response\r\n  if (this._options.trackRedirects) {\r\n    this._redirects.push({\r\n      url: this._currentUrl,\r\n      headers: response.headers,\r\n      statusCode: response.statusCode,\r\n    });\r\n  }\r\n\r\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\r\n  // that further action needs to be taken by the user agent in order to\r\n  // fulfill the request. If a Location header field is provided,\r\n  // the user agent MAY automatically redirect its request to the URI\r\n  // referenced by the Location field value,\r\n  // even if the specific status code is not understood.\r\n  var location = response.headers.location;\r\n  if (location && this._options.followRedirects !== false &&\r\n      response.statusCode >= 300 && response.statusCode < 400) {\r\n    // RFC7231§6.4: A client SHOULD detect and intervene\r\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\r\n    if (++this._redirectCount > this._options.maxRedirects) {\r\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\r\n      return;\r\n    }\r\n\r\n    // RFC7231§6.4: Automatic redirection needs to done with\r\n    // care for methods not known to be safe […],\r\n    // since the user might not wish to redirect an unsafe request.\r\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\r\n    // that the target resource resides temporarily under a different URI\r\n    // and the user agent MUST NOT change the request method\r\n    // if it performs an automatic redirection to that URI.\r\n    var header;\r\n    var headers = this._options.headers;\r\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\r\n      this._options.method = \"GET\";\r\n      // Drop a possible entity and headers related to it\r\n      this._requestBodyBuffers = [];\r\n      for (header in headers) {\r\n        if (/^content-/i.test(header)) {\r\n          delete headers[header];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Drop the Host header, as the redirect might lead to a different host\r\n    if (!this._isRedirect) {\r\n      for (header in headers) {\r\n        if (/^host$/i.test(header)) {\r\n          delete headers[header];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Perform the redirected request\r\n    var redirectUrl = url.resolve(this._currentUrl, location);\r\n    debug(\"redirecting to\", redirectUrl);\r\n    Object.assign(this._options, url.parse(redirectUrl));\r\n    this._isRedirect = true;\r\n    this._performRequest();\r\n\r\n    // Discard the remainder of the response to avoid waiting for data\r\n    response.destroy();\r\n  }\r\n  else {\r\n    // The response is not a redirect; return it as-is\r\n    response.responseUrl = this._currentUrl;\r\n    response.redirects = this._redirects;\r\n    this.emit(\"response\", response);\r\n\r\n    // Clean up\r\n    this._requestBodyBuffers = [];\r\n  }\r\n};\r\n\r\n// Wraps the key/value object of protocols with redirect functionality\r\nfunction wrap(protocols) {\r\n  // Default settings\r\n  var exports = {\r\n    maxRedirects: 21,\r\n    maxBodyLength: 10 * 1024 * 1024,\r\n  };\r\n\r\n  // Wrap each protocol\r\n  var nativeProtocols = {};\r\n  Object.keys(protocols).forEach(function (scheme) {\r\n    var protocol = scheme + \":\";\r\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\r\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\r\n\r\n    // Executes a request, following redirects\r\n    wrappedProtocol.request = function (options, callback) {\r\n      if (typeof options === \"string\") {\r\n        options = url.parse(options);\r\n        options.maxRedirects = exports.maxRedirects;\r\n      }\r\n      else {\r\n        options = Object.assign({\r\n          protocol: protocol,\r\n          maxRedirects: exports.maxRedirects,\r\n          maxBodyLength: exports.maxBodyLength,\r\n        }, options);\r\n      }\r\n      options.nativeProtocols = nativeProtocols;\r\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\r\n      debug(\"options\", options);\r\n      return new RedirectableRequest(options, callback);\r\n    };\r\n\r\n    // Executes a GET request, following redirects\r\n    wrappedProtocol.get = function (options, callback) {\r\n      var request = wrappedProtocol.request(options, callback);\r\n      request.end();\r\n      return request;\r\n    };\r\n  });\r\n  return exports;\r\n}\r\n\r\n// Exports\r\nmodule.exports = wrap({ http: http, https: https });\r\nmodule.exports.wrap = wrap;\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/browser.js\":\r\n/*!**************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/browser.js ***!\r\n  \\**************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = __webpack_require__(/*! ./debug */ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\");\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = 'undefined' != typeof chrome\r\n               && 'undefined' != typeof chrome.storage\r\n                  ? chrome.storage.local\r\n                  : localstorage();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\r\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\r\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\r\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\r\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\r\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\r\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\r\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\r\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\r\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\r\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\nfunction useColors() {\r\n  // NB: In an Electron preload script, document will be defined but not fully\r\n  // initialized. Since we know we're in Chrome, we'll just detect this case\r\n  // explicitly\r\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\r\n    return true;\r\n  }\r\n\r\n  // Internet Explorer and Edge do not support colors.\r\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n    return false;\r\n  }\r\n\r\n  // is webkit? http://stackoverflow.com/a/16459606/376773\r\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n    // is firebug? http://stackoverflow.com/a/398120/376773\r\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n    // is firefox >= v31?\r\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n    // double check webkit in userAgent just in case we are in a worker\r\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nexports.formatters.j = function(v) {\r\n  try {\r\n    return JSON.stringify(v);\r\n  } catch (err) {\r\n    return '[UnexpectedJSONParseError]: ' + err.message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var useColors = this.useColors;\r\n\r\n  args[0] = (useColors ? '%c' : '')\r\n    + this.namespace\r\n    + (useColors ? ' %c' : ' ')\r\n    + args[0]\r\n    + (useColors ? '%c ' : ' ')\r\n    + '+' + exports.humanize(this.diff);\r\n\r\n  if (!useColors) return;\r\n\r\n  var c = 'color: ' + this.color;\r\n  args.splice(1, 0, c, 'color: inherit')\r\n\r\n  // the final \"%c\" is somewhat tricky, because there could be other\r\n  // arguments passed either before or after the %c, so we need to\r\n  // figure out the correct index to insert the CSS into\r\n  var index = 0;\r\n  var lastC = 0;\r\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\r\n    if ('%%' === match) return;\r\n    index++;\r\n    if ('%c' === match) {\r\n      // we only are interested in the *last* %c\r\n      // (the user may have provided their own)\r\n      lastC = index;\r\n    }\r\n  });\r\n\r\n  args.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.log()` when available.\r\n * No-op when `console.log` is not a \"function\".\r\n *\r\n * @api public\r\n */\r\n\r\nfunction log() {\r\n  // this hackery is required for IE8/9, where\r\n  // the `console.log` function doesn't have 'apply'\r\n  return 'object' === typeof console\r\n    && console.log\r\n    && Function.prototype.apply.call(console.log, console, arguments);\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  try {\r\n    if (null == namespaces) {\r\n      exports.storage.removeItem('debug');\r\n    } else {\r\n      exports.storage.debug = namespaces;\r\n    }\r\n  } catch(e) {}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  var r;\r\n  try {\r\n    r = exports.storage.debug;\r\n  } catch(e) {}\r\n\r\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\r\n    r = process.env.DEBUG;\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `localStorage.debug` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n  try {\r\n    return window.localStorage;\r\n  } catch (e) {}\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\":\r\n/*!************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/debug.js ***!\r\n  \\************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = __webpack_require__(/*! ms */ \"../node_modules/ms/index.js\");\r\n\r\n/**\r\n * Active `debug` instances.\r\n */\r\nexports.instances = [];\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColor(namespace) {\r\n  var hash = 0, i;\r\n\r\n  for (i in namespace) {\r\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n\r\n  return exports.colors[Math.abs(hash) % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createDebug(namespace) {\r\n\r\n  var prevTime;\r\n\r\n  function debug() {\r\n    // disabled?\r\n    if (!debug.enabled) return;\r\n\r\n    var self = debug;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // turn the `arguments` into a proper Array\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if ('string' !== typeof args[0]) {\r\n      // anything else let's inspect with %O\r\n      args.unshift('%O');\r\n    }\r\n\r\n    // apply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\r\n      // if we encounter an escaped % then don't increase the array index\r\n      if (match === '%%') return match;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if ('function' === typeof formatter) {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index]` since it's inlined in the `format`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    // apply env-specific formatting (colors, etc.)\r\n    exports.formatArgs.call(self, args);\r\n\r\n    var logFn = debug.log || exports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n\r\n  debug.namespace = namespace;\r\n  debug.enabled = exports.enabled(namespace);\r\n  debug.useColors = exports.useColors();\r\n  debug.color = selectColor(namespace);\r\n  debug.destroy = destroy;\r\n\r\n  // env-specific initialization logic for debug instances\r\n  if ('function' === typeof exports.init) {\r\n    exports.init(debug);\r\n  }\r\n\r\n  exports.instances.push(debug);\r\n\r\n  return debug;\r\n}\r\n\r\nfunction destroy () {\r\n  var index = exports.instances.indexOf(this);\r\n  if (index !== -1) {\r\n    exports.instances.splice(index, 1);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  exports.names = [];\r\n  exports.skips = [];\r\n\r\n  var i;\r\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i].replace(/\\*/g, '.*?');\r\n    if (namespaces[0] === '-') {\r\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n    } else {\r\n      exports.names.push(new RegExp('^' + namespaces + '$'));\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < exports.instances.length; i++) {\r\n    var instance = exports.instances[i];\r\n    instance.enabled = exports.enabled(instance.namespace);\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.enable('');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  if (name[name.length - 1] === '*') {\r\n    return true;\r\n  }\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/index.js\":\r\n/*!************************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/index.js ***!\r\n  \\************************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Detect Electron renderer process, which is node, but we should\r\n * treat as a browser.\r\n */\r\n\r\nif (typeof process === 'undefined' || process.type === 'renderer') {\r\n  module.exports = __webpack_require__(/*! ./browser.js */ \"../node_modules/follow-redirects/node_modules/debug/src/browser.js\");\r\n} else {\r\n  module.exports = __webpack_require__(/*! ./node.js */ \"../node_modules/follow-redirects/node_modules/debug/src/node.js\");\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/follow-redirects/node_modules/debug/src/node.js\":\r\n/*!***********************************************************************!*\\\r\n  !*** ../node_modules/follow-redirects/node_modules/debug/src/node.js ***!\r\n  \\***********************************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar tty = __webpack_require__(/*! tty */ \"tty\");\r\nvar util = __webpack_require__(/*! util */ \"util\");\r\n\r\n/**\r\n * This is the Node.js implementation of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = __webpack_require__(/*! ./debug */ \"../node_modules/follow-redirects/node_modules/debug/src/debug.js\");\r\nexports.init = init;\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\r\n\r\ntry {\r\n  var supportsColor = __webpack_require__(/*! supports-color */ \"../node_modules/supports-color/index.js\");\r\n  if (supportsColor && supportsColor.level >= 2) {\r\n    exports.colors = [\r\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\r\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\r\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\r\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\r\n      205, 206, 207, 208, 209, 214, 215, 220, 221\r\n    ];\r\n  }\r\n} catch (err) {\r\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\r\n}\r\n\r\n/**\r\n * Build up the default `inspectOpts` object from the environment variables.\r\n *\r\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\r\n */\r\n\r\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\r\n  return /^debug_/i.test(key);\r\n}).reduce(function (obj, key) {\r\n  // camel-case\r\n  var prop = key\r\n    .substring(6)\r\n    .toLowerCase()\r\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\r\n\r\n  // coerce string value into JS value\r\n  var val = process.env[key];\r\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\r\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\r\n  else if (val === 'null') val = null;\r\n  else val = Number(val);\r\n\r\n  obj[prop] = val;\r\n  return obj;\r\n}, {});\r\n\r\n/**\r\n * Is stdout a TTY? Colored output is enabled when `true`.\r\n */\r\n\r\nfunction useColors() {\r\n  return 'colors' in exports.inspectOpts\r\n    ? Boolean(exports.inspectOpts.colors)\r\n    : tty.isatty(process.stderr.fd);\r\n}\r\n\r\n/**\r\n * Map %o to `util.inspect()`, all on a single line.\r\n */\r\n\r\nexports.formatters.o = function(v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts)\r\n    .split('\\n').map(function(str) {\r\n      return str.trim()\r\n    }).join(' ');\r\n};\r\n\r\n/**\r\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\r\n */\r\n\r\nexports.formatters.O = function(v) {\r\n  this.inspectOpts.colors = this.useColors;\r\n  return util.inspect(v, this.inspectOpts);\r\n};\r\n\r\n/**\r\n * Adds ANSI color escape codes if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n  var name = this.namespace;\r\n  var useColors = this.useColors;\r\n\r\n  if (useColors) {\r\n    var c = this.color;\r\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\r\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\r\n\r\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\r\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\r\n  } else {\r\n    args[0] = getDate() + name + ' ' + args[0];\r\n  }\r\n}\r\n\r\nfunction getDate() {\r\n  if (exports.inspectOpts.hideDate) {\r\n    return '';\r\n  } else {\r\n    return new Date().toISOString() + ' ';\r\n  }\r\n}\r\n\r\n/**\r\n * Invokes `util.format()` with the specified arguments and writes to stderr.\r\n */\r\n\r\nfunction log() {\r\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\n\r\nfunction save(namespaces) {\r\n  if (null == namespaces) {\r\n    // If you set a process.env field to null or undefined, it gets cast to the\r\n    // string 'null' or 'undefined'. Just delete instead.\r\n    delete process.env.DEBUG;\r\n  } else {\r\n    process.env.DEBUG = namespaces;\r\n  }\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n  return process.env.DEBUG;\r\n}\r\n\r\n/**\r\n * Init logic for `debug` instances.\r\n *\r\n * Create a new `inspectOpts` object in case `useColors` is set\r\n * differently for a particular `debug` instance.\r\n */\r\n\r\nfunction init (debug) {\r\n  debug.inspectOpts = {};\r\n\r\n  var keys = Object.keys(exports.inspectOpts);\r\n  for (var i = 0; i < keys.length; i++) {\r\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\r\n  }\r\n}\r\n\r\n/**\r\n * Enable namespaces listed in `process.env.DEBUG` initially.\r\n */\r\n\r\nexports.enable(load());\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/is-buffer/index.js\":\r\n/*!******************************************!*\\\r\n  !*** ../node_modules/is-buffer/index.js ***!\r\n  \\******************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\n/*!\r\n * Determine if an object is a Buffer\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */\r\n\r\n// The _isBuffer check is for Safari 5-7 support, because it's missing\r\n// Object.prototype.constructor. Remove this eventually\r\nmodule.exports = function (obj) {\r\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\r\n}\r\n\r\nfunction isBuffer (obj) {\r\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\r\n}\r\n\r\n// For Node v0.10 support. Remove this eventually.\r\nfunction isSlowBuffer (obj) {\r\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/ms/index.js\":\r\n/*!***********************************!*\\\r\n  !*** ../node_modules/ms/index.js ***!\r\n  \\***********************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isNaN(val) === false) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  if (ms >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (ms >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (ms >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (ms >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  return plural(ms, d, 'day') ||\r\n    plural(ms, h, 'hour') ||\r\n    plural(ms, m, 'minute') ||\r\n    plural(ms, s, 'second') ||\r\n    ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, n, name) {\r\n  if (ms < n) {\r\n    return;\r\n  }\r\n  if (ms < n * 1.5) {\r\n    return Math.floor(ms / n) + ' ' + name;\r\n  }\r\n  return Math.ceil(ms / n) + ' ' + name + 's';\r\n}\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/supports-color/index.js\":\r\n/*!***********************************************!*\\\r\n  !*** ../node_modules/supports-color/index.js ***!\r\n  \\***********************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\"use strict\";\r\n\r\nvar argv = process.argv;\r\n\r\nvar terminator = argv.indexOf('--');\r\nvar hasFlag = function (flag) {\r\n\tflag = '--' + flag;\r\n\tvar pos = argv.indexOf(flag);\r\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\r\n};\r\n\r\nmodule.exports = (function () {\r\n\tif ('FORCE_COLOR' in process.env) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (hasFlag('no-color') ||\r\n\t\thasFlag('no-colors') ||\r\n\t\thasFlag('color=false')) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (hasFlag('color') ||\r\n\t\thasFlag('colors') ||\r\n\t\thasFlag('color=true') ||\r\n\t\thasFlag('color=always')) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (process.stdout && !process.stdout.isTTY) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (process.platform === 'win32') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ('COLORTERM' in process.env) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (process.env.TERM === 'dumb') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n})();\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/webpack/buildin/module.js\":\r\n/*!*************************************************!*\\\r\n  !*** ../node_modules/webpack/buildin/module.js ***!\r\n  \\*************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"../node_modules/xmltojson/lib/xmlToJSON.js\":\r\n/*!**************************************************!*\\\r\n  !*** ../node_modules/xmltojson/lib/xmlToJSON.js ***!\r\n  \\**************************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;/* Copyright 2015 William Summers, MetaTribal LLC\r\n * adapted from https://developer.mozilla.org/en-US/docs/JXON\r\n *\r\n * Licensed under the MIT License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     https://opensource.org/licenses/MIT\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @author William Summers\r\n *\r\n */\r\n\r\nvar xmlToJSON = (function () {\r\n\r\n    this.version = \"1.3.5\";\r\n\r\n    var options = { // set up the default options\r\n        mergeCDATA: true, // extract cdata and merge with text\r\n        grokAttr: true, // convert truthy attributes to boolean, etc\r\n        grokText: true, // convert truthy text/attr to boolean, etc\r\n        normalize: true, // collapse multiple spaces to single space\r\n        xmlns: true, // include namespaces as attribute in output\r\n        namespaceKey: '_ns', // tag name for namespace objects\r\n        textKey: '_text', // tag name for text nodes\r\n        valueKey: '_value', // tag name for attribute values\r\n        attrKey: '_attr', // tag for attr groups\r\n        cdataKey: '_cdata', // tag for cdata nodes (ignored if mergeCDATA is true)\r\n        attrsAsObject: true, // if false, key is used as prefix to name, set prefix to '' to merge children and attrs.\r\n        stripAttrPrefix: true, // remove namespace prefixes from attributes\r\n        stripElemPrefix: true, // for elements of same name in diff namespaces, you can enable namespaces and access the nskey property\r\n        childrenAsArray: true // force children into arrays\r\n    };\r\n\r\n    var prefixMatch = new RegExp(/(?!xmlns)^.*:/);\r\n    var trimMatch = new RegExp(/^\\s+|\\s+$/g);\r\n\r\n    this.grokType = function (sValue) {\r\n        if (/^\\s*$/.test(sValue)) {\r\n            return null;\r\n        }\r\n        if (/^(?:true|false)$/i.test(sValue)) {\r\n            return sValue.toLowerCase() === \"true\";\r\n        }\r\n        if (isFinite(sValue)) {\r\n            return parseFloat(sValue);\r\n        }\r\n        return sValue;\r\n    };\r\n\r\n    this.parseString = function (xmlString, opt) {\r\n        return this.parseXML(this.stringToXML(xmlString), opt);\r\n    }\r\n\r\n    this.parseXML = function (oXMLParent, opt) {\r\n\r\n        // initialize options\r\n        for (var key in opt) {\r\n            options[key] = opt[key];\r\n        }\r\n\r\n        var vResult = {},\r\n            nLength = 0,\r\n            sCollectedTxt = \"\";\r\n\r\n        // parse namespace information\r\n        if (options.xmlns && oXMLParent.namespaceURI) {\r\n            vResult[options.namespaceKey] = oXMLParent.namespaceURI;\r\n        }\r\n\r\n        // parse attributes\r\n        // using attributes property instead of hasAttributes method to support older browsers\r\n        if (oXMLParent.attributes && oXMLParent.attributes.length > 0) {\r\n            var vAttribs = {};\r\n\r\n            for (nLength; nLength < oXMLParent.attributes.length; nLength++) {\r\n                var oAttrib = oXMLParent.attributes.item(nLength);\r\n                vContent = {};\r\n                var attribName = '';\r\n\r\n                if (options.stripAttrPrefix) {\r\n                    attribName = oAttrib.name.replace(prefixMatch, '');\r\n\r\n                } else {\r\n                    attribName = oAttrib.name;\r\n                }\r\n\r\n                if (options.grokAttr) {\r\n                    vContent[options.valueKey] = this.grokType(oAttrib.value.replace(trimMatch, ''));\r\n                } else {\r\n                    vContent[options.valueKey] = oAttrib.value.replace(trimMatch, '');\r\n                }\r\n\r\n                if (options.xmlns && oAttrib.namespaceURI) {\r\n                    vContent[options.namespaceKey] = oAttrib.namespaceURI;\r\n                }\r\n\r\n                if (options.attrsAsObject) { // attributes with same local name must enable prefixes\r\n                    vAttribs[attribName] = vContent;\r\n                } else {\r\n                    vResult[options.attrKey + attribName] = vContent;\r\n                }\r\n            }\r\n\r\n            if (options.attrsAsObject) {\r\n                vResult[options.attrKey] = vAttribs;\r\n            } else { }\r\n        }\r\n\r\n        // iterate over the children\r\n        if (oXMLParent.hasChildNodes()) {\r\n            for (var oNode, sProp, vContent, nItem = 0; nItem < oXMLParent.childNodes.length; nItem++) {\r\n                oNode = oXMLParent.childNodes.item(nItem);\r\n\r\n                if (oNode.nodeType === 4) {\r\n                    if (options.mergeCDATA) {\r\n                        sCollectedTxt += oNode.nodeValue;\r\n                    } else {\r\n                        if (vResult.hasOwnProperty(options.cdataKey)) {\r\n                            if (vResult[options.cdataKey].constructor !== Array) {\r\n                                vResult[options.cdataKey] = [vResult[options.cdataKey]];\r\n                            }\r\n                            vResult[options.cdataKey].push(oNode.nodeValue);\r\n\r\n                        } else {\r\n                            if (options.childrenAsArray) {\r\n                                vResult[options.cdataKey] = [];\r\n                                vResult[options.cdataKey].push(oNode.nodeValue);\r\n                            } else {\r\n                                vResult[options.cdataKey] = oNode.nodeValue;\r\n                            }\r\n                        }\r\n                    }\r\n                } /* nodeType is \"CDATASection\" (4) */\r\n                else if (oNode.nodeType === 3) {\r\n                    sCollectedTxt += oNode.nodeValue;\r\n                } /* nodeType is \"Text\" (3) */\r\n                else if (oNode.nodeType === 1) { /* nodeType is \"Element\" (1) */\r\n\r\n                    if (nLength === 0) {\r\n                        vResult = {};\r\n                    }\r\n\r\n                    // using nodeName to support browser (IE) implementation with no 'localName' property\r\n                    if (options.stripElemPrefix) {\r\n                        sProp = oNode.nodeName.replace(prefixMatch, '');\r\n                    } else {\r\n                        sProp = oNode.nodeName;\r\n                    }\r\n\r\n                    vContent = xmlToJSON.parseXML(oNode);\r\n\r\n                    if (vResult.hasOwnProperty(sProp)) {\r\n                        if (vResult[sProp].constructor !== Array) {\r\n                            vResult[sProp] = [vResult[sProp]];\r\n                        }\r\n                        vResult[sProp].push(vContent);\r\n\r\n                    } else {\r\n                        if (options.childrenAsArray) {\r\n                            vResult[sProp] = [];\r\n                            vResult[sProp].push(vContent);\r\n                        } else {\r\n                            vResult[sProp] = vContent;\r\n                        }\r\n                        nLength++;\r\n                    }\r\n                }\r\n            }\r\n        } else if (!sCollectedTxt) { // no children and no text, return null\r\n            if (options.childrenAsArray) {\r\n                vResult[options.textKey] = [];\r\n                vResult[options.textKey].push(null);\r\n            } else {\r\n                vResult[options.textKey] = null;\r\n            }\r\n        }\r\n\r\n        if (sCollectedTxt) {\r\n            if (options.grokText) {\r\n                var value = this.grokType(sCollectedTxt.replace(trimMatch, ''));\r\n                if (value !== null && value !== undefined) {\r\n                    vResult[options.textKey] = value;\r\n                }\r\n            } else if (options.normalize) {\r\n                vResult[options.textKey] = sCollectedTxt.replace(trimMatch, '').replace(/\\s+/g, \" \");\r\n            } else {\r\n                vResult[options.textKey] = sCollectedTxt.replace(trimMatch, '');\r\n            }\r\n        }\r\n\r\n        return vResult;\r\n    }\r\n\r\n\r\n    // Convert xmlDocument to a string\r\n    // Returns null on failure\r\n    this.xmlToString = function (xmlDoc) {\r\n        try {\r\n            var xmlString = xmlDoc.xml ? xmlDoc.xml : (new XMLSerializer()).serializeToString(xmlDoc);\r\n            return xmlString;\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Convert a string to XML Node Structure\r\n    // Returns null on failure\r\n    this.stringToXML = function (xmlString) {\r\n        try {\r\n            var xmlDoc = null;\r\n\r\n            if (window.DOMParser) {\r\n\r\n                var parser = new DOMParser();\r\n                xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\r\n\r\n                return xmlDoc;\r\n            } else {\r\n                xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n                xmlDoc.async = false;\r\n                xmlDoc.loadXML(xmlString);\r\n\r\n                return xmlDoc;\r\n            }\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return this;\r\n}).call({});\r\n\r\nif (typeof module != \"undefined\" && module !== null && module.exports) module.exports = xmlToJSON;\r\nelse if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return xmlToJSON }).call(exports, __webpack_require__, exports, module),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"../node_modules/webpack/buildin/module.js\")(module)))\r\n\r\n/***/ }),\r\n\r\n/***/ \"./alpheiostb/adapter.js\":\r\n/*!*******************************!*\\\r\n  !*** ./alpheiostb/adapter.js ***!\r\n  \\*******************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _base_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base_adapter */ \"./base_adapter.js\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__);\r\n/* harmony import */ var _config_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config.json */ \"./alpheiostb/config.json\");\r\nvar _config_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./config.json */ \"./alpheiostb/config.json\", 1);\r\n/* harmony import */ var xmltojson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! xmltojson */ \"../node_modules/xmltojson/lib/xmlToJSON.js\");\r\n/* harmony import */ var xmltojson__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(xmltojson__WEBPACK_IMPORTED_MODULE_3__);\r\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\r\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_4__);\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AlpheiosTreebankAdapter extends _base_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * A Morph Client Adapter for the Tufts Morphology Service\r\n   * @constructor\r\n   * @param {object} config configuraiton object\r\n   */\r\n  constructor (config = {}) {\r\n    super()\r\n    try {\r\n      this.config = JSON.parse(_config_json__WEBPACK_IMPORTED_MODULE_2__)\r\n    } catch (e) {\r\n      this.config = Object.assign({}, _config_json__WEBPACK_IMPORTED_MODULE_2__)\r\n    }\r\n    Object.assign(this.config, config)\r\n    this.models = { 'lat': alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"LatinLanguageModel\"],\r\n      'grc': alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"GreekLanguageModel\"]\r\n    }\r\n  }\r\n\r\n  prepareRequestUrl (lang, word) {\r\n    let [text, fragment] = word.split(/#/)\r\n    let url\r\n    if (this.config.texts.includes(text)) {\r\n      url = this.config.url.replace('r_TEXT', text)\r\n      url = url.replace('r_WORD', fragment)\r\n    }\r\n    return url\r\n  }\r\n\r\n  fetchWindow (url, languageID) {\r\n    return new Promise((resolve, reject) => {\r\n      if (url) {\r\n        window.fetch(url).then(\r\n          function (response) {\r\n            try {\r\n              if (response.ok) {\r\n                let xmlString = response.text()\r\n                resolve(xmlString)\r\n              } else {\r\n                reject(response.statusText)\r\n              }\r\n            } catch (error) {\r\n              reject(error)\r\n            }\r\n          }\r\n        ).catch((error) => {\r\n          reject(error)\r\n        }\r\n        )\r\n      } else {\r\n        reject(new Error(`Unable to prepare parser request url for ${languageID.toString()}`))\r\n      }\r\n    })\r\n  }\r\n\r\n  async fetchAxios (url, languageID) {\r\n    try {\r\n      let res = await axios__WEBPACK_IMPORTED_MODULE_4___default.a.get(url)\r\n      return res.data\r\n    } catch (error) {\r\n      console.error(`Unable to prepare parser request url for ${languageID.toString()}`)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch response from a remote URL\r\n   * @override BaseAdapter#fetch\r\n   * @param {String} word is expected to be a reference to a word identifier fragement\r\n  *                       in a text in the form textid#wordid\r\n   *                      e.g. 1999.02.0066#1-1\r\n   */\r\n  fetch (languageID, word) {\r\n    const langCode = alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"LanguageModelFactory\"].getLanguageCodeFromId(languageID)\r\n    let url = this.prepareRequestUrl(langCode, word)\r\n    if (typeof window !== 'undefined') {\r\n      return this.fetchWindow(url, languageID)\r\n    } else {\r\n      return this.fetchAxios(url, languageID)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A function that maps a morphological service's specific data types and values into an inflection library standard.\r\n   * @param {object} jsonObj - A JSON data from a Morphological Analyzer.\r\n   * @param {object} targetWord - the target of the analysis\r\n   * @returns {Models.Homonym} A library standard Homonym object.\r\n   */\r\n  transform (jsonObj, targetWord) {\r\n    'use strict'\r\n    let providerUri = this.config.providerUri\r\n    let providerRights = this.config.providerRights\r\n    let provider = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"ResourceProvider\"](providerUri, providerRights)\r\n    let hdwd = jsonObj.words[0].word[0].entry[0].dict[0].hdwd[0]\r\n    let lemmaText = hdwd._text\r\n    // the Alpheios v1 treebank data kept trailing digits on the lemmas\r\n    // these won't match morphology service lemmas which have them stripped\r\n    lemmaText = lemmaText.replace(/\\d+$/, '')\r\n    let model = this.models[hdwd._attr.lang._value]\r\n    let lemma = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Lemma\"](lemmaText, model.languageCode)\r\n    let lexmodel = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Lexeme\"](lemma, [])\r\n    let inflection = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Inflection\"](lemmaText, model.languageID, null, null, null)\r\n    let infl = jsonObj.words[0].word[0].entry[0].infl[0]\r\n    inflection.addFeature(new alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Feature\"](alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Feature\"].types.fullForm, targetWord, model.languageID))\r\n    let features = [\r\n      ['pofs', 'part', true],\r\n      ['case', 'grmCase', false],\r\n      ['num', 'number', false],\r\n      ['gend', 'gender', false],\r\n      ['voice', 'voice', false],\r\n      ['mood', 'mood', false],\r\n      ['pers', 'person', false],\r\n      ['comp', 'comparison', false]\r\n    ]\r\n    for (let feature of features) {\r\n      let localName = feature[0]\r\n      let featureType = feature[1]\r\n      let addToLemma = feature[2]\r\n      if (infl[localName]) {\r\n        let obj = model.typeFeature(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Feature\"].types[featureType]).createFeatures(infl[localName][0]._text, 1)\r\n        inflection.addFeature(obj)\r\n        if (addToLemma) {\r\n          lemma.addFeature(obj)\r\n        }\r\n      }\r\n    }\r\n    lexmodel.inflections = [ inflection ]\r\n    return new alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Homonym\"]([alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"ResourceProvider\"].getProxy(provider, lexmodel)], targetWord)\r\n  }\r\n\r\n  async getHomonym (languageID, word) {\r\n    let xmlString = await this.fetch(languageID, word)\r\n    if (xmlString) {\r\n      let langCode = this.getLanguageCode(languageID)\r\n      console.log(`LangCode ${langCode}`)\r\n      let jsonObj = xmltojson__WEBPACK_IMPORTED_MODULE_3___default.a.parseString(xmlString)\r\n      jsonObj.words[0].word[0].entry[0].dict[0].hdwd[0]._attr = { lang: { _value: langCode } }\r\n      let homonym = this.transform(jsonObj, jsonObj.words[0].word[0].form[0]._text)\r\n      return homonym\r\n    } else {\r\n      // No data found for this word\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  getLanguageCode (languageID) {\r\n    return alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"LanguageModelFactory\"].getLanguageCodeFromId(languageID)\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (AlpheiosTreebankAdapter);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./alpheiostb/config.json\":\r\n/*!********************************!*\\\r\n  !*** ./alpheiostb/config.json ***!\r\n  \\********************************/\r\n/*! exports provided: texts, url, providerUri, providerRights, allowUnknownValues, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"texts\":[\"1999.01.0021\",\"1999.01.0135\",\"1999.02.0066\",\"phi0959.phi006.alpheios-text-lat1\",\"tlg0011.tlg003.alpheios-text-grc1\",\"tlg0012.tlg001.alpheios-text-grc1\",\"tlg0012.tlg002.alpheios-text-grc1\",\"tlg0020.tlg001.alpheios-text-grc1\",\"tlg0020.tlg002.alpheios-text-grc1\",\"tlg0020.tlg003.alpheios-text-grc1\",\"tlg0085.tlg001.alpheios-text-grc1\",\"tlg0085.tlg002.alpheios-text-grc1\",\"tlg0085.tlg003.alpheios-text-grc1\",\"tlg0085.tlg004.alpheios-text-grc1\",\"tlg0085.tlg005.alpheios-text-grc1\",\"tlg0085.tlg006.alpheios-text-grc1\",\"tlg0085.tlg007.alpheios-text-grc1\",\"tlg0086.tlg034.alpheios-text-ara2\"],\"url\":\"http://tools.alpheios.net/exist/rest/db/xq/treebank-getmorph.xq?f=r_TEXT&w=r_WORD\",\"providerUri\":\"https://alpheios.net\",\"providerRights\":\"The Alpheios Treebank data is licenced under the Creative Commons 3.0 Share-Alike license.\",\"allowUnknownValues\":true};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./base_adapter.js\":\r\n/*!*************************!*\\\r\n  !*** ./base_adapter.js ***!\r\n  \\*************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__);\r\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"../node_modules/axios/index.js\");\r\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\r\n\r\n\r\n/**\r\n * Base Adapter Class for a Morphology Service Client\r\n */\r\nclass BaseAdapter {\r\n  /**\r\n   * Method which is used to prepare a lookup request according\r\n   * to the adapter specific logic\r\n   * @param {string} lang - the language code\r\n   * @param {string} word - the word to lookup\r\n   * @returns {string} the url for the request\r\n   */\r\n  prepareRequestUrl (lang, word) {\r\n    /** must be overridden in the adapter implementation class **/\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Lookup the supplied word using the preconfigured engines and\r\n   * and return a Homonym\r\n   * @param {symbol} languageID - A language ID as defined in Constants.LANG_XXX in data models\r\n   * @param {string} word - the word to lookup\r\n   * @return {Homonym} homonym object\r\n   */\r\n  async getHomonym (languageID, word) {\r\n    // implement in the derived adapter class\r\n    return undefined\r\n  }\r\n\r\n  fetchWindow (url, languageID) {\r\n    return new Promise((resolve, reject) => {\r\n      if (url) {\r\n        window.fetch(url).then(\r\n          function (response) {\r\n            try {\r\n              if (response.ok) {\r\n                let json = response.json()\r\n                resolve(json)\r\n              } else {\r\n                reject(response.statusText)\r\n              }\r\n            } catch (error) {\r\n              reject(error)\r\n            }\r\n          }\r\n        ).catch((error) => {\r\n          reject(error)\r\n        }\r\n        )\r\n      } else {\r\n        reject(new Error(`Unable to prepare parser request url for ${languageID.toString()}`))\r\n      }\r\n    })\r\n  }\r\n\r\n  async fetchAxios (url, languageID) {\r\n    try {\r\n      let res = await axios__WEBPACK_IMPORTED_MODULE_1___default.a.get(encodeURI(url))\r\n      return res.data\r\n    } catch (error) {\r\n      console.error(`Unable to prepare parser request url for ${languageID.toString()}`, url, error.message)\r\n    }\r\n  }\r\n  /**\r\n   * Fetch response from a remote URL\r\n   * @param {symbol} languageID - A language ID\r\n   * @param {string} word - the word to lookup\r\n   * @returns {Promise} a promse which if successful resolves to json response object\r\n   *                    with the results of the analysis\r\n   */\r\n  fetch (languageID, word) {\r\n    const langCode = alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__[\"LanguageModelFactory\"].getLanguageCodeFromId(languageID)\r\n    let url = this.prepareRequestUrl(langCode, word)\r\n\r\n    if (typeof window !== 'undefined') {\r\n      return this.fetchWindow(url, languageID)\r\n    } else {\r\n      return this.fetchAxios(url, languageID)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch test data to test the adapter\r\n   * @param {string} lang - the language code\r\n   * @param {string} word - the word to lookup\r\n   * @returns {Promise} a promse which if successful resolves to json response object\r\n   *                    with the test data\r\n   */\r\n  fetchTestData (lang, word) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let data = {}\r\n        resolve(data)\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * A function that maps a morphological service's specific data types and values into an inflection library standard.\r\n   * @param {object} jsonObj - A JSON data from the fetch request\r\n   * @param {object} targetWord - the original target word of the analysis\r\n   * @returns {Homonym} A library standard Homonym object.\r\n   */\r\n  transform (jsonObj, targetWord) {\r\n    return {}\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseAdapter);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./driver.js\":\r\n/*!*******************!*\\\r\n  !*** ./driver.js ***!\r\n  \\*******************/\r\n/*! exports provided: BaseAdapter, AlpheiosTuftsAdapter, AlpheiosTreebankAdapter */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _tufts_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tufts/adapter */ \"./tufts/adapter.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AlpheiosTuftsAdapter\", function() { return _tufts_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\r\n\r\n/* harmony import */ var _base_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base_adapter */ \"./base_adapter.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BaseAdapter\", function() { return _base_adapter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\r\n\r\n/* harmony import */ var _alpheiostb_adapter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./alpheiostb/adapter */ \"./alpheiostb/adapter.js\");\r\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"AlpheiosTreebankAdapter\", function() { return _alpheiostb_adapter__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/adapter.js\":\r\n/*!**************************!*\\\r\n  !*** ./tufts/adapter.js ***!\r\n  \\**************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _base_adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base_adapter */ \"./base_adapter.js\");\r\n/* harmony import */ var _engine_whitakers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./engine/whitakers */ \"./tufts/engine/whitakers.js\");\r\n/* harmony import */ var _engine_morpheusgrc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./engine/morpheusgrc */ \"./tufts/engine/morpheusgrc.js\");\r\n/* harmony import */ var _engine_aramorph__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./engine/aramorph */ \"./tufts/engine/aramorph.js\");\r\n/* harmony import */ var _engine_hazm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./engine/hazm */ \"./tufts/engine/hazm.js\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__);\r\n/* harmony import */ var _engine_data_test_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./engine/data/test-data */ \"./tufts/engine/data/test-data.js\");\r\n/* harmony import */ var _config_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config.json */ \"./tufts/config.json\");\r\nvar _config_json__WEBPACK_IMPORTED_MODULE_7___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./config.json */ \"./tufts/config.json\", 1);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AlpheiosTuftsAdapter extends _base_adapter__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n  /**\r\n   * A Morph Client Adapter for the Tufts Morphology Service\r\n   * @constructor\r\n   * @param {object} config configuraiton object\r\n   */\r\n  constructor (config = {}) {\r\n    super()\r\n    try {\r\n      this.config = JSON.parse(_config_json__WEBPACK_IMPORTED_MODULE_7__)\r\n    } catch (e) {\r\n      this.config = Object.assign({}, _config_json__WEBPACK_IMPORTED_MODULE_7__)\r\n    }\r\n    Object.assign(this.config, config)\r\n    this.engineMap = new Map(([ _engine_whitakers__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _engine_morpheusgrc__WEBPACK_IMPORTED_MODULE_2__[\"default\"], _engine_aramorph__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _engine_hazm__WEBPACK_IMPORTED_MODULE_4__[\"default\"] ]).map((e) => { return [ e.engine, e ] }))\r\n  }\r\n\r\n  getEngineLanguageMap (lang) {\r\n    if (this.config.engine[lang]) {\r\n      return this.engineMap.get(this.config.engine[lang][0])\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  prepareRequestUrl (lang, word) {\r\n    let engine = this.getEngineLanguageMap(lang)\r\n    if (engine) {\r\n      let code = engine.engine\r\n      return this.config.url.replace('r_WORD', word).replace('r_ENGINE', code).replace('r_LANG', lang)\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  fetchTestData (lang, word) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let wordData = new _engine_data_test_data__WEBPACK_IMPORTED_MODULE_6__[\"default\"]().get(word)\r\n        let json = JSON.parse(wordData)\r\n        resolve(json)\r\n      } catch (error) {\r\n        // Word is not found in test data\r\n        reject(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * A function that maps a morphological service's specific data types and values into an inflection library standard.\r\n   * @param {object} jsonObj - A JSON data from a Morphological Analyzer.\r\n   * @param {object} targetWord - the target of the analysis\r\n   * @returns {Models.Homonym} A library standard Homonym object.\r\n   */\r\n  transform (jsonObj, targetWord) {\r\n    'use strict'\r\n    let lexemes = []\r\n    let annotationBody = jsonObj.RDF.Annotation.Body\r\n    if (!Array.isArray(annotationBody)) {\r\n      /*\r\n      If only one lexeme is returned, Annotation Body will not be an array but rather a single object.\r\n      Let's convert it to an array so we can work with it in the same way no matter what format it is.\r\n      */\r\n      if (annotationBody) {\r\n        annotationBody = [annotationBody]\r\n      } else {\r\n        annotationBody = []\r\n      }\r\n    }\r\n    let providerUri = jsonObj.RDF.Annotation.creator.Agent.about\r\n    let providerRights = ''\r\n    if (jsonObj.RDF.Annotation.rights) {\r\n      providerRights = jsonObj.RDF.Annotation.rights.$\r\n    }\r\n    let provider = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"ResourceProvider\"](providerUri, providerRights)\r\n    for (let lexeme of annotationBody) {\r\n      let inflectionsJSON = lexeme.rest.entry.infl\r\n      if (!inflectionsJSON) {\r\n        inflectionsJSON = []\r\n      } else if (!Array.isArray(inflectionsJSON)) {\r\n        // If only one inflection returned, it is a single object, not an array of objects.\r\n        // Convert it to an array for uniformity.\r\n        inflectionsJSON = [inflectionsJSON]\r\n      }\r\n      let lemmaElements\r\n      let features = [\r\n        ['pofs', 'part'],\r\n        ['case', 'grmCase'],\r\n        ['gend', 'gender'],\r\n        ['decl', 'declension'],\r\n        ['conj', 'conjugation'],\r\n        ['area', 'area'],\r\n        ['age', 'age'],\r\n        ['geo', 'geo'],\r\n        ['freq', 'frequency'],\r\n        ['note', 'note'],\r\n        ['pron', 'pronunciation'],\r\n        ['kind', 'kind']\r\n      ]\r\n      if (lexeme.rest.entry.dict) {\r\n        if (Array.isArray(lexeme.rest.entry.dict)) {\r\n          lemmaElements = lexeme.rest.entry.dict\r\n        } else {\r\n          if (!lexeme.rest.entry.dict.hdwd && inflectionsJSON[0].term) {\r\n            lexeme.rest.entry.dict.hdwd = {}\r\n            lexeme.rest.entry.dict.hdwd.lang = inflectionsJSON[0].term.lang\r\n            lexeme.rest.entry.dict.hdwd.$ = inflectionsJSON[0].term.stem.$ + inflectionsJSON[0].term.suff.$\r\n          }\r\n          lemmaElements = [lexeme.rest.entry.dict]\r\n        }\r\n      } else if (inflectionsJSON.length > 0 && inflectionsJSON[0].term) {\r\n        lemmaElements = [ inflectionsJSON[0].term ]\r\n      }\r\n      // in rare cases (e.g. conditum in Whitakers) multiple dict entries\r\n      // exist - always use the lemma and language from the first\r\n      let language = lemmaElements[0].hdwd ? lemmaElements[0].hdwd.lang : lemmaElements[0].lang\r\n      // Get importer based on the language\r\n      let mappingData = this.getEngineLanguageMap(language)\r\n      let lemmas = []\r\n      let lexemeSet = []\r\n      for (let entry of lemmaElements.entries()) {\r\n        let shortdefs = []\r\n        let index = entry[0]\r\n        let elem = entry[1]\r\n        let lemmaText\r\n        if (elem.hdwd) {\r\n          lemmaText = elem.hdwd.$\r\n        }\r\n        if (!lemmaText || !language) {\r\n          continue\r\n        }\r\n        let lemma = mappingData.parseLemma(lemmaText, language)\r\n        lemmas.push(lemma)\r\n        for (let feature of features) {\r\n          mappingData.mapFeature(lemma, elem, ...feature, this.config.allowUnknownValues)\r\n        }\r\n        let meanings = lexeme.rest.entry.mean\r\n        if (!Array.isArray(meanings)) {\r\n          meanings = [meanings]\r\n        }\r\n        meanings = meanings.filter((m) => m)\r\n        // if we have multiple dictionary elements, take the meaning with the matching index\r\n        if (lemmaElements.length > 1) {\r\n          if (meanings && meanings[index]) {\r\n            let meaning = meanings[index]\r\n            // TODO: convert a source-specific language code to ISO 639-3 if don't match\r\n            let lang = meaning.lang ? meaning.lang : 'eng'\r\n            shortdefs.push(alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"ResourceProvider\"].getProxy(provider,\r\n              new alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Definition\"](meaning.$, lang, 'text/plain', lemmas[index].word)))\r\n          }\r\n        } else {\r\n          // Changed to prevent some weird \"Array Iterator.prototype.next called on incompatible receiver [object Unknown]\" error\r\n          let sDefs = meanings.map(meaning => {\r\n            let lang = meaning.lang ? meaning.lang : 'eng'\r\n            return alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"ResourceProvider\"].getProxy(provider,\r\n              new alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Definition\"](meaning.$, lang, 'text/plain', lemma.word))\r\n          })\r\n          shortdefs.push(...sDefs)\r\n        }\r\n        let lexmodel = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Lexeme\"](lemma, [])\r\n\r\n        lexmodel.meaning.appendShortDefs(shortdefs)\r\n        lexemeSet.push(alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"ResourceProvider\"].getProxy(provider, lexmodel))\r\n      }\r\n      if (lemmas.length === 0) {\r\n        continue\r\n      }\r\n      let inflections = []\r\n      for (let inflectionJSON of inflectionsJSON) {\r\n        let stem = inflectionJSON.term.stem ? inflectionJSON.term.stem.$ : null\r\n        let suffix = inflectionJSON.term.suff ? inflectionJSON.term.suff.$ : null\r\n        let prefix = inflectionJSON.term.pref ? inflectionJSON.term.pref.$ : null\r\n        let xmpl = inflectionJSON.xmpl ? inflectionJSON.xmpl.$ : null\r\n        let inflection = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Inflection\"](stem, mappingData.model.languageID, suffix, prefix, xmpl)\r\n        if (targetWord) {\r\n          inflection.addFeature(new alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"](alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.fullForm, targetWord, mappingData.model.languageID))\r\n        }\r\n        // Parse whatever grammatical features we're interested in\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'pofs', 'part', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'case', 'grmCase', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'decl', 'declension', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'num', 'number', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'gend', 'gender', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'conj', 'conjugation', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'tense', 'tense', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'voice', 'voice', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'mood', 'mood', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'pers', 'person', this.config.allowUnknownValues)\r\n        mappingData.mapFeature(inflection, inflectionJSON, 'comp', 'comparison', this.config.allowUnknownValues)\r\n        if (inflectionJSON.stemtype) {\r\n          mappingData.mapFeature(inflection, inflectionJSON, 'stemtype', 'stemtype', this.config.allowUnknownValues)\r\n        }\r\n        if (inflectionJSON.derivtype) {\r\n          mappingData.mapFeature(inflection, inflectionJSON, 'derivtype', 'derivtype', this.config.allowUnknownValues)\r\n        }\r\n        if (inflectionJSON.dial) {\r\n          mappingData.mapFeature(inflection, inflectionJSON, 'dial', 'dialect', this.config.allowUnknownValues)\r\n        }\r\n        if (inflectionJSON.morph) {\r\n          mappingData.mapFeature(inflection, inflectionJSON, 'morph', 'morph', this.config.allowUnknownValues)\r\n        }\r\n        // we only use the inflection if it tells us something the dictionary details do not\r\n        if (inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.grmCase] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.tense] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.mood] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.voice] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.person] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.comparison] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.stemtype] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.derivtype] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.dialect] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.morph] ||\r\n          inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.example]) {\r\n          inflections.push(inflection)\r\n        }\r\n        // inflection can provide lemma decl, pofs, conj\r\n        for (let lemma of lemmas) {\r\n          if (!lemma.features[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.part]) {\r\n            mappingData.mapFeature(lemma, inflectionJSON, 'pofs', 'part', this.config.allowUnknownValues)\r\n          }\r\n          // only take declension from inflection if lemma has no part of speech or its the same as the inflection\r\n          if (!lemma.features[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.declension] &&\r\n            (!lemma.features[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.part] || lemma.features[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.part].isEqual(inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.part]))) {\r\n            mappingData.mapFeature(lemma, inflectionJSON, 'decl', 'declension', this.config.allowUnknownValues)\r\n          }\r\n          // only take conjugation from inflection if lemma has a part of speech and its the same as the inflection\r\n          if (!lemma.features[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.conjugation] &&\r\n            (!lemma.features[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.part] || lemma.features[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.part].isEqual(inflection[alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.part]))) {\r\n            mappingData.mapFeature(lemma, inflectionJSON, 'conj', 'conjugation', this.config.allowUnknownValues)\r\n          }\r\n        }\r\n      }\r\n      for (let lex of lexemeSet) {\r\n        // only process if we have a lemma that differs from the target\r\n        // word or if we have at least a part of speech\r\n        if (mappingData.reportLexeme(lex)) {\r\n          lex.inflections = inflections\r\n          lexemes.push(lex)\r\n        }\r\n      }\r\n    }\r\n    if (lexemes.length > 0) {\r\n      return new alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Homonym\"](lexemes, targetWord)\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  async getHomonym (languageID, word) {\r\n    let jsonObj = await this.fetch(languageID, word)\r\n    if (jsonObj) {\r\n      let homonym = this.transform(jsonObj, word)\r\n      homonym.lexemes.sort(alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Lexeme\"].getSortByTwoLemmaFeatures(alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.frequency, alpheios_data_models__WEBPACK_IMPORTED_MODULE_5__[\"Feature\"].types.part))\r\n      return homonym\r\n    } else {\r\n      // No data found for this word\r\n      return undefined\r\n    }\r\n  }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (AlpheiosTuftsAdapter);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/config.json\":\r\n/*!***************************!*\\\r\n  !*** ./tufts/config.json ***!\r\n  \\***************************/\r\n/*! exports provided: engine, url, allowUnknownValues, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"engine\":{\"lat\":[\"whitakerLat\"],\"grc\":[\"morpheusgrc\"],\"ara\":[\"aramorph\"],\"per\":[\"hazm\"]},\"url\":\"https://morph.alpheios.net/api/v1/analysis/word?word=r_WORD&engine=r_ENGINE&lang=r_LANG\",\"allowUnknownValues\":true};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/aramorph.js\":\r\n/*!**********************************!*\\\r\n  !*** ./tufts/engine/aramorph.js ***!\r\n  \\**********************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib */ \"./tufts/lib.js\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__);\r\n\r\n\r\n\r\nlet data = new _lib__WEBPACK_IMPORTED_MODULE_0__[\"default\"](alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"ArabicLanguageModel\"], 'aramorph')\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (data);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/data/greek_noun_pilsopo.json\":\r\n/*!***************************************************!*\\\r\n  !*** ./tufts/engine/data/greek_noun_pilsopo.json ***!\r\n  \\***************************************************/\r\n/*! exports provided: RDF, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"RDF\":{\"Annotation\":{\"about\":\"urn:TuftsMorphologyService:φιλόσοφος:morpheuslat\",\"creator\":{\"Agent\":{\"about\":\"org.perseus:tools:morpheus.v1\"}},\"created\":{\"$\":\"2017-10-15T14:06:40.522369\"},\"hasTarget\":{\"Description\":{\"about\":\"urn:word:φιλόσοφος\"}},\"title\":{},\"hasBody\":{\"resource\":\"urn:uuid:idm140446394225264\"},\"Body\":{\"about\":\"urn:uuid:idm140446394225264\",\"type\":{\"resource\":\"cnt:ContentAsXML\"},\"rest\":{\"entry\":{\"uri\":\"http://data.perseus.org/collections/urn:cite:perseus:grclexent.lex78378.1\",\"dict\":{\"hdwd\":{\"lang\":\"grc\",\"$\":\"φιλόσοφος\"},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"2nd\"},\"gend\":{\"$\":\"masculine\"}},\"infl\":{\"term\":{\"lang\":\"grc\",\"stem\":{\"$\":\"φιλοσοφ\"},\"suff\":{\"$\":\"ος\"}},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"2nd\"},\"case\":{\"order\":7,\"$\":\"nominative\"},\"gend\":{\"$\":\"masculine\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"os_ou\"}}}}}}}};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/data/latin_noun_adj_mare.json\":\r\n/*!****************************************************!*\\\r\n  !*** ./tufts/engine/data/latin_noun_adj_mare.json ***!\r\n  \\****************************************************/\r\n/*! exports provided: RDF, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"RDF\":{\"Annotation\":{\"about\":\"urn:TuftsMorphologyService:mare:morpheuslat\",\"creator\":{\"Agent\":{\"about\":\"org.perseus:tools:morpheus.v1\"}},\"created\":{\"$\":\"2017-09-08T06:59:48.639180\"},\"rights\":{\"$\":\"Morphology provided by Morpheus from the Perseus Digital Library at Tufts University.\"},\"hasTarget\":{\"Description\":{\"about\":\"urn:word:mare\"}},\"title\":{},\"hasBody\":[{\"resource\":\"urn:uuid:idm140446402389888\"},{\"resource\":\"urn:uuid:idm140446402332400\"},{\"resource\":\"urn:uuid:idm140446402303648\"}],\"Body\":[{\"about\":\"urn:uuid:idm140446402389888\",\"type\":{\"resource\":\"cnt:ContentAsXML\"},\"rest\":{\"entry\":{\"uri\":\"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34070.1\",\"dict\":{\"hdwd\":{\"lang\":\"lat\",\"$\":\"mare\"},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"gend\":{\"$\":\"neuter\"}},\"infl\":[{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"mar\"},\"suff\":{\"$\":\"e\"}},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"case\":{\"order\":3,\"$\":\"ablative\"},\"gend\":{\"$\":\"neuter\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"is_is\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"mar\"},\"suff\":{\"$\":\"e\"}},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"case\":{\"order\":7,\"$\":\"nominative\"},\"gend\":{\"$\":\"neuter\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"is_is\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"mar\"},\"suff\":{\"$\":\"e\"}},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"case\":{\"order\":1,\"$\":\"vocative\"},\"gend\":{\"$\":\"neuter\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"is_is\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"mar\"},\"suff\":{\"$\":\"e\"}},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"case\":{\"order\":4,\"$\":\"accusative\"},\"gend\":{\"$\":\"neuter\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"is_is\"}}],\"mean\":{\"$\":\"the sea\"}}}},{\"about\":\"urn:uuid:idm140446402332400\",\"type\":{\"resource\":\"cnt:ContentAsXML\"},\"rest\":{\"entry\":{\"uri\":\"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34118.1\",\"dict\":{\"hdwd\":{\"lang\":\"lat\",\"$\":\"marum\"},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"2nd\"},\"gend\":{\"$\":\"neuter\"}},\"infl\":{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"mar\"},\"suff\":{\"$\":\"e\"}},\"pofs\":{\"order\":3,\"$\":\"noun\"},\"decl\":{\"$\":\"2nd\"},\"case\":{\"order\":1,\"$\":\"vocative\"},\"gend\":{\"$\":\"neuter\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"us_i\"}}}}},{\"about\":\"urn:uuid:idm140446402303648\",\"type\":{\"resource\":\"cnt:ContentAsXML\"},\"rest\":{\"entry\":{\"uri\":\"http://data.perseus.org/collections/urn:cite:perseus:latlexent.lex34119.1\",\"dict\":{\"hdwd\":{\"lang\":\"lat\",\"$\":\"mas\"},\"pofs\":{\"order\":2,\"$\":\"adjective\"},\"decl\":{\"$\":\"3rd\"}},\"infl\":[{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"mare\"}},\"pofs\":{\"order\":2,\"$\":\"adjective\"},\"decl\":{\"$\":\"3rd\"},\"case\":{\"order\":3,\"$\":\"ablative\"},\"gend\":{\"$\":\"masculine\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"irreg_adj3\"},\"morph\":{\"$\":\"indeclform\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"mare\"}},\"pofs\":{\"order\":2,\"$\":\"adjective\"},\"decl\":{\"$\":\"3rd\"},\"case\":{\"order\":3,\"$\":\"ablative\"},\"gend\":{\"$\":\"feminine\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"irreg_adj3\"},\"morph\":{\"$\":\"indeclform\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"mare\"}},\"pofs\":{\"order\":2,\"$\":\"adjective\"},\"decl\":{\"$\":\"3rd\"},\"case\":{\"order\":3,\"$\":\"ablative\"},\"gend\":{\"$\":\"neuter\"},\"num\":{\"$\":\"singular\"},\"stemtype\":{\"$\":\"irreg_adj3\"},\"morph\":{\"$\":\"indeclform\"}}]}}}]}}};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/data/latin_noun_cupidinibus.json\":\r\n/*!*******************************************************!*\\\r\n  !*** ./tufts/engine/data/latin_noun_cupidinibus.json ***!\r\n  \\*******************************************************/\r\n/*! exports provided: RDF, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"RDF\":{\"Annotation\":{\"about\":\"urn:TuftsMorphologyService:cupidinibus:whitakerLat\",\"creator\":{\"Agent\":{\"about\":\"net.alpheios:tools:wordsxml.v1\"}},\"created\":{\"$\":\"2017-08-10T23:15:29.185581\"},\"hasTarget\":{\"Description\":{\"about\":\"urn:word:cupidinibus\"}},\"title\":{},\"hasBody\":[{\"resource\":\"urn:uuid:idm140578094883136\"},{\"resource\":\"urn:uuid:idm140578158026160\"}],\"Body\":[{\"about\":\"urn:uuid:idm140578094883136\",\"type\":{\"resource\":\"cnt:ContentAsXML\"},\"rest\":{\"entry\":{\"infl\":[{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"cupidin\"},\"suff\":{\"$\":\"ibus\"}},\"pofs\":{\"order\":5,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"var\":{\"$\":\"1st\"},\"case\":{\"order\":2,\"$\":\"locative\"},\"num\":{\"$\":\"plural\"},\"gend\":{\"$\":\"masculine\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"cupidin\"},\"suff\":{\"$\":\"ibus\"}},\"pofs\":{\"order\":5,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"var\":{\"$\":\"1st\"},\"case\":{\"order\":5,\"$\":\"dative\"},\"num\":{\"$\":\"plural\"},\"gend\":{\"$\":\"masculine\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"cupidin\"},\"suff\":{\"$\":\"ibus\"}},\"pofs\":{\"order\":5,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"var\":{\"$\":\"1st\"},\"case\":{\"order\":3,\"$\":\"ablative\"},\"num\":{\"$\":\"plural\"},\"gend\":{\"$\":\"masculine\"}}],\"dict\":{\"hdwd\":{\"lang\":\"lat\",\"$\":\"Cupido, Cupidinis\"},\"pofs\":{\"order\":5,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"gend\":{\"$\":\"masculine\"},\"area\":{\"$\":\"religion\"},\"freq\":{\"order\":4,\"$\":\"common\"},\"src\":{\"$\":\"Ox.Lat.Dict.\"}},\"mean\":{\"$\":\"Cupid, son of Venus; personification of carnal desire;\"}}}},{\"about\":\"urn:uuid:idm140578158026160\",\"type\":{\"resource\":\"cnt:ContentAsXML\"},\"rest\":{\"entry\":{\"infl\":[{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"cupidin\"},\"suff\":{\"$\":\"ibus\"}},\"pofs\":{\"order\":5,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"var\":{\"$\":\"1st\"},\"case\":{\"order\":2,\"$\":\"locative\"},\"num\":{\"$\":\"plural\"},\"gend\":{\"$\":\"common\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"cupidin\"},\"suff\":{\"$\":\"ibus\"}},\"pofs\":{\"order\":5,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"var\":{\"$\":\"1st\"},\"case\":{\"order\":5,\"$\":\"dative\"},\"num\":{\"$\":\"plural\"},\"gend\":{\"$\":\"common\"}},{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"cupidin\"},\"suff\":{\"$\":\"ibus\"}},\"pofs\":{\"order\":5,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"var\":{\"$\":\"1st\"},\"case\":{\"order\":3,\"$\":\"ablative\"},\"num\":{\"$\":\"plural\"},\"gend\":{\"$\":\"common\"}}],\"dict\":{\"hdwd\":{\"lang\":\"lat\",\"$\":\"cupido, cupidinis\"},\"pofs\":{\"order\":5,\"$\":\"noun\"},\"decl\":{\"$\":\"3rd\"},\"gend\":{\"$\":\"common\"},\"freq\":{\"order\":5,\"$\":\"frequent\"},\"src\":{\"$\":\"Ox.Lat.Dict.\"}},\"mean\":{\"$\":\"desire/love/wish/longing (passionate); lust; greed, appetite; desire for gain;\"}}}}]}}};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/data/latin_verb_cepit.json\":\r\n/*!*************************************************!*\\\r\n  !*** ./tufts/engine/data/latin_verb_cepit.json ***!\r\n  \\*************************************************/\r\n/*! exports provided: RDF, default */\r\n/***/ (function(module) {\r\n\r\nmodule.exports = {\"RDF\":{\"Annotation\":{\"about\":\"urn:TuftsMorphologyService:cepit:whitakerLat\",\"creator\":{\"Agent\":{\"about\":\"net.alpheios:tools:wordsxml.v1\"}},\"created\":{\"$\":\"2017-08-10T23:16:53.672068\"},\"hasTarget\":{\"Description\":{\"about\":\"urn:word:cepit\"}},\"title\":{},\"hasBody\":{\"resource\":\"urn:uuid:idm140578133848416\"},\"Body\":{\"about\":\"urn:uuid:idm140578133848416\",\"type\":{\"resource\":\"cnt:ContentAsXML\"},\"rest\":{\"entry\":{\"infl\":{\"term\":{\"lang\":\"lat\",\"stem\":{\"$\":\"cep\"},\"suff\":{\"$\":\"it\"}},\"pofs\":{\"order\":3,\"$\":\"verb\"},\"conj\":{\"$\":\"3rd\"},\"var\":{\"$\":\"1st\"},\"tense\":{\"$\":\"perfect\"},\"voice\":{\"$\":\"active\"},\"mood\":{\"$\":\"indicative\"},\"pers\":{\"$\":\"3rd\"},\"num\":{\"$\":\"singular\"}},\"dict\":{\"hdwd\":{\"lang\":\"lat\",\"$\":\"capio, capere, cepi, captus\"},\"pofs\":{\"order\":3,\"$\":\"verb\"},\"conj\":{\"$\":\"3rd\"},\"kind\":{\"$\":\"transitive\"},\"freq\":{\"order\":6,\"$\":\"very frequent\"},\"src\":{\"$\":\"Ox.Lat.Dict.\"}},\"mean\":{\"$\":\"take hold, seize; grasp; take bribe; arrest/capture; put on; occupy; captivate;\"}}}}}}};\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/data/test-data.js\":\r\n/*!****************************************!*\\\r\n  !*** ./tufts/engine/data/test-data.js ***!\r\n  \\****************************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _latin_noun_cupidinibus_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./latin_noun_cupidinibus.json */ \"./tufts/engine/data/latin_noun_cupidinibus.json\");\r\nvar _latin_noun_cupidinibus_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./latin_noun_cupidinibus.json */ \"./tufts/engine/data/latin_noun_cupidinibus.json\", 1);\r\n/* harmony import */ var _latin_noun_adj_mare_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./latin_noun_adj_mare.json */ \"./tufts/engine/data/latin_noun_adj_mare.json\");\r\nvar _latin_noun_adj_mare_json__WEBPACK_IMPORTED_MODULE_1___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./latin_noun_adj_mare.json */ \"./tufts/engine/data/latin_noun_adj_mare.json\", 1);\r\n/* harmony import */ var _latin_verb_cepit_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./latin_verb_cepit.json */ \"./tufts/engine/data/latin_verb_cepit.json\");\r\nvar _latin_verb_cepit_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./latin_verb_cepit.json */ \"./tufts/engine/data/latin_verb_cepit.json\", 1);\r\n/* harmony import */ var _greek_noun_pilsopo_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./greek_noun_pilsopo.json */ \"./tufts/engine/data/greek_noun_pilsopo.json\");\r\nvar _greek_noun_pilsopo_json__WEBPACK_IMPORTED_MODULE_3___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./greek_noun_pilsopo.json */ \"./tufts/engine/data/greek_noun_pilsopo.json\", 1);\r\n\r\n\r\n\r\n\r\n\r\nclass WordTestData {\r\n  constructor () {\r\n    this._words = {\r\n      'cupidinibus': _latin_noun_cupidinibus_json__WEBPACK_IMPORTED_MODULE_0__,\r\n      'mare': _latin_noun_adj_mare_json__WEBPACK_IMPORTED_MODULE_1__,\r\n      'cepit': _latin_verb_cepit_json__WEBPACK_IMPORTED_MODULE_2__,\r\n      'φιλόσοφος': _greek_noun_pilsopo_json__WEBPACK_IMPORTED_MODULE_3__\r\n    }\r\n  }\r\n\r\n  get (word) {\r\n    if (this._words.hasOwnProperty(word)) {\r\n      return this._words[word]\r\n    }\r\n    throw new Error(`Word \"${word}\" does not exist in test data`)\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (WordTestData);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/hazm.js\":\r\n/*!******************************!*\\\r\n  !*** ./tufts/engine/hazm.js ***!\r\n  \\******************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib */ \"./tufts/lib.js\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__);\r\n\r\n\r\n\r\nlet data = new _lib__WEBPACK_IMPORTED_MODULE_0__[\"default\"](alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"PersianLanguageModel\"], 'hazm')\r\n\r\n// hazm allow all lemmas in without respect features as all we use it for is lemmatizing\r\ndata.setLexemeFilter(function (lexeme) { return Boolean(lexeme.lemma.word) })\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (data);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/morpheusgrc.js\":\r\n/*!*************************************!*\\\r\n  !*** ./tufts/engine/morpheusgrc.js ***!\r\n  \\*************************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib */ \"./tufts/lib.js\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__);\r\n\r\n\r\n\r\nlet data = new _lib__WEBPACK_IMPORTED_MODULE_0__[\"default\"](alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"GreekLanguageModel\"], 'morpheusgrc')\r\n\r\n/*\r\nBelow are value conversion maps for each grammatical feature to be parsed.\r\nFormat:\r\ndata.addFeature(typeName).add(providerValueName, LibValueName);\r\n(functions are chainable)\r\nTypes and values that are unknown (undefined) will be skipped during parsing.\r\n */\r\n\r\ndata.addFeature(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Feature\"].types.gender).importer\r\n  .map('masculine feminine', [[alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].GEND_MASCULINE, 1], [alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].GEND_FEMININE, 2]])\r\n\r\ndata.addFeature(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Feature\"].types.declension).importer\r\n  .map('1st & 2nd', [[alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].ORD_1ST, 1], [alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].ORD_2ND, 2]])\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (data);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/engine/whitakers.js\":\r\n/*!***********************************!*\\\r\n  !*** ./tufts/engine/whitakers.js ***!\r\n  \\***********************************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var _lib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib */ \"./tufts/lib.js\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__);\r\n\r\n\r\n\r\nlet data = new _lib__WEBPACK_IMPORTED_MODULE_0__[\"default\"](alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"LatinLanguageModel\"], 'whitakerLat')\r\n\r\n/*\r\nBelow are value conversion maps for each grammatical feature to be parsed.\r\nFormat:\r\ndata.addFeature(typeName).add(providerValueName, LibValueName);\r\n(functions are chainable)\r\nTypes and values that are unknown (undefined) will be skipped during parsing.\r\n */\r\n\r\n// TODO  - per inflections.xsd\r\n// Whitakers Words uses packon and tackon in POFS, not sure how\r\n\r\ndata.addFeature(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Feature\"].types.gender).importer\r\n  .map('common', [[alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].GEND_MASCULINE, 1], [alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].GEND_FEMININE, 2]])\r\n  .map('all', [[alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].GEND_MASCULINE, 1], [alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].GEND_FEMININE, 2], [alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].GEND_NEUTER, 3]])\r\n\r\ndata.addFeature(alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Feature\"].types.tense).importer\r\n  .map('future_perfect', alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].TENSE_FUTURE_PERFECT)\r\n\r\ndata.setLemmaParser(function (lemma) {\r\n  // Whitaker's Words returns principal parts for some words\r\n  // and sometimes has a space separted stem and suffix\r\n  let parsed, primary\r\n  let parts = []\r\n  let lemmas = lemma.split(', ')\r\n  for (let [index, l] of lemmas.entries()) {\r\n    let normalized = l.split(' ')[0]\r\n    if (index === 0) {\r\n      primary = normalized\r\n    }\r\n    parts.push(normalized)\r\n  }\r\n  if (primary) {\r\n    parsed = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_1__[\"Lemma\"](primary, this.model.languageCode, parts)\r\n  }\r\n\r\n  return parsed\r\n})\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (data);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"./tufts/lib.js\":\r\n/*!**********************!*\\\r\n  !*** ./tufts/lib.js ***!\r\n  \\**********************/\r\n/*! exports provided: default */\r\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\r\n\r\n\"use strict\";\r\n__webpack_require__.r(__webpack_exports__);\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alpheios-data-models */ \"alpheios-data-models\");\r\n/* harmony import */ var alpheios_data_models__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__);\r\n/*\r\nObjects of a morphology analyzer's library\r\n */\r\n\r\n\r\n/**\r\n * Holds all information required to transform from morphological analyzer's grammatical feature values to the\r\n * library standards. There is one ImportData object per language.\r\n */\r\nclass ImportData {\r\n  /**\r\n     * Creates an ImportData object for the language provided.\r\n     * @param {Function<LanguageModel>} model - A language model of the import data.\r\n     * @param {string} engine - engine code\r\n     */\r\n  constructor (model, engine) {\r\n    'use strict'\r\n    this.model = model\r\n    this.engine = engine\r\n    // add all the features that the language supports so that we\r\n    // can return the default values if we don't need to import a mapping\r\n    for (let featureName of Object.keys(this.model.features)) {\r\n      this.addFeature(featureName)\r\n    }\r\n    // may be overridden by specific engine use via setLemmaParser\r\n    this.parseLemma = function (lemma) { return new alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__[\"Lemma\"](lemma, this.model.languageID) }\r\n    // may be overridden by specific engine use via setPropertyParser - default just returns the property value\r\n    // as a list\r\n    this.parseProperty = function (propertyName, propertyValue) {\r\n      let propertyValues = []\r\n      if (propertyName === 'decl') {\r\n        propertyValues = propertyValue.split('&').map((p) => p.trim())\r\n      } else if (propertyName === 'comp' && propertyValue === 'positive') {\r\n        propertyValues = []\r\n      } else {\r\n        propertyValues = [propertyValue]\r\n      }\r\n      return propertyValues\r\n    }\r\n    // may be overridden by specifc engine use via setLexemeFilter - default assumes we will have a part of speech\r\n    this.reportLexeme = function (lexeme) {\r\n      return lexeme.lemma.features[alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__[\"Feature\"].types.part]\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Adds a grammatical feature whose values to be mapped.\r\n     * @param {string} featureName - A name of a grammatical feature (i.e. declension, number, etc.)\r\n     * @return {Object} An object that represent a newly created grammatical feature.\r\n     */\r\n  addFeature (featureName) {\r\n    this[featureName] = {}\r\n    let model = this.model\r\n\r\n    this[featureName].add = function add (providerValue, alpheiosValue) {\r\n      this[providerValue] = alpheiosValue\r\n      return this\r\n    }\r\n\r\n    this[featureName].get = function get (providerValue, sortOrder = 1, allowUnknownValues = false) {\r\n      let mappedValue = []\r\n      if (!this.importer.has(providerValue)) {\r\n        // if the providerValue matches the model value or the model value\r\n        // is unrestricted, return a feature with the providerValue and order\r\n        if (model.typeFeature(featureName).hasValue(providerValue) ||\r\n            model.typeFeature(featureName).valuesUnrestricted) {\r\n          mappedValue = model.typeFeature(featureName).createFeature(providerValue, sortOrder)\r\n        } else {\r\n          let message = `Unknown value \"${providerValue}\" of feature \"${featureName}\" for ${model.languageCode} (allowed = ${allowUnknownValues})`\r\n          if (allowUnknownValues) {\r\n            console.log(message)\r\n            mappedValue = model.typeFeature(featureName).createFeature(providerValue, sortOrder)\r\n          } else {\r\n            throw new Error(message)\r\n          }\r\n        }\r\n      } else {\r\n        let tempValue = this.importer.get(providerValue)\r\n        if (Array.isArray(tempValue)) {\r\n          mappedValue = model.typeFeature(featureName).createFeatures(tempValue, sortOrder)\r\n        } else {\r\n          mappedValue = model.typeFeature(featureName).createFeature(tempValue, sortOrder)\r\n        }\r\n      }\r\n      return mappedValue\r\n    }\r\n\r\n    /**\r\n     * @param {Object[]} data - An array of objects with `providerData` (an item value) and `sortOrder` fields\r\n     * @param allowUnknownValues\r\n     * @return {Feature}\r\n     */\r\n    this[featureName].getMultiple = function get (data, allowUnknownValues = false) {\r\n      let values = [] // Converts values from `data` into `values` array\r\n      for (const item of data) {\r\n        if (this.importer.has(item.providerValue)) {\r\n          let value = this.importer.get(item.providerValue)\r\n          if (Array.isArray(value)) {\r\n            // if the import returns an array, it should already have the sortOrder\r\n            values = value\r\n          } else {\r\n            values = [[value, item.sortOrder]]\r\n          }\r\n        } else if (model.typeFeature(featureName).hasValue(item.providerValue) ||\r\n          model.typeFeature(featureName).valuesUnrestricted) {\r\n          values.push([item.providerValue, item.sortOrder])\r\n        } else {\r\n          let message = `Unknown value \"${item.providerValue}\" of feature \"${featureName}\" for ${model.languageCode} (allowed = ${allowUnknownValues})`\r\n          if (allowUnknownValues) {\r\n            console.log(message)\r\n            values.push([item.providerValue, item.sortOrder])\r\n          } else {\r\n            throw new Error(message)\r\n          }\r\n        }\r\n      }\r\n      return model.typeFeature(featureName).createFeatures(values)\r\n    }\r\n\r\n    this[featureName].importer = new alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__[\"FeatureImporter\"]()\r\n\r\n    return this[featureName]\r\n  }\r\n\r\n  /**\r\n   * Add an engine-specific lemma parser\r\n   */\r\n  setLemmaParser (callback) {\r\n    this.parseLemma = callback\r\n  }\r\n\r\n  /**\r\n   * Add an engine-specific property parser\r\n   */\r\n  setPropertyParser (callback) {\r\n    this.parseProperty = callback\r\n  }\r\n\r\n  /**\r\n   * Add an engine-specific lexeme filter\r\n   */\r\n  setLexemeFilter (callback) {\r\n    this.reportLexeme = callback\r\n  }\r\n\r\n  /**\r\n   * Maps property of a single feature type to a single Feature object with one or more values\r\n   * (if this feature has multiple values). Feature is stored as a property of the supplied model object.\r\n   * @param {object} model the model object to which the feature will be added\r\n   * @param {object} inputElem the input data element\r\n   * @param {object} inputName the  property name in the input data\r\n   * @param {string} featureName the name of the feature it will be mapped to\r\n   * @param {boolean} allowUnknownValues flag to indicate if unknown values are allowed\r\n   */\r\n  mapFeature (model, inputElem, inputName, featureName, allowUnknownValues) {\r\n    let values = []\r\n    let inputItem = inputElem[inputName]\r\n    if (inputItem) {\r\n      if (Array.isArray(inputItem)) {\r\n        // There are multiple values of this feature\r\n        for (let e of inputItem) {\r\n          values.push(...this.parseProperty(inputName, e.$))\r\n        }\r\n      } else {\r\n        values = this.parseProperty(inputName, inputItem.$)\r\n      }\r\n      // `values` is always an array as an array is a return value of `parseProperty`\r\n    }\r\n    if (values.length > 0) {\r\n      // There are some values found\r\n      values = values.map(v => { return { providerValue: v, sortOrder: inputItem.order ? inputItem.order : 1 } })\r\n      let feature = this[alpheios_data_models__WEBPACK_IMPORTED_MODULE_0__[\"Feature\"].types[featureName]].getMultiple(values, allowUnknownValues)\r\n      model.addFeature(feature)\r\n    }\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (ImportData);\r\n\r\n\r\n/***/ }),\r\n\r\n/***/ \"alpheios-data-models\":\r\n/*!***************************************!*\\\r\n  !*** external \"alpheios-data-models\" ***!\r\n  \\***************************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_alpheios_data_models__;\r\n\r\n/***/ }),\r\n\r\n/***/ \"assert\":\r\n/*!*************************!*\\\r\n  !*** external \"assert\" ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! assert */ \"assert\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"http\":\r\n/*!***********************!*\\\r\n  !*** external \"http\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! http */ \"http\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"https\":\r\n/*!************************!*\\\r\n  !*** external \"https\" ***!\r\n  \\************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! https */ \"https\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"stream\":\r\n/*!*************************!*\\\r\n  !*** external \"stream\" ***!\r\n  \\*************************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! stream */ \"stream\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"tty\":\r\n/*!**********************!*\\\r\n  !*** external \"tty\" ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! tty */ \"tty\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"url\":\r\n/*!**********************!*\\\r\n  !*** external \"url\" ***!\r\n  \\**********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! url */ \"url\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"util\":\r\n/*!***********************!*\\\r\n  !*** external \"util\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! util */ \"util\");\r\n\r\n/***/ }),\r\n\r\n/***/ \"zlib\":\r\n/*!***********************!*\\\r\n  !*** external \"zlib\" ***!\r\n  \\***********************/\r\n/*! no static exports found */\r\n/***/ (function(module, exports) {\r\n\r\nmodule.exports = __webpack_require__(/*! zlib */ \"zlib\");\r\n\r\n/***/ })\r\n\r\n/******/ });\r\n});\r\n//# sourceMappingURL=alpheios-morph-client.node.js.map\n\n//# sourceURL=webpack:///./node_modules/alpheios-morph-client/dist/alpheios-morph-client.node.js?");

/***/ }),

/***/ "./node_modules/async-await-parallel/index.js":
/*!****************************************************!*\
  !*** ./node_modules/async-await-parallel/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = parallelMap\nmodule.exports.pool = parallelPool\n\n/**\n * Invokes an array of async functions in parallel with a limit to the maximum\n * number of concurrent invocations. Async functions are executed in-order and\n * the results are mapped to the return array.\n *\n * Acts as a replacement for `await Promise.all([ ... ])` by limiting the max\n * concurrency of the array of function invocations.\n *\n * If any single task fails (eg, returns a rejected Promise), the pool will drain\n * any remaining active tasks and reject the resulting Promsie.\n *\n * @param {Array<async Function(Void) => Any>} thunks\n * @param {Number?} concurrency Max concurrency (defaults to 5)\n *\n * @return {Promise<Array<Any>>}\n */\nasync function parallelMap (thunks, concurrency = 5) {\n  if (concurrency > 0) {\n    concurrency = Math.min(concurrency, thunks.length)\n  } else {\n    concurrency = thunks.length\n  }\n\n  let index = 0\n  let results = [ ]\n\n  await parallelPool(concurrency, async () => {\n    if (index < thunks.length) {\n      const currentIndex = index++\n      const thunk = thunks[currentIndex]\n      results[currentIndex] = await thunk.call(this)\n    }\n\n    return (index < thunks.length)\n  })\n\n  return results\n}\n\n/**\n * Executes a given async `task` multiple times in parallel with a guaranteed\n * max concurrency given by `size`.\n *\n * The task should be an async function which resolves to a boolean for whether\n * or not there are more tasks to process.\n *\n * If any single task fails (eg, returns a rejected Promise), the pool will drain\n * any remaining active tasks and reject the resulting Promsie.\n *\n * @param {Number} size\n * @param {async Function(Void) => Boolean} task\n *\n * @return {Promise<Void>}\n */\nasync function parallelPool (size, task) {\n  let done = false\n  let active = 0\n  let errors = [ ]\n\n  return new Promise((resolve, reject) => {\n    function poolIterator () {\n      while (active < size && !done) {\n        active++\n\n        task()\n          .then((more) => {\n            if (--active <= 0 && (done || !more)) {\n              if (errors.length > 0) {\n                // at least one task failed\n                return reject(new Error(errors))\n              } else {\n                // all tasks completed successfully\n                return resolve()\n              }\n            } else if (more) {\n              poolIterator()\n            } else {\n              done = true\n            }\n          })\n          .catch((err) => {\n            errors.push(err)\n            done = true\n\n            if (--active <= 0) {\n              return reject(new Error(errors))\n            } else {\n              // wait until all active tasks are drained before rejecting the\n              // final result (no new tasks will be started now that we're in\n              // this error state)\n            }\n          })\n      }\n    }\n\n    poolIterator()\n  })\n}\n\n\n//# sourceURL=webpack:///./node_modules/async-await-parallel/index.js?");

/***/ }),

/***/ "./node_modules/mkdirp/index.js":
/*!**************************************!*\
  !*** ./node_modules/mkdirp/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var path = __webpack_require__(/*! path */ \"path\");\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n\n\n//# sourceURL=webpack:///./node_modules/mkdirp/index.js?");

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";\n\n//# sourceURL=webpack:///./node_modules/moment/locale_sync_^\\.\\/.*$?");

/***/ }),

/***/ "./node_modules/moment/locale/af.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/af.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var af = moment.defineLocale('af', {\n        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiemParse: /vm|nm/i,\n        isPM : function (input) {\n            return /^nm$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Vandag om] LT',\n            nextDay : '[Môre om] LT',\n            nextWeek : 'dddd [om] LT',\n            lastDay : '[Gister om] LT',\n            lastWeek : '[Laas] dddd [om] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'oor %s',\n            past : '%s gelede',\n            s : '\\'n paar sekondes',\n            ss : '%d sekondes',\n            m : '\\'n minuut',\n            mm : '%d minute',\n            h : '\\'n uur',\n            hh : '%d ure',\n            d : '\\'n dag',\n            dd : '%d dae',\n            M : '\\'n maand',\n            MM : '%d maande',\n            y : '\\'n jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week : {\n            dow : 1, // Maandag is die eerste dag van die week.\n            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        }\n    });\n\n    return af;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/af.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ar-dz.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-dz.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var arDz = moment.defineLocale('ar-dz', {\n        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 4  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arDz;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ar-dz.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ar-kw.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-kw.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var arKw = moment.defineLocale('ar-kw', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arKw;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ar-kw.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ar-ly.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-ly.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '1',\n        '2': '2',\n        '3': '3',\n        '4': '4',\n        '5': '5',\n        '6': '6',\n        '7': '7',\n        '8': '8',\n        '9': '9',\n        '0': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    var arLy = moment.defineLocale('ar-ly', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arLy;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ar-ly.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ar-ma.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-ma.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var arMa = moment.defineLocale('ar-ma', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arMa;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ar-ma.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ar-sa.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-sa.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    };\n\n    var arSa = moment.defineLocale('ar-sa', {\n        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            ss : '%d ثانية',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return arSa;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ar-sa.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ar-tn.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ar-tn.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var arTn = moment.defineLocale('ar-tn', {\n        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss : '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات'\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return arTn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ar-tn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ar.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ar.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'يناير',\n        'فبراير',\n        'مارس',\n        'أبريل',\n        'مايو',\n        'يونيو',\n        'يوليو',\n        'أغسطس',\n        'سبتمبر',\n        'أكتوبر',\n        'نوفمبر',\n        'ديسمبر'\n    ];\n\n    var ar = moment.defineLocale('ar', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/\\u200FM/\\u200FYYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ص|م/,\n        isPM : function (input) {\n            return 'م' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            ss : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ar;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ar.js?");

/***/ }),

/***/ "./node_modules/moment/locale/az.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/az.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n        6: '-ncı',\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n        60: '-ıncı',\n        90: '-ıncı'\n    };\n\n    var az = moment.defineLocale('az', {\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[sabah saat] LT',\n            nextWeek : '[gələn həftə] dddd [saat] LT',\n            lastDay : '[dünən] LT',\n            lastWeek : '[keçən həftə] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s əvvəl',\n            s : 'birneçə saniyə',\n            ss : '%d saniyə',\n            m : 'bir dəqiqə',\n            mm : '%d dəqiqə',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir il',\n            yy : '%d il'\n        },\n        meridiemParse: /gecə|səhər|gündüz|axşam/,\n        isPM : function (input) {\n            return /^(gündüz|axşam)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return az;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/az.js?");

/***/ }),

/***/ "./node_modules/moment/locale/be.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/be.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            'dd': 'дзень_дні_дзён',\n            'MM': 'месяц_месяцы_месяцаў',\n            'yy': 'год_гады_гадоў'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    var be = moment.defineLocale('be', {\n        months : {\n            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')\n        },\n        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays : {\n            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n            isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY г., HH:mm'\n        },\n        calendar : {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[У мінулую] dddd [ў] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'праз %s',\n            past : '%s таму',\n            s : 'некалькі секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithPlural,\n            hh : relativeTimeWithPlural,\n            d : 'дзень',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночы|раніцы|дня|вечара/,\n        isPM : function (input) {\n            return /^(дня|вечара)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n                case 'D':\n                    return number + '-га';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return be;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/be.js?");

/***/ }),

/***/ "./node_modules/moment/locale/bg.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bg.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var bg = moment.defineLocale('bg', {\n        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Днес в] LT',\n            nextDay : '[Утре в] LT',\n            nextWeek : 'dddd [в] LT',\n            lastDay : '[Вчера в] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[В изминалата] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[В изминалия] dddd [в] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'след %s',\n            past : 'преди %s',\n            s : 'няколко секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дни',\n            M : 'месец',\n            MM : '%d месеца',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return bg;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/bg.js?");

/***/ }),

/***/ "./node_modules/moment/locale/bm.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bm.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var bm = moment.defineLocale('bm', {\n        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),\n        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'MMMM [tile] D [san] YYYY',\n            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bi lɛrɛ] LT',\n            nextDay : '[Sini lɛrɛ] LT',\n            nextWeek : 'dddd [don lɛrɛ] LT',\n            lastDay : '[Kunu lɛrɛ] LT',\n            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s kɔnɔ',\n            past : 'a bɛ %s bɔ',\n            s : 'sanga dama dama',\n            ss : 'sekondi %d',\n            m : 'miniti kelen',\n            mm : 'miniti %d',\n            h : 'lɛrɛ kelen',\n            hh : 'lɛrɛ %d',\n            d : 'tile kelen',\n            dd : 'tile %d',\n            M : 'kalo kelen',\n            MM : 'kalo %d',\n            y : 'san kelen',\n            yy : 'san %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return bm;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/bm.js?");

/***/ }),

/***/ "./node_modules/moment/locale/bn.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bn.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '১',\n        '2': '২',\n        '3': '৩',\n        '4': '৪',\n        '5': '৫',\n        '6': '৬',\n        '7': '৭',\n        '8': '৮',\n        '9': '৯',\n        '0': '০'\n    },\n    numberMap = {\n        '১': '1',\n        '২': '2',\n        '৩': '3',\n        '৪': '4',\n        '৫': '5',\n        '৬': '6',\n        '৭': '7',\n        '৮': '8',\n        '৯': '9',\n        '০': '0'\n    };\n\n    var bn = moment.defineLocale('bn', {\n        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm সময়',\n            LTS : 'A h:mm:ss সময়',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm সময়',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'\n        },\n        calendar : {\n            sameDay : '[আজ] LT',\n            nextDay : '[আগামীকাল] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[গতকাল] LT',\n            lastWeek : '[গত] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s পরে',\n            past : '%s আগে',\n            s : 'কয়েক সেকেন্ড',\n            ss : '%d সেকেন্ড',\n            m : 'এক মিনিট',\n            mm : '%d মিনিট',\n            h : 'এক ঘন্টা',\n            hh : '%d ঘন্টা',\n            d : 'এক দিন',\n            dd : '%d দিন',\n            M : 'এক মাস',\n            MM : '%d মাস',\n            y : 'এক বছর',\n            yy : '%d বছর'\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'রাত' && hour >= 4) ||\n                    (meridiem === 'দুপুর' && hour < 5) ||\n                    meridiem === 'বিকাল') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'সকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকাল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return bn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/bn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/bo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '༡',\n        '2': '༢',\n        '3': '༣',\n        '4': '༤',\n        '5': '༥',\n        '6': '༦',\n        '7': '༧',\n        '8': '༨',\n        '9': '༩',\n        '0': '༠'\n    },\n    numberMap = {\n        '༡': '1',\n        '༢': '2',\n        '༣': '3',\n        '༤': '4',\n        '༥': '5',\n        '༦': '6',\n        '༧': '7',\n        '༨': '8',\n        '༩': '9',\n        '༠': '0'\n    };\n\n    var bo = moment.defineLocale('bo', {\n        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[དི་རིང] LT',\n            nextDay : '[སང་ཉིན] LT',\n            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay : '[ཁ་སང] LT',\n            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ལ་',\n            past : '%s སྔན་ལ',\n            s : 'ལམ་སང',\n            ss : '%d སྐར་ཆ།',\n            m : 'སྐར་མ་གཅིག',\n            mm : '%d སྐར་མ',\n            h : 'ཆུ་ཚོད་གཅིག',\n            hh : '%d ཆུ་ཚོད',\n            d : 'ཉིན་གཅིག',\n            dd : '%d ཉིན་',\n            M : 'ཟླ་བ་གཅིག',\n            MM : '%d ཟླ་བ',\n            y : 'ལོ་གཅིག',\n            yy : '%d ལོ'\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||\n                    (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                    meridiem === 'དགོང་དག') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return bo;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/bo.js?");

/***/ }),

/***/ "./node_modules/moment/locale/br.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/br.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'munutenn',\n            'MM': 'miz',\n            'dd': 'devezh'\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n            case 1:\n            case 3:\n            case 4:\n            case 5:\n            case 9:\n                return number + ' bloaz';\n            default:\n                return number + ' vloaz';\n        }\n    }\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n    function softMutation(text) {\n        var mutationTable = {\n            'm': 'v',\n            'b': 'v',\n            'd': 'z'\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    var br = moment.defineLocale('br', {\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h[e]mm A',\n            LTS : 'h[e]mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [a viz] MMMM YYYY',\n            LLL : 'D [a viz] MMMM YYYY h[e]mm A',\n            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'\n        },\n        calendar : {\n            sameDay : '[Hiziv da] LT',\n            nextDay : '[Warc\\'hoazh da] LT',\n            nextWeek : 'dddd [da] LT',\n            lastDay : '[Dec\\'h da] LT',\n            lastWeek : 'dddd [paset da] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'a-benn %s',\n            past : '%s \\'zo',\n            s : 'un nebeud segondennoù',\n            ss : '%d eilenn',\n            m : 'ur vunutenn',\n            mm : relativeTimeWithMutation,\n            h : 'un eur',\n            hh : '%d eur',\n            d : 'un devezh',\n            dd : relativeTimeWithMutation,\n            M : 'ur miz',\n            MM : relativeTimeWithMutation,\n            y : 'ur bloaz',\n            yy : specialMutationForYears\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal : function (number) {\n            var output = (number === 1) ? 'añ' : 'vet';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return br;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/br.js?");

/***/ }),

/***/ "./node_modules/moment/locale/bs.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/bs.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var bs = moment.defineLocale('bs', {\n        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return bs;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/bs.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ca.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ca.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ca = moment.defineLocale('ca', {\n        months : {\n            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n            format: 'de gener_de febrer_de març_d\\'abril_de maig_de juny_de juliol_d\\'agost_de setembre_d\\'octubre_de novembre_de desembre'.split('_'),\n            isFormat: /D[oD]?(\\s)+MMMM/\n        },\n        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [de] YYYY',\n            ll : 'D MMM YYYY',\n            LLL : 'D MMMM [de] YYYY [a les] H:mm',\n            lll : 'D MMM YYYY, H:mm',\n            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',\n            llll : 'ddd D MMM YYYY, H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextDay : function () {\n                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastDay : function () {\n                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'd\\'aquí %s',\n            past : 'fa %s',\n            s : 'uns segons',\n            ss : '%d segons',\n            m : 'un minut',\n            mm : '%d minuts',\n            h : 'una hora',\n            hh : '%d hores',\n            d : 'un dia',\n            dd : '%d dies',\n            M : 'un mes',\n            MM : '%d mesos',\n            y : 'un any',\n            yy : '%d anys'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal : function (number, period) {\n            var output = (number === 1) ? 'r' :\n                (number === 2) ? 'n' :\n                (number === 3) ? 'r' :\n                (number === 4) ? 't' : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ca;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ca.js?");

/***/ }),

/***/ "./node_modules/moment/locale/cs.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/cs.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n    function plural(n) {\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n                break;\n        }\n    }\n\n    var cs = moment.defineLocale('cs', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParse : (function (months, monthsShort) {\n            var i, _monthsParse = [];\n            for (i = 0; i < 12; i++) {\n                // use custom parser to solve problem with July (červenec)\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n            }\n            return _monthsParse;\n        }(months, monthsShort)),\n        shortMonthsParse : (function (monthsShort) {\n            var i, _shortMonthsParse = [];\n            for (i = 0; i < 12; i++) {\n                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n            }\n            return _shortMonthsParse;\n        }(monthsShort)),\n        longMonthsParse : (function (months) {\n            var i, _longMonthsParse = [];\n            for (i = 0; i < 12; i++) {\n                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n            }\n            return _longMonthsParse;\n        }(months)),\n        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm',\n            l : 'D. M. YYYY'\n        },\n        calendar : {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'před %s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return cs;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/cs.js?");

/***/ }),

/***/ "./node_modules/moment/locale/cv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/cv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var cv = moment.defineLocale('cv', {\n        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),\n        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),\n        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'\n        },\n        calendar : {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ӗнер] LT [сехетре]',\n            nextWeek: '[Ҫитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (output) {\n                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';\n                return output + affix;\n            },\n            past : '%s каялла',\n            s : 'пӗр-ик ҫеккунт',\n            ss : '%d ҫеккунт',\n            m : 'пӗр минут',\n            mm : '%d минут',\n            h : 'пӗр сехет',\n            hh : '%d сехет',\n            d : 'пӗр кун',\n            dd : '%d кун',\n            M : 'пӗр уйӑх',\n            MM : '%d уйӑх',\n            y : 'пӗр ҫул',\n            yy : '%d ҫул'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n        ordinal : '%d-мӗш',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return cv;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/cv.js?");

/***/ }),

/***/ "./node_modules/moment/locale/cy.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/cy.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var cy = moment.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        weekdaysParseExact : true,\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            ss: '%d eiliad',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n                ];\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return cy;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/cy.js?");

/***/ }),

/***/ "./node_modules/moment/locale/da.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/da.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var da = moment.defineLocale('da', {\n        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay : '[i dag kl.] LT',\n            nextDay : '[i morgen kl.] LT',\n            nextWeek : 'på dddd [kl.] LT',\n            lastDay : '[i går kl.] LT',\n            lastWeek : '[i] dddd[s kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'få sekunder',\n            ss : '%d sekunder',\n            m : 'et minut',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dage',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'et år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return da;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/da.js?");

/***/ }),

/***/ "./node_modules/moment/locale/de-at.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/de-at.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var deAt = moment.defineLocale('de-at', {\n        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return deAt;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/de-at.js?");

/***/ }),

/***/ "./node_modules/moment/locale/de-ch.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/de-ch.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var deCh = moment.defineLocale('de-ch', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return deCh;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/de-ch.js?");

/***/ }),

/***/ "./node_modules/moment/locale/de.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/de.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var de = moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY HH:mm',\n            LLLL : 'dddd, D. MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            ss : '%d Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return de;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/de.js?");

/***/ }),

/***/ "./node_modules/moment/locale/dv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/dv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'ޖެނުއަރީ',\n        'ފެބްރުއަރީ',\n        'މާރިޗު',\n        'އޭޕްރީލު',\n        'މޭ',\n        'ޖޫން',\n        'ޖުލައި',\n        'އޯގަސްޓު',\n        'ސެޕްޓެމްބަރު',\n        'އޮކްޓޯބަރު',\n        'ނޮވެމްބަރު',\n        'ޑިސެމްބަރު'\n    ], weekdays = [\n        'އާދިއްތަ',\n        'ހޯމަ',\n        'އަންގާރަ',\n        'ބުދަ',\n        'ބުރާސްފަތި',\n        'ހުކުރު',\n        'ހޮނިހިރު'\n    ];\n\n    var dv = moment.defineLocale('dv', {\n        months : months,\n        monthsShort : months,\n        weekdays : weekdays,\n        weekdaysShort : weekdays,\n        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n        longDateFormat : {\n\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'D/M/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /މކ|މފ/,\n        isPM : function (input) {\n            return 'މފ' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'މކ';\n            } else {\n                return 'މފ';\n            }\n        },\n        calendar : {\n            sameDay : '[މިއަދު] LT',\n            nextDay : '[މާދަމާ] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[އިއްޔެ] LT',\n            lastWeek : '[ފާއިތުވި] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ތެރޭގައި %s',\n            past : 'ކުރިން %s',\n            s : 'ސިކުންތުކޮޅެއް',\n            ss : 'd% ސިކުންތު',\n            m : 'މިނިޓެއް',\n            mm : 'މިނިޓު %d',\n            h : 'ގަޑިއިރެއް',\n            hh : 'ގަޑިއިރު %d',\n            d : 'ދުވަހެއް',\n            dd : 'ދުވަސް %d',\n            M : 'މަހެއް',\n            MM : 'މަސް %d',\n            y : 'އަހަރެއް',\n            yy : 'އަހަރު %d'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 7,  // Sunday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return dv;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/dv.js?");

/***/ }),

/***/ "./node_modules/moment/locale/el.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/el.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n\n    var el = moment.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            ss : '%d δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n\n    return el;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/el.js?");

/***/ }),

/***/ "./node_modules/moment/locale/en-au.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-au.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var enAu = moment.defineLocale('en-au', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enAu;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/en-au.js?");

/***/ }),

/***/ "./node_modules/moment/locale/en-ca.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-ca.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var enCa = moment.defineLocale('en-ca', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'YYYY-MM-DD',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY h:mm A',\n            LLLL : 'dddd, MMMM D, YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    return enCa;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/en-ca.js?");

/***/ }),

/***/ "./node_modules/moment/locale/en-gb.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-gb.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var enGb = moment.defineLocale('en-gb', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enGb;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/en-gb.js?");

/***/ }),

/***/ "./node_modules/moment/locale/en-ie.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-ie.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var enIe = moment.defineLocale('en-ie', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enIe;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/en-ie.js?");

/***/ }),

/***/ "./node_modules/moment/locale/en-il.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-il.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var enIl = moment.defineLocale('en-il', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    return enIl;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/en-il.js?");

/***/ }),

/***/ "./node_modules/moment/locale/en-nz.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/en-nz.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var enNz = moment.defineLocale('en-nz', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            ss : '%d seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return enNz;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/en-nz.js?");

/***/ }),

/***/ "./node_modules/moment/locale/eo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/eo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var eo = moment.defineLocale('eo', {\n        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D[-a de] MMMM, YYYY',\n            LLL : 'D[-a de] MMMM, YYYY HH:mm',\n            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'\n        },\n        meridiemParse: /[ap]\\.t\\.m/i,\n        isPM: function (input) {\n            return input.charAt(0).toLowerCase() === 'p';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar : {\n            sameDay : '[Hodiaŭ je] LT',\n            nextDay : '[Morgaŭ je] LT',\n            nextWeek : 'dddd [je] LT',\n            lastDay : '[Hieraŭ je] LT',\n            lastWeek : '[pasinta] dddd [je] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'post %s',\n            past : 'antaŭ %s',\n            s : 'sekundoj',\n            ss : '%d sekundoj',\n            m : 'minuto',\n            mm : '%d minutoj',\n            h : 'horo',\n            hh : '%d horoj',\n            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n            dd : '%d tagoj',\n            M : 'monato',\n            MM : '%d monatoj',\n            y : 'jaro',\n            yy : '%d jaroj'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}a/,\n        ordinal : '%da',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return eo;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/eo.js?");

/***/ }),

/***/ "./node_modules/moment/locale/es-do.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/es-do.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var esDo = moment.defineLocale('es-do', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return esDo;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/es-do.js?");

/***/ }),

/***/ "./node_modules/moment/locale/es-us.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/es-us.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var esUs = moment.defineLocale('es-us', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsParseExact : true,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM [de] D [de] YYYY',\n            LLL : 'MMMM [de] D [de] YYYY h:mm A',\n            LLLL : 'dddd, MMMM [de] D [de] YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return esUs;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/es-us.js?");

/***/ }),

/***/ "./node_modules/moment/locale/es.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/es.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    var es = moment.defineLocale('es', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex : monthsRegex,\n        monthsShortRegex : monthsRegex,\n        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex : /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return es;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/es.js?");

/***/ }),

/***/ "./node_modules/moment/locale/et.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/et.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            'ss': [number + 'sekundi', number + 'sekundit'],\n            'm' : ['ühe minuti', 'üks minut'],\n            'mm': [number + ' minuti', number + ' minutit'],\n            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n            'hh': [number + ' tunni', number + ' tundi'],\n            'd' : ['ühe päeva', 'üks päev'],\n            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n            'MM': [number + ' kuu', number + ' kuud'],\n            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n            'yy': [number + ' aasta', number + ' aastat']\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    var et = moment.defineLocale('et', {\n        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat : {\n            LT   : 'H:mm',\n            LTS : 'H:mm:ss',\n            L    : 'DD.MM.YYYY',\n            LL   : 'D. MMMM YYYY',\n            LLL  : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[Täna,] LT',\n            nextDay  : '[Homme,] LT',\n            nextWeek : '[Järgmine] dddd LT',\n            lastDay  : '[Eile,] LT',\n            lastWeek : '[Eelmine] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s pärast',\n            past   : '%s tagasi',\n            s      : processRelativeTime,\n            ss     : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : '%d päeva',\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return et;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/et.js?");

/***/ }),

/***/ "./node_modules/moment/locale/eu.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/eu.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var eu = moment.defineLocale('eu', {\n        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY[ko] MMMM[ren] D[a]',\n            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n            l : 'YYYY-M-D',\n            ll : 'YYYY[ko] MMM D[a]',\n            lll : 'YYYY[ko] MMM D[a] HH:mm',\n            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'\n        },\n        calendar : {\n            sameDay : '[gaur] LT[etan]',\n            nextDay : '[bihar] LT[etan]',\n            nextWeek : 'dddd LT[etan]',\n            lastDay : '[atzo] LT[etan]',\n            lastWeek : '[aurreko] dddd LT[etan]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s barru',\n            past : 'duela %s',\n            s : 'segundo batzuk',\n            ss : '%d segundo',\n            m : 'minutu bat',\n            mm : '%d minutu',\n            h : 'ordu bat',\n            hh : '%d ordu',\n            d : 'egun bat',\n            dd : '%d egun',\n            M : 'hilabete bat',\n            MM : '%d hilabete',\n            y : 'urte bat',\n            yy : '%d urte'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return eu;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/eu.js?");

/***/ }),

/***/ "./node_modules/moment/locale/fa.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fa.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '۱',\n        '2': '۲',\n        '3': '۳',\n        '4': '۴',\n        '5': '۵',\n        '6': '۶',\n        '7': '۷',\n        '8': '۸',\n        '9': '۹',\n        '0': '۰'\n    }, numberMap = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0'\n    };\n\n    var fa = moment.defineLocale('fa', {\n        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /قبل از ظهر|بعد از ظهر/,\n        isPM: function (input) {\n            return /بعد از ظهر/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar : {\n            sameDay : '[امروز ساعت] LT',\n            nextDay : '[فردا ساعت] LT',\n            nextWeek : 'dddd [ساعت] LT',\n            lastDay : '[دیروز ساعت] LT',\n            lastWeek : 'dddd [پیش] [ساعت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'در %s',\n            past : '%s پیش',\n            s : 'چند ثانیه',\n            ss : 'ثانیه d%',\n            m : 'یک دقیقه',\n            mm : '%d دقیقه',\n            h : 'یک ساعت',\n            hh : '%d ساعت',\n            d : 'یک روز',\n            dd : '%d روز',\n            M : 'یک ماه',\n            MM : '%d ماه',\n            y : 'یک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/[۰-۹]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}م/,\n        ordinal : '%dم',\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return fa;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/fa.js?");

/***/ }),

/***/ "./node_modules/moment/locale/fi.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fi.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n        numbersFuture = [\n            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n            numbersPast[7], numbersPast[8], numbersPast[9]\n        ];\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n            case 's':\n                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n            case 'ss':\n                return isFuture ? 'sekunnin' : 'sekuntia';\n            case 'm':\n                return isFuture ? 'minuutin' : 'minuutti';\n            case 'mm':\n                result = isFuture ? 'minuutin' : 'minuuttia';\n                break;\n            case 'h':\n                return isFuture ? 'tunnin' : 'tunti';\n            case 'hh':\n                result = isFuture ? 'tunnin' : 'tuntia';\n                break;\n            case 'd':\n                return isFuture ? 'päivän' : 'päivä';\n            case 'dd':\n                result = isFuture ? 'päivän' : 'päivää';\n                break;\n            case 'M':\n                return isFuture ? 'kuukauden' : 'kuukausi';\n            case 'MM':\n                result = isFuture ? 'kuukauden' : 'kuukautta';\n                break;\n            case 'y':\n                return isFuture ? 'vuoden' : 'vuosi';\n            case 'yy':\n                result = isFuture ? 'vuoden' : 'vuotta';\n                break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n    function verbalNumber(number, isFuture) {\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n    }\n\n    var fi = moment.defineLocale('fi', {\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'Do MMMM[ta] YYYY',\n            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n            l : 'D.M.YYYY',\n            ll : 'Do MMM YYYY',\n            lll : 'Do MMM YYYY, [klo] HH.mm',\n            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'\n        },\n        calendar : {\n            sameDay : '[tänään] [klo] LT',\n            nextDay : '[huomenna] [klo] LT',\n            nextWeek : 'dddd [klo] LT',\n            lastDay : '[eilen] [klo] LT',\n            lastWeek : '[viime] dddd[na] [klo] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s päästä',\n            past : '%s sitten',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fi;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/fi.js?");

/***/ }),

/***/ "./node_modules/moment/locale/fo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var fo = moment.defineLocale('fo', {\n        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D. MMMM, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Í dag kl.] LT',\n            nextDay : '[Í morgin kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[Í gjár kl.] LT',\n            lastWeek : '[síðstu] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'um %s',\n            past : '%s síðani',\n            s : 'fá sekund',\n            ss : '%d sekundir',\n            m : 'ein minutt',\n            mm : '%d minuttir',\n            h : 'ein tími',\n            hh : '%d tímar',\n            d : 'ein dagur',\n            dd : '%d dagar',\n            M : 'ein mánaði',\n            MM : '%d mánaðir',\n            y : 'eitt ár',\n            yy : '%d ár'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fo;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/fo.js?");

/***/ }),

/***/ "./node_modules/moment/locale/fr-ca.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/fr-ca.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var frCa = moment.defineLocale('fr-ca', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        }\n    });\n\n    return frCa;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/fr-ca.js?");

/***/ }),

/***/ "./node_modules/moment/locale/fr-ch.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/fr-ch.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var frCh = moment.defineLocale('fr-ch', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return frCh;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/fr-ch.js?");

/***/ }),

/***/ "./node_modules/moment/locale/fr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var fr = moment.defineLocale('fr', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Aujourd’hui à] LT',\n            nextDay : '[Demain à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[Hier à] LT',\n            lastWeek : 'dddd [dernier à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            ss : '%d secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // TODO: Return 'e' when day of month > 1. Move this case inside\n                // block for masculine words below.\n                // See https://github.com/moment/moment/issues/3375\n                case 'D':\n                    return number + (number === 1 ? 'er' : '');\n\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fr;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/fr.js?");

/***/ }),

/***/ "./node_modules/moment/locale/fy.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/fy.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\n    var fy = moment.defineLocale('fy', {\n        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        monthsParseExact : true,\n        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),\n        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),\n        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[hjoed om] LT',\n            nextDay: '[moarn om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[juster om] LT',\n            lastWeek: '[ôfrûne] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'oer %s',\n            past : '%s lyn',\n            s : 'in pear sekonden',\n            ss : '%d sekonden',\n            m : 'ien minút',\n            mm : '%d minuten',\n            h : 'ien oere',\n            hh : '%d oeren',\n            d : 'ien dei',\n            dd : '%d dagen',\n            M : 'ien moanne',\n            MM : '%d moannen',\n            y : 'ien jier',\n            yy : '%d jierren'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return fy;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/fy.js?");

/***/ }),

/***/ "./node_modules/moment/locale/gd.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/gd.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'\n    ];\n\n    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];\n\n    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];\n\n    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];\n\n    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\n    var gd = moment.defineLocale('gd', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParseExact : true,\n        weekdays : weekdays,\n        weekdaysShort : weekdaysShort,\n        weekdaysMin : weekdaysMin,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[An-diugh aig] LT',\n            nextDay : '[A-màireach aig] LT',\n            nextWeek : 'dddd [aig] LT',\n            lastDay : '[An-dè aig] LT',\n            lastWeek : 'dddd [seo chaidh] [aig] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ann an %s',\n            past : 'bho chionn %s',\n            s : 'beagan diogan',\n            ss : '%d diogan',\n            m : 'mionaid',\n            mm : '%d mionaidean',\n            h : 'uair',\n            hh : '%d uairean',\n            d : 'latha',\n            dd : '%d latha',\n            M : 'mìos',\n            MM : '%d mìosan',\n            y : 'bliadhna',\n            yy : '%d bliadhna'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(d|na|mh)/,\n        ordinal : function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return gd;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/gd.js?");

/***/ }),

/***/ "./node_modules/moment/locale/gl.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/gl.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var gl = moment.defineLocale('gl', {\n        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY H:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            lastDay : function () {\n                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n            },\n            lastWeek : function () {\n                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (str) {\n                if (str.indexOf('un') === 0) {\n                    return 'n' + str;\n                }\n                return 'en ' + str;\n            },\n            past : 'hai %s',\n            s : 'uns segundos',\n            ss : '%d segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'unha hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return gl;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/gl.js?");

/***/ }),

/***/ "./node_modules/moment/locale/gom-latn.js":
/*!************************************************!*\
  !*** ./node_modules/moment/locale/gom-latn.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['thodde secondanim', 'thodde second'],\n            'ss': [number + ' secondanim', number + ' second'],\n            'm': ['eka mintan', 'ek minute'],\n            'mm': [number + ' mintanim', number + ' mintam'],\n            'h': ['eka horan', 'ek hor'],\n            'hh': [number + ' horanim', number + ' horam'],\n            'd': ['eka disan', 'ek dis'],\n            'dd': [number + ' disanim', number + ' dis'],\n            'M': ['eka mhoinean', 'ek mhoino'],\n            'MM': [number + ' mhoineanim', number + ' mhoine'],\n            'y': ['eka vorsan', 'ek voros'],\n            'yy': [number + ' vorsanim', number + ' vorsam']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    var gomLatn = moment.defineLocale('gom-latn', {\n        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\\'var'.split('_'),\n        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'A h:mm [vazta]',\n            LTS : 'A h:mm:ss [vazta]',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY A h:mm [vazta]',\n            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',\n            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'\n        },\n        calendar : {\n            sameDay: '[Aiz] LT',\n            nextDay: '[Faleam] LT',\n            nextWeek: '[Ieta to] dddd[,] LT',\n            lastDay: '[Kal] LT',\n            lastWeek: '[Fatlo] dddd[,] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s',\n            past : '%s adim',\n            s : processRelativeTime,\n            ss : processRelativeTime,\n            m : processRelativeTime,\n            mm : processRelativeTime,\n            h : processRelativeTime,\n            hh : processRelativeTime,\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(er)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                // the ordinal 'er' only applies to day of the month\n                case 'D':\n                    return number + 'er';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        },\n        meridiemParse: /rati|sokalli|donparam|sanje/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'rati') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'sokalli') {\n                return hour;\n            } else if (meridiem === 'donparam') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'sanje') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'rati';\n            } else if (hour < 12) {\n                return 'sokalli';\n            } else if (hour < 16) {\n                return 'donparam';\n            } else if (hour < 20) {\n                return 'sanje';\n            } else {\n                return 'rati';\n            }\n        }\n    });\n\n    return gomLatn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/gom-latn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/gu.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/gu.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n            '1': '૧',\n            '2': '૨',\n            '3': '૩',\n            '4': '૪',\n            '5': '૫',\n            '6': '૬',\n            '7': '૭',\n            '8': '૮',\n            '9': '૯',\n            '0': '૦'\n        },\n        numberMap = {\n            '૧': '1',\n            '૨': '2',\n            '૩': '3',\n            '૪': '4',\n            '૫': '5',\n            '૬': '6',\n            '૭': '7',\n            '૮': '8',\n            '૯': '9',\n            '૦': '0'\n        };\n\n    var gu = moment.defineLocale('gu', {\n        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),\n        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),\n        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm વાગ્યે',\n            LTS: 'A h:mm:ss વાગ્યે',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'\n        },\n        calendar: {\n            sameDay: '[આજ] LT',\n            nextDay: '[કાલે] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ગઇકાલે] LT',\n            lastWeek: '[પાછલા] dddd, LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s મા',\n            past: '%s પેહલા',\n            s: 'અમુક પળો',\n            ss: '%d સેકંડ',\n            m: 'એક મિનિટ',\n            mm: '%d મિનિટ',\n            h: 'એક કલાક',\n            hh: '%d કલાક',\n            d: 'એક દિવસ',\n            dd: '%d દિવસ',\n            M: 'એક મહિનો',\n            MM: '%d મહિનો',\n            y: 'એક વર્ષ',\n            yy: '%d વર્ષ'\n        },\n        preparse: function (string) {\n            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'રાત') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'સવાર') {\n                return hour;\n            } else if (meridiem === 'બપોર') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'સાંજ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'રાત';\n            } else if (hour < 10) {\n                return 'સવાર';\n            } else if (hour < 17) {\n                return 'બપોર';\n            } else if (hour < 20) {\n                return 'સાંજ';\n            } else {\n                return 'રાત';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return gu;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/gu.js?");

/***/ }),

/***/ "./node_modules/moment/locale/he.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/he.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var he = moment.defineLocale('he', {\n        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [ב]MMMM YYYY',\n            LLL : 'D [ב]MMMM YYYY HH:mm',\n            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',\n            l : 'D/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[היום ב־]LT',\n            nextDay : '[מחר ב־]LT',\n            nextWeek : 'dddd [בשעה] LT',\n            lastDay : '[אתמול ב־]LT',\n            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'בעוד %s',\n            past : 'לפני %s',\n            s : 'מספר שניות',\n            ss : '%d שניות',\n            m : 'דקה',\n            mm : '%d דקות',\n            h : 'שעה',\n            hh : function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d : 'יום',\n            dd : function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M : 'חודש',\n            MM : function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y : 'שנה',\n            yy : function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                } else if (number % 10 === 0 && number !== 10) {\n                    return number + ' שנה';\n                }\n                return number + ' שנים';\n            }\n        },\n        meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n        isPM : function (input) {\n            return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 5) {\n                return 'לפנות בוקר';\n            } else if (hour < 10) {\n                return 'בבוקר';\n            } else if (hour < 12) {\n                return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n            } else if (hour < 18) {\n                return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n            } else {\n                return 'בערב';\n            }\n        }\n    });\n\n    return he;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/he.js?");

/***/ }),

/***/ "./node_modules/moment/locale/hi.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/hi.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    var hi = moment.defineLocale('hi', {\n        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm बजे',\n            LTS : 'A h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[कल] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[कल] LT',\n            lastWeek : '[पिछले] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s में',\n            past : '%s पहले',\n            s : 'कुछ ही क्षण',\n            ss : '%d सेकंड',\n            m : 'एक मिनट',\n            mm : '%d मिनट',\n            h : 'एक घंटा',\n            hh : '%d घंटे',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महीने',\n            MM : '%d महीने',\n            y : 'एक वर्ष',\n            yy : '%d वर्ष'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiemParse: /रात|सुबह|दोपहर|शाम/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सुबह') {\n                return hour;\n            } else if (meridiem === 'दोपहर') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'शाम') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return hi;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/hi.js?");

/***/ }),

/***/ "./node_modules/moment/locale/hr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/hr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var hr = moment.defineLocale('hr', {\n        months : {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),\n            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')\n        },\n        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            ss     : translate,\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return hr;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/hr.js?");

/***/ }),

/***/ "./node_modules/moment/locale/hu.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/hu.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n    function translate(number, withoutSuffix, key, isFuture) {\n        var num = number;\n        switch (key) {\n            case 's':\n                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n            case 'ss':\n                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';\n            case 'm':\n                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'mm':\n                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'h':\n                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'hh':\n                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'd':\n                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'dd':\n                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'M':\n                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'MM':\n                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'y':\n                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n            case 'yy':\n                return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n        return '';\n    }\n    function week(isFuture) {\n        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n    }\n\n    var hu = moment.defineLocale('hu', {\n        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY. MMMM D.',\n            LLL : 'YYYY. MMMM D. H:mm',\n            LLLL : 'YYYY. MMMM D., dddd H:mm'\n        },\n        meridiemParse: /de|du/i,\n        isPM: function (input) {\n            return input.charAt(1).toLowerCase() === 'u';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar : {\n            sameDay : '[ma] LT[-kor]',\n            nextDay : '[holnap] LT[-kor]',\n            nextWeek : function () {\n                return week.call(this, true);\n            },\n            lastDay : '[tegnap] LT[-kor]',\n            lastWeek : function () {\n                return week.call(this, false);\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s múlva',\n            past : '%s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return hu;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/hu.js?");

/***/ }),

/***/ "./node_modules/moment/locale/hy-am.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/hy-am.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var hyAm = moment.defineLocale('hy-am', {\n        months : {\n            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),\n            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')\n        },\n        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),\n        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY թ.',\n            LLL : 'D MMMM YYYY թ., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'\n        },\n        calendar : {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s հետո',\n            past : '%s առաջ',\n            s : 'մի քանի վայրկյան',\n            ss : '%d վայրկյան',\n            m : 'րոպե',\n            mm : '%d րոպե',\n            h : 'ժամ',\n            hh : '%d ժամ',\n            d : 'օր',\n            dd : '%d օր',\n            M : 'ամիս',\n            MM : '%d ամիս',\n            y : 'տարի',\n            yy : '%d տարի'\n        },\n        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n        isPM: function (input) {\n            return /^(ցերեկվա|երեկոյան)$/.test(input);\n        },\n        meridiem : function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'DDD':\n                case 'w':\n                case 'W':\n                case 'DDDo':\n                    if (number === 1) {\n                        return number + '-ին';\n                    }\n                    return number + '-րդ';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return hyAm;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/hy-am.js?");

/***/ }),

/***/ "./node_modules/moment/locale/id.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/id.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var id = moment.defineLocale('id', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Besok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kemarin pukul] LT',\n            lastWeek : 'dddd [lalu pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lalu',\n            s : 'beberapa detik',\n            ss : '%d detik',\n            m : 'semenit',\n            mm : '%d menit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return id;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/id.js?");

/***/ }),

/***/ "./node_modules/moment/locale/is.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/is.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n            case 'ss':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');\n                }\n                return result + 'sekúnda';\n            case 'm':\n                return withoutSuffix ? 'mínúta' : 'mínútu';\n            case 'mm':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n                } else if (withoutSuffix) {\n                    return result + 'mínúta';\n                }\n                return result + 'mínútu';\n            case 'hh':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n                }\n                return result + 'klukkustund';\n            case 'd':\n                if (withoutSuffix) {\n                    return 'dagur';\n                }\n                return isFuture ? 'dag' : 'degi';\n            case 'dd':\n                if (plural(number)) {\n                    if (withoutSuffix) {\n                        return result + 'dagar';\n                    }\n                    return result + (isFuture ? 'daga' : 'dögum');\n                } else if (withoutSuffix) {\n                    return result + 'dagur';\n                }\n                return result + (isFuture ? 'dag' : 'degi');\n            case 'M':\n                if (withoutSuffix) {\n                    return 'mánuður';\n                }\n                return isFuture ? 'mánuð' : 'mánuði';\n            case 'MM':\n                if (plural(number)) {\n                    if (withoutSuffix) {\n                        return result + 'mánuðir';\n                    }\n                    return result + (isFuture ? 'mánuði' : 'mánuðum');\n                } else if (withoutSuffix) {\n                    return result + 'mánuður';\n                }\n                return result + (isFuture ? 'mánuð' : 'mánuði');\n            case 'y':\n                return withoutSuffix || isFuture ? 'ár' : 'ári';\n            case 'yy':\n                if (plural(number)) {\n                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n                }\n                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    var is = moment.defineLocale('is', {\n        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'\n        },\n        calendar : {\n            sameDay : '[í dag kl.] LT',\n            nextDay : '[á morgun kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[í gær kl.] LT',\n            lastWeek : '[síðasta] dddd [kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'eftir %s',\n            past : 'fyrir %s síðan',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : 'klukkustund',\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return is;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/is.js?");

/***/ }),

/***/ "./node_modules/moment/locale/it.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/it.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var it = moment.defineLocale('it', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            ss : '%d secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return it;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/it.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ja.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ja.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ja = moment.defineLocale('ja', {\n        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日 dddd HH:mm',\n            l : 'YYYY/MM/DD',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日(ddd) HH:mm'\n        },\n        meridiemParse: /午前|午後/i,\n        isPM : function (input) {\n            return input === '午後';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar : {\n            sameDay : '[今日] LT',\n            nextDay : '[明日] LT',\n            nextWeek : function (now) {\n                if (now.week() < this.week()) {\n                    return '[来週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            lastDay : '[昨日] LT',\n            lastWeek : function (now) {\n                if (this.week() < now.week()) {\n                    return '[先週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}日/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s後',\n            past : '%s前',\n            s : '数秒',\n            ss : '%d秒',\n            m : '1分',\n            mm : '%d分',\n            h : '1時間',\n            hh : '%d時間',\n            d : '1日',\n            dd : '%d日',\n            M : '1ヶ月',\n            MM : '%dヶ月',\n            y : '1年',\n            yy : '%d年'\n        }\n    });\n\n    return ja;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ja.js?");

/***/ }),

/***/ "./node_modules/moment/locale/jv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/jv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var jv = moment.defineLocale('jv', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /enjing|siyang|sonten|ndalu/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'enjing') {\n                return hour;\n            } else if (meridiem === 'siyang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'enjing';\n            } else if (hours < 15) {\n                return 'siyang';\n            } else if (hours < 19) {\n                return 'sonten';\n            } else {\n                return 'ndalu';\n            }\n        },\n        calendar : {\n            sameDay : '[Dinten puniko pukul] LT',\n            nextDay : '[Mbenjang pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kala wingi pukul] LT',\n            lastWeek : 'dddd [kepengker pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'wonten ing %s',\n            past : '%s ingkang kepengker',\n            s : 'sawetawis detik',\n            ss : '%d detik',\n            m : 'setunggal menit',\n            mm : '%d menit',\n            h : 'setunggal jam',\n            hh : '%d jam',\n            d : 'sedinten',\n            dd : '%d dinten',\n            M : 'sewulan',\n            MM : '%d wulan',\n            y : 'setaun',\n            yy : '%d taun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return jv;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/jv.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ka.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ka.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ka = moment.defineLocale('ka', {\n        months : {\n            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n        },\n        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays : {\n            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n            isFormat: /(წინა|შემდეგ)/\n        },\n        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[დღეს] LT[-ზე]',\n            nextDay : '[ხვალ] LT[-ზე]',\n            lastDay : '[გუშინ] LT[-ზე]',\n            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n            lastWeek : '[წინა] dddd LT-ზე',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                    s.replace(/ი$/, 'ში') :\n                    s + 'ში';\n            },\n            past : function (s) {\n                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if ((/წელი/).test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n            },\n            s : 'რამდენიმე წამი',\n            ss : '%d წამი',\n            m : 'წუთი',\n            mm : '%d წუთი',\n            h : 'საათი',\n            hh : '%d საათი',\n            d : 'დღე',\n            dd : '%d დღე',\n            M : 'თვე',\n            MM : '%d თვე',\n            y : 'წელი',\n            yy : '%d წელი'\n        },\n        dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal : function (number) {\n            if (number === 0) {\n                return number;\n            }\n            if (number === 1) {\n                return number + '-ლი';\n            }\n            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n                return 'მე-' + number;\n            }\n            return number + '-ე';\n        },\n        week : {\n            dow : 1,\n            doy : 7\n        }\n    });\n\n    return ka;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ka.js?");

/***/ }),

/***/ "./node_modules/moment/locale/kk.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/kk.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-ші',\n        1: '-ші',\n        2: '-ші',\n        3: '-ші',\n        4: '-ші',\n        5: '-ші',\n        6: '-шы',\n        7: '-ші',\n        8: '-ші',\n        9: '-шы',\n        10: '-шы',\n        20: '-шы',\n        30: '-шы',\n        40: '-шы',\n        50: '-ші',\n        60: '-шы',\n        70: '-ші',\n        80: '-ші',\n        90: '-шы',\n        100: '-ші'\n    };\n\n    var kk = moment.defineLocale('kk', {\n        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгін сағат] LT',\n            nextDay : '[Ертең сағат] LT',\n            nextWeek : 'dddd [сағат] LT',\n            lastDay : '[Кеше сағат] LT',\n            lastWeek : '[Өткен аптаның] dddd [сағат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ішінде',\n            past : '%s бұрын',\n            s : 'бірнеше секунд',\n            ss : '%d секунд',\n            m : 'бір минут',\n            mm : '%d минут',\n            h : 'бір сағат',\n            hh : '%d сағат',\n            d : 'бір күн',\n            dd : '%d күн',\n            M : 'бір ай',\n            MM : '%d ай',\n            y : 'бір жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return kk;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/kk.js?");

/***/ }),

/***/ "./node_modules/moment/locale/km.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/km.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '១',\n        '2': '២',\n        '3': '៣',\n        '4': '៤',\n        '5': '៥',\n        '6': '៦',\n        '7': '៧',\n        '8': '៨',\n        '9': '៩',\n        '0': '០'\n    }, numberMap = {\n        '១': '1',\n        '២': '2',\n        '៣': '3',\n        '៤': '4',\n        '៥': '5',\n        '៦': '6',\n        '៧': '7',\n        '៨': '8',\n        '៩': '9',\n        '០': '0'\n    };\n\n    var km = moment.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ព្រឹក|ល្ងាច/,\n        isPM: function (input) {\n            return input === 'ល្ងាច';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ព្រឹក';\n            } else {\n                return 'ល្ងាច';\n            }\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            ss: '%d វិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ'\n        },\n        dayOfMonthOrdinalParse : /ទី\\d{1,2}/,\n        ordinal : 'ទី%d',\n        preparse: function (string) {\n            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return km;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/km.js?");

/***/ }),

/***/ "./node_modules/moment/locale/kn.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/kn.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '೧',\n        '2': '೨',\n        '3': '೩',\n        '4': '೪',\n        '5': '೫',\n        '6': '೬',\n        '7': '೭',\n        '8': '೮',\n        '9': '೯',\n        '0': '೦'\n    },\n    numberMap = {\n        '೧': '1',\n        '೨': '2',\n        '೩': '3',\n        '೪': '4',\n        '೫': '5',\n        '೬': '6',\n        '೭': '7',\n        '೮': '8',\n        '೯': '9',\n        '೦': '0'\n    };\n\n    var kn = moment.defineLocale('kn', {\n        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),\n        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),\n        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[ಇಂದು] LT',\n            nextDay : '[ನಾಳೆ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ನಿನ್ನೆ] LT',\n            lastWeek : '[ಕೊನೆಯ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ನಂತರ',\n            past : '%s ಹಿಂದೆ',\n            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',\n            ss : '%d ಸೆಕೆಂಡುಗಳು',\n            m : 'ಒಂದು ನಿಮಿಷ',\n            mm : '%d ನಿಮಿಷ',\n            h : 'ಒಂದು ಗಂಟೆ',\n            hh : '%d ಗಂಟೆ',\n            d : 'ಒಂದು ದಿನ',\n            dd : '%d ದಿನ',\n            M : 'ಒಂದು ತಿಂಗಳು',\n            MM : '%d ತಿಂಗಳು',\n            y : 'ಒಂದು ವರ್ಷ',\n            yy : '%d ವರ್ಷ'\n        },\n        preparse: function (string) {\n            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ರಾತ್ರಿ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n                return hour;\n            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ಸಂಜೆ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ರಾತ್ರಿ';\n            } else if (hour < 10) {\n                return 'ಬೆಳಿಗ್ಗೆ';\n            } else if (hour < 17) {\n                return 'ಮಧ್ಯಾಹ್ನ';\n            } else if (hour < 20) {\n                return 'ಸಂಜೆ';\n            } else {\n                return 'ರಾತ್ರಿ';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n        ordinal : function (number) {\n            return number + 'ನೇ';\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return kn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/kn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ko.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ko.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ko = moment.defineLocale('ko', {\n        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY년 MMMM D일',\n            LLL : 'YYYY년 MMMM D일 A h:mm',\n            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',\n            l : 'YYYY.MM.DD.',\n            ll : 'YYYY년 MMMM D일',\n            lll : 'YYYY년 MMMM D일 A h:mm',\n            llll : 'YYYY년 MMMM D일 dddd A h:mm'\n        },\n        calendar : {\n            sameDay : '오늘 LT',\n            nextDay : '내일 LT',\n            nextWeek : 'dddd LT',\n            lastDay : '어제 LT',\n            lastWeek : '지난주 dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s 후',\n            past : '%s 전',\n            s : '몇 초',\n            ss : '%d초',\n            m : '1분',\n            mm : '%d분',\n            h : '한 시간',\n            hh : '%d시간',\n            d : '하루',\n            dd : '%d일',\n            M : '한 달',\n            MM : '%d달',\n            y : '일 년',\n            yy : '%d년'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}(일|월|주)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse : /오전|오후/,\n        isPM : function (token) {\n            return token === '오후';\n        },\n        meridiem : function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        }\n    });\n\n    return ko;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ko.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ky.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ky.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-чү',\n        1: '-чи',\n        2: '-чи',\n        3: '-чү',\n        4: '-чү',\n        5: '-чи',\n        6: '-чы',\n        7: '-чи',\n        8: '-чи',\n        9: '-чу',\n        10: '-чу',\n        20: '-чы',\n        30: '-чу',\n        40: '-чы',\n        50: '-чү',\n        60: '-чы',\n        70: '-чи',\n        80: '-чи',\n        90: '-чу',\n        100: '-чү'\n    };\n\n    var ky = moment.defineLocale('ky', {\n        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),\n        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бүгүн саат] LT',\n            nextDay : '[Эртең саат] LT',\n            nextWeek : 'dddd [саат] LT',\n            lastDay : '[Кече саат] LT',\n            lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ичинде',\n            past : '%s мурун',\n            s : 'бирнече секунд',\n            ss : '%d секунд',\n            m : 'бир мүнөт',\n            mm : '%d мүнөт',\n            h : 'бир саат',\n            hh : '%d саат',\n            d : 'бир күн',\n            dd : '%d күн',\n            M : 'бир ай',\n            MM : '%d ай',\n            y : 'бир жыл',\n            yy : '%d жыл'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n        ordinal : function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ky;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ky.js?");

/***/ }),

/***/ "./node_modules/moment/locale/lb.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/lb.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eng Minutt', 'enger Minutt'],\n            'h': ['eng Stonn', 'enger Stonn'],\n            'd': ['een Dag', 'engem Dag'],\n            'M': ['ee Mount', 'engem Mount'],\n            'y': ['ee Joer', 'engem Joer']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10, firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    var lb = moment.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm [Auer]',\n            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            }\n        },\n        relativeTime : {\n            future : processFutureTime,\n            past : processPastTime,\n            s : 'e puer Sekonnen',\n            ss : '%d Sekonnen',\n            m : processRelativeTime,\n            mm : '%d Minutten',\n            h : processRelativeTime,\n            hh : '%d Stonnen',\n            d : processRelativeTime,\n            dd : '%d Deeg',\n            M : processRelativeTime,\n            MM : '%d Méint',\n            y : processRelativeTime,\n            yy : '%d Joer'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lb;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/lb.js?");

/***/ }),

/***/ "./node_modules/moment/locale/lo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/lo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var lo = moment.defineLocale('lo', {\n        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n        isPM: function (input) {\n            return input === 'ຕອນແລງ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ຕອນເຊົ້າ';\n            } else {\n                return 'ຕອນແລງ';\n            }\n        },\n        calendar : {\n            sameDay : '[ມື້ນີ້ເວລາ] LT',\n            nextDay : '[ມື້ອື່ນເວລາ] LT',\n            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',\n            lastDay : '[ມື້ວານນີ້ເວລາ] LT',\n            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ອີກ %s',\n            past : '%sຜ່ານມາ',\n            s : 'ບໍ່ເທົ່າໃດວິນາທີ',\n            ss : '%d ວິນາທີ' ,\n            m : '1 ນາທີ',\n            mm : '%d ນາທີ',\n            h : '1 ຊົ່ວໂມງ',\n            hh : '%d ຊົ່ວໂມງ',\n            d : '1 ມື້',\n            dd : '%d ມື້',\n            M : '1 ເດືອນ',\n            MM : '%d ເດືອນ',\n            y : '1 ປີ',\n            yy : '%d ປີ'\n        },\n        dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n        ordinal : function (number) {\n            return 'ທີ່' + number;\n        }\n    });\n\n    return lo;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/lo.js?");

/***/ }),

/***/ "./node_modules/moment/locale/lt.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/lt.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var units = {\n        'ss' : 'sekundė_sekundžių_sekundes',\n        'm' : 'minutė_minutės_minutę',\n        'mm': 'minutės_minučių_minutes',\n        'h' : 'valanda_valandos_valandą',\n        'hh': 'valandos_valandų_valandas',\n        'd' : 'diena_dienos_dieną',\n        'dd': 'dienos_dienų_dienas',\n        'M' : 'mėnuo_mėnesio_mėnesį',\n        'MM': 'mėnesiai_mėnesių_mėnesius',\n        'y' : 'metai_metų_metus',\n        'yy': 'metai_metų_metus'\n    };\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n    }\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n    function forms(key) {\n        return units[key].split('_');\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n    var lt = moment.defineLocale('lt', {\n        months : {\n            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n            isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n        },\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays : {\n            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n            isFormat: /dddd HH:mm/\n        },\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY [m.] MMMM D [d.]',\n            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY [m.] MMMM D [d.]',\n            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n        },\n        calendar : {\n            sameDay : '[Šiandien] LT',\n            nextDay : '[Rytoj] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[Vakar] LT',\n            lastWeek : '[Praėjusį] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'po %s',\n            past : 'prieš %s',\n            s : translateSeconds,\n            ss : translate,\n            m : translateSingular,\n            mm : translate,\n            h : translateSingular,\n            hh : translate,\n            d : translateSingular,\n            dd : translate,\n            M : translateSingular,\n            MM : translate,\n            y : translateSingular,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n        ordinal : function (number) {\n            return number + '-oji';\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lt;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/lt.js?");

/***/ }),

/***/ "./node_modules/moment/locale/lv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/lv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var units = {\n        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        'h': 'stundas_stundām_stunda_stundas'.split('_'),\n        'hh': 'stundas_stundām_stunda_stundas'.split('_'),\n        'd': 'dienas_dienām_diena_dienas'.split('_'),\n        'dd': 'dienas_dienām_diena_dienas'.split('_'),\n        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        'y': 'gada_gadiem_gads_gadi'.split('_'),\n        'yy': 'gada_gadiem_gads_gadi'.split('_')\n    };\n    /**\n     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n     */\n    function format(forms, number, withoutSuffix) {\n        if (withoutSuffix) {\n            // E.g. \"21 minūte\", \"3 minūtes\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n        } else {\n            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n        }\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        return number + ' ' + format(units[key], number, withoutSuffix);\n    }\n    function relativeTimeWithSingular(number, withoutSuffix, key) {\n        return format(units[key], number, withoutSuffix);\n    }\n    function relativeSeconds(number, withoutSuffix) {\n        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n    }\n\n    var lv = moment.defineLocale('lv', {\n        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY.',\n            LL : 'YYYY. [gada] D. MMMM',\n            LLL : 'YYYY. [gada] D. MMMM, HH:mm',\n            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'\n        },\n        calendar : {\n            sameDay : '[Šodien pulksten] LT',\n            nextDay : '[Rīt pulksten] LT',\n            nextWeek : 'dddd [pulksten] LT',\n            lastDay : '[Vakar pulksten] LT',\n            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'pēc %s',\n            past : 'pirms %s',\n            s : relativeSeconds,\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithSingular,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithSingular,\n            hh : relativeTimeWithPlural,\n            d : relativeTimeWithSingular,\n            dd : relativeTimeWithPlural,\n            M : relativeTimeWithSingular,\n            MM : relativeTimeWithPlural,\n            y : relativeTimeWithSingular,\n            yy : relativeTimeWithPlural\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return lv;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/lv.js?");

/***/ }),

/***/ "./node_modules/moment/locale/me.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/me.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekund', 'sekunda', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mjesec', 'mjeseca', 'mjeseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var me = moment.defineLocale('me', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact : true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sjutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedjelje] [u] LT',\n                    '[prošlog] [ponedjeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srijede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mjesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return me;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/me.js?");

/***/ }),

/***/ "./node_modules/moment/locale/mi.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/mi.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var mi = moment.defineLocale('mi', {\n        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),\n        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),\n        monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [i] HH:mm',\n            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'\n        },\n        calendar: {\n            sameDay: '[i teie mahana, i] LT',\n            nextDay: '[apopo i] LT',\n            nextWeek: 'dddd [i] LT',\n            lastDay: '[inanahi i] LT',\n            lastWeek: 'dddd [whakamutunga i] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'i roto i %s',\n            past: '%s i mua',\n            s: 'te hēkona ruarua',\n            ss: '%d hēkona',\n            m: 'he meneti',\n            mm: '%d meneti',\n            h: 'te haora',\n            hh: '%d haora',\n            d: 'he ra',\n            dd: '%d ra',\n            M: 'he marama',\n            MM: '%d marama',\n            y: 'he tau',\n            yy: '%d tau'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return mi;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/mi.js?");

/***/ }),

/***/ "./node_modules/moment/locale/mk.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/mk.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var mk = moment.defineLocale('mk', {\n        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay : '[Денес во] LT',\n            nextDay : '[Утре во] LT',\n            nextWeek : '[Во] dddd [во] LT',\n            lastDay : '[Вчера во] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Изминатата] dddd [во] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'после %s',\n            past : 'пред %s',\n            s : 'неколку секунди',\n            ss : '%d секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дена',\n            M : 'месец',\n            MM : '%d месеци',\n            y : 'година',\n            yy : '%d години'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return mk;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/mk.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ml.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ml.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ml = moment.defineLocale('ml', {\n        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm -നു',\n            LTS : 'A h:mm:ss -നു',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm -നു',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'\n        },\n        calendar : {\n            sameDay : '[ഇന്ന്] LT',\n            nextDay : '[നാളെ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ഇന്നലെ] LT',\n            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s കഴിഞ്ഞ്',\n            past : '%s മുൻപ്',\n            s : 'അൽപ നിമിഷങ്ങൾ',\n            ss : '%d സെക്കൻഡ്',\n            m : 'ഒരു മിനിറ്റ്',\n            mm : '%d മിനിറ്റ്',\n            h : 'ഒരു മണിക്കൂർ',\n            hh : '%d മണിക്കൂർ',\n            d : 'ഒരു ദിവസം',\n            dd : '%d ദിവസം',\n            M : 'ഒരു മാസം',\n            MM : '%d മാസം',\n            y : 'ഒരു വർഷം',\n            yy : '%d വർഷം'\n        },\n        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if ((meridiem === 'രാത്രി' && hour >= 4) ||\n                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                    meridiem === 'വൈകുന്നേരം') {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        }\n    });\n\n    return ml;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ml.js?");

/***/ }),

/***/ "./node_modules/moment/locale/mn.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/mn.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 's':\n                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n            case 'ss':\n                return number + (withoutSuffix ? ' секунд' : ' секундын');\n            case 'm':\n            case 'mm':\n                return number + (withoutSuffix ? ' минут' : ' минутын');\n            case 'h':\n            case 'hh':\n                return number + (withoutSuffix ? ' цаг' : ' цагийн');\n            case 'd':\n            case 'dd':\n                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n            case 'M':\n            case 'MM':\n                return number + (withoutSuffix ? ' сар' : ' сарын');\n            case 'y':\n            case 'yy':\n                return number + (withoutSuffix ? ' жил' : ' жилийн');\n            default:\n                return number;\n        }\n    }\n\n    var mn = moment.defineLocale('mn', {\n        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY оны MMMMын D',\n            LLL : 'YYYY оны MMMMын D HH:mm',\n            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'\n        },\n        meridiemParse: /ҮӨ|ҮХ/i,\n        isPM : function (input) {\n            return input === 'ҮХ';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ҮӨ';\n            } else {\n                return 'ҮХ';\n            }\n        },\n        calendar : {\n            sameDay : '[Өнөөдөр] LT',\n            nextDay : '[Маргааш] LT',\n            nextWeek : '[Ирэх] dddd LT',\n            lastDay : '[Өчигдөр] LT',\n            lastWeek : '[Өнгөрсөн] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s дараа',\n            past : '%s өмнө',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + ' өдөр';\n                default:\n                    return number;\n            }\n        }\n    });\n\n    return mn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/mn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/mr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/mr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    function relativeTimeMr(number, withoutSuffix, string, isFuture)\n    {\n        var output = '';\n        if (withoutSuffix) {\n            switch (string) {\n                case 's': output = 'काही सेकंद'; break;\n                case 'ss': output = '%d सेकंद'; break;\n                case 'm': output = 'एक मिनिट'; break;\n                case 'mm': output = '%d मिनिटे'; break;\n                case 'h': output = 'एक तास'; break;\n                case 'hh': output = '%d तास'; break;\n                case 'd': output = 'एक दिवस'; break;\n                case 'dd': output = '%d दिवस'; break;\n                case 'M': output = 'एक महिना'; break;\n                case 'MM': output = '%d महिने'; break;\n                case 'y': output = 'एक वर्ष'; break;\n                case 'yy': output = '%d वर्षे'; break;\n            }\n        }\n        else {\n            switch (string) {\n                case 's': output = 'काही सेकंदां'; break;\n                case 'ss': output = '%d सेकंदां'; break;\n                case 'm': output = 'एका मिनिटा'; break;\n                case 'mm': output = '%d मिनिटां'; break;\n                case 'h': output = 'एका तासा'; break;\n                case 'hh': output = '%d तासां'; break;\n                case 'd': output = 'एका दिवसा'; break;\n                case 'dd': output = '%d दिवसां'; break;\n                case 'M': output = 'एका महिन्या'; break;\n                case 'MM': output = '%d महिन्यां'; break;\n                case 'y': output = 'एका वर्षा'; break;\n                case 'yy': output = '%d वर्षां'; break;\n            }\n        }\n        return output.replace(/%d/i, number);\n    }\n\n    var mr = moment.defineLocale('mr', {\n        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm वाजता',\n            LTS : 'A h:mm:ss वाजता',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm वाजता',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[उद्या] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future: '%sमध्ये',\n            past: '%sपूर्वी',\n            s: relativeTimeMr,\n            ss: relativeTimeMr,\n            m: relativeTimeMr,\n            mm: relativeTimeMr,\n            h: relativeTimeMr,\n            hh: relativeTimeMr,\n            d: relativeTimeMr,\n            dd: relativeTimeMr,\n            M: relativeTimeMr,\n            MM: relativeTimeMr,\n            y: relativeTimeMr,\n            yy: relativeTimeMr\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात्री') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सकाळी') {\n                return hour;\n            } else if (meridiem === 'दुपारी') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'सायंकाळी') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात्री';\n            } else if (hour < 10) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return mr;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/mr.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ms-my.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ms-my.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var msMy = moment.defineLocale('ms-my', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return msMy;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ms-my.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ms.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ms.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ms = moment.defineLocale('ms', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] HH.mm',\n            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            ss : '%d saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ms;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ms.js?");

/***/ }),

/***/ "./node_modules/moment/locale/mt.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/mt.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var mt = moment.defineLocale('mt', {\n        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),\n        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),\n        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Illum fil-]LT',\n            nextDay : '[Għada fil-]LT',\n            nextWeek : 'dddd [fil-]LT',\n            lastDay : '[Il-bieraħ fil-]LT',\n            lastWeek : 'dddd [li għadda] [fil-]LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'f’ %s',\n            past : '%s ilu',\n            s : 'ftit sekondi',\n            ss : '%d sekondi',\n            m : 'minuta',\n            mm : '%d minuti',\n            h : 'siegħa',\n            hh : '%d siegħat',\n            d : 'ġurnata',\n            dd : '%d ġranet',\n            M : 'xahar',\n            MM : '%d xhur',\n            y : 'sena',\n            yy : '%d sni'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return mt;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/mt.js?");

/***/ }),

/***/ "./node_modules/moment/locale/my.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/my.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '၁',\n        '2': '၂',\n        '3': '၃',\n        '4': '၄',\n        '5': '၅',\n        '6': '၆',\n        '7': '၇',\n        '8': '၈',\n        '9': '၉',\n        '0': '၀'\n    }, numberMap = {\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        '၀': '0'\n    };\n\n    var my = moment.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            ss : '%d စက္ကန့်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်'\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return my;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/my.js?");

/***/ }),

/***/ "./node_modules/moment/locale/nb.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/nb.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var nb = moment.defineLocale('nb', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'noen sekunder',\n            ss : '%d sekunder',\n            m : 'ett minutt',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dager',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nb;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/nb.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ne.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ne.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    var ne = moment.defineLocale('ne', {\n        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'Aको h:mm बजे',\n            LTS : 'Aको h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, Aको h:mm बजे',\n            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राति') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'बिहान') {\n                return hour;\n            } else if (meridiem === 'दिउँसो') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'साँझ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राति';\n            } else if (hour < 12) {\n                return 'बिहान';\n            } else if (hour < 16) {\n                return 'दिउँसो';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राति';\n            }\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[भोलि] LT',\n            nextWeek : '[आउँदो] dddd[,] LT',\n            lastDay : '[हिजो] LT',\n            lastWeek : '[गएको] dddd[,] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sमा',\n            past : '%s अगाडि',\n            s : 'केही क्षण',\n            ss : '%d सेकेण्ड',\n            m : 'एक मिनेट',\n            mm : '%d मिनेट',\n            h : 'एक घण्टा',\n            hh : '%d घण्टा',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महिना',\n            MM : '%d महिना',\n            y : 'एक बर्ष',\n            yy : '%d बर्ष'\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ne;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ne.js?");

/***/ }),

/***/ "./node_modules/moment/locale/nl-be.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/nl-be.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    var nlBe = moment.defineLocale('nl-be', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nlBe;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/nl-be.js?");

/***/ }),

/***/ "./node_modules/moment/locale/nl.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/nl.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    var nl = moment.defineLocale('nl', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            ss : '%d seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nl;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/nl.js?");

/***/ }),

/***/ "./node_modules/moment/locale/nn.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/nn.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var nn = moment.defineLocale('nn', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] H:mm',\n            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s sidan',\n            s : 'nokre sekund',\n            ss : '%d sekund',\n            m : 'eit minutt',\n            mm : '%d minutt',\n            h : 'ein time',\n            hh : '%d timar',\n            d : 'ein dag',\n            dd : '%d dagar',\n            M : 'ein månad',\n            MM : '%d månader',\n            y : 'eit år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return nn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/nn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/pa-in.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/pa-in.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '੧',\n        '2': '੨',\n        '3': '੩',\n        '4': '੪',\n        '5': '੫',\n        '6': '੬',\n        '7': '੭',\n        '8': '੮',\n        '9': '੯',\n        '0': '੦'\n    },\n    numberMap = {\n        '੧': '1',\n        '੨': '2',\n        '੩': '3',\n        '੪': '4',\n        '੫': '5',\n        '੬': '6',\n        '੭': '7',\n        '੮': '8',\n        '੯': '9',\n        '੦': '0'\n    };\n\n    var paIn = moment.defineLocale('pa-in', {\n        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.\n        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),\n        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm ਵਜੇ',\n            LTS : 'A h:mm:ss ਵਜੇ',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'\n        },\n        calendar : {\n            sameDay : '[ਅਜ] LT',\n            nextDay : '[ਕਲ] LT',\n            nextWeek : '[ਅਗਲਾ] dddd, LT',\n            lastDay : '[ਕਲ] LT',\n            lastWeek : '[ਪਿਛਲੇ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ਵਿੱਚ',\n            past : '%s ਪਿਛਲੇ',\n            s : 'ਕੁਝ ਸਕਿੰਟ',\n            ss : '%d ਸਕਿੰਟ',\n            m : 'ਇਕ ਮਿੰਟ',\n            mm : '%d ਮਿੰਟ',\n            h : 'ਇੱਕ ਘੰਟਾ',\n            hh : '%d ਘੰਟੇ',\n            d : 'ਇੱਕ ਦਿਨ',\n            dd : '%d ਦਿਨ',\n            M : 'ਇੱਕ ਮਹੀਨਾ',\n            MM : '%d ਮਹੀਨੇ',\n            y : 'ਇੱਕ ਸਾਲ',\n            yy : '%d ਸਾਲ'\n        },\n        preparse: function (string) {\n            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ਰਾਤ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ਸਵੇਰ') {\n                return hour;\n            } else if (meridiem === 'ਦੁਪਹਿਰ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ਸ਼ਾਮ') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ਰਾਤ';\n            } else if (hour < 10) {\n                return 'ਸਵੇਰ';\n            } else if (hour < 17) {\n                return 'ਦੁਪਹਿਰ';\n            } else if (hour < 20) {\n                return 'ਸ਼ਾਮ';\n            } else {\n                return 'ਰਾਤ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return paIn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/pa-in.js?");

/***/ }),

/***/ "./node_modules/moment/locale/pl.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/pl.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n    function plural(n) {\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n    }\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix  ? 'godzina'  : 'godzinę';\n            case 'hh':\n                return result + (plural(number) ? 'godziny' : 'godzin');\n            case 'MM':\n                return result + (plural(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural(number) ? 'lata' : 'lat');\n        }\n    }\n\n    var pl = moment.defineLocale('pl', {\n        months : function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (format === '') {\n                // Hack: if format empty we know this is used to generate\n                // RegExp by moment. Give then back both valid forms of months\n                // in RegExp ready format.\n                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : '%s temu',\n            s : 'kilka sekund',\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : '1 dzień',\n            dd : '%d dni',\n            M : 'miesiąc',\n            MM : translate,\n            y : 'rok',\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return pl;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/pl.js?");

/***/ }),

/***/ "./node_modules/moment/locale/pt-br.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/pt-br.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ptBr = moment.defineLocale('pt-br', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'poucos segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº'\n    });\n\n    return ptBr;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/pt-br.js?");

/***/ }),

/***/ "./node_modules/moment/locale/pt.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/pt.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var pt = moment.defineLocale('pt', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY HH:mm',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'segundos',\n            ss : '%d segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return pt;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/pt.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ro.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ro.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n                'ss': 'secunde',\n                'mm': 'minute',\n                'hh': 'ore',\n                'dd': 'zile',\n                'MM': 'luni',\n                'yy': 'ani'\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n        return number + separator + format[key];\n    }\n\n    var ro = moment.defineLocale('ro', {\n        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'peste %s',\n            past : '%s în urmă',\n            s : 'câteva secunde',\n            ss : relativeTimeWithPlural,\n            m : 'un minut',\n            mm : relativeTimeWithPlural,\n            h : 'o oră',\n            hh : relativeTimeWithPlural,\n            d : 'o zi',\n            dd : relativeTimeWithPlural,\n            M : 'o lună',\n            MM : relativeTimeWithPlural,\n            y : 'un an',\n            yy : relativeTimeWithPlural\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ro;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ro.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ru.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ru.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    var ru = moment.defineLocale('ru', {\n        months : {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n        },\n        monthsShort : {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n        },\n        weekdays : {\n            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n        },\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : monthsParse,\n        longMonthsParse : monthsParse,\n        shortMonthsParse : monthsParse,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соотвествует только сокращённым формам\n        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., H:mm',\n            LLLL : 'dddd, D MMMM YYYY г., H:mm'\n        },\n        calendar : {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ru;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ru.js?");

/***/ }),

/***/ "./node_modules/moment/locale/sd.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sd.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'جنوري',\n        'فيبروري',\n        'مارچ',\n        'اپريل',\n        'مئي',\n        'جون',\n        'جولاءِ',\n        'آگسٽ',\n        'سيپٽمبر',\n        'آڪٽوبر',\n        'نومبر',\n        'ڊسمبر'\n    ];\n    var days = [\n        'آچر',\n        'سومر',\n        'اڱارو',\n        'اربع',\n        'خميس',\n        'جمع',\n        'ڇنڇر'\n    ];\n\n    var sd = moment.defineLocale('sd', {\n        months : months,\n        monthsShort : months,\n        weekdays : days,\n        weekdaysShort : days,\n        weekdaysMin : days,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[اڄ] LT',\n            nextDay : '[سڀاڻي] LT',\n            nextWeek : 'dddd [اڳين هفتي تي] LT',\n            lastDay : '[ڪالهه] LT',\n            lastWeek : '[گزريل هفتي] dddd [تي] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s پوء',\n            past : '%s اڳ',\n            s : 'چند سيڪنڊ',\n            ss : '%d سيڪنڊ',\n            m : 'هڪ منٽ',\n            mm : '%d منٽ',\n            h : 'هڪ ڪلاڪ',\n            hh : '%d ڪلاڪ',\n            d : 'هڪ ڏينهن',\n            dd : '%d ڏينهن',\n            M : 'هڪ مهينو',\n            MM : '%d مهينا',\n            y : 'هڪ سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sd;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/sd.js?");

/***/ }),

/***/ "./node_modules/moment/locale/se.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/se.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var se = moment.defineLocale('se', {\n        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),\n        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),\n        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'MMMM D. [b.] YYYY',\n            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',\n            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'\n        },\n        calendar : {\n            sameDay: '[otne ti] LT',\n            nextDay: '[ihttin ti] LT',\n            nextWeek: 'dddd [ti] LT',\n            lastDay: '[ikte ti] LT',\n            lastWeek: '[ovddit] dddd [ti] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s geažes',\n            past : 'maŋit %s',\n            s : 'moadde sekunddat',\n            ss: '%d sekunddat',\n            m : 'okta minuhta',\n            mm : '%d minuhtat',\n            h : 'okta diimmu',\n            hh : '%d diimmut',\n            d : 'okta beaivi',\n            dd : '%d beaivvit',\n            M : 'okta mánnu',\n            MM : '%d mánut',\n            y : 'okta jahki',\n            yy : '%d jagit'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return se;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/se.js?");

/***/ }),

/***/ "./node_modules/moment/locale/si.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/si.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    /*jshint -W100*/\n    var si = moment.defineLocale('si', {\n        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),\n        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),\n        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),\n        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'a h:mm',\n            LTS : 'a h:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY MMMM D',\n            LLL : 'YYYY MMMM D, a h:mm',\n            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'\n        },\n        calendar : {\n            sameDay : '[අද] LT[ට]',\n            nextDay : '[හෙට] LT[ට]',\n            nextWeek : 'dddd LT[ට]',\n            lastDay : '[ඊයේ] LT[ට]',\n            lastWeek : '[පසුගිය] dddd LT[ට]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sකින්',\n            past : '%sකට පෙර',\n            s : 'තත්පර කිහිපය',\n            ss : 'තත්පර %d',\n            m : 'මිනිත්තුව',\n            mm : 'මිනිත්තු %d',\n            h : 'පැය',\n            hh : 'පැය %d',\n            d : 'දිනය',\n            dd : 'දින %d',\n            M : 'මාසය',\n            MM : 'මාස %d',\n            y : 'වසර',\n            yy : 'වසර %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n        ordinal : function (number) {\n            return number + ' වැනි';\n        },\n        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n        isPM : function (input) {\n            return input === 'ප.ව.' || input === 'පස් වරු';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'ප.ව.' : 'පස් වරු';\n            } else {\n                return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n            }\n        }\n    });\n\n    return si;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/si.js?");

/***/ }),

/***/ "./node_modules/moment/locale/sk.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sk.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n    function plural(n) {\n        return (n > 1) && (n < 5);\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':  // a few seconds / in a few seconds / a few seconds ago\n                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekúnd');\n                } else {\n                    return result + 'sekundami';\n                }\n                break;\n            case 'm':  // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minúty' : 'minút');\n                } else {\n                    return result + 'minútami';\n                }\n                break;\n            case 'h':  // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodín');\n                } else {\n                    return result + 'hodinami';\n                }\n                break;\n            case 'd':  // a day / in a day / a day ago\n                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dni' : 'dní');\n                } else {\n                    return result + 'dňami';\n                }\n                break;\n            case 'M':  // a month / in a month / a month ago\n                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'mesiace' : 'mesiacov');\n                } else {\n                    return result + 'mesiacmi';\n                }\n                break;\n            case 'y':  // a year / in a year / a year ago\n                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'rokov');\n                } else {\n                    return result + 'rokmi';\n                }\n                break;\n        }\n    }\n\n    var sk = moment.defineLocale('sk', {\n        months : months,\n        monthsShort : monthsShort,\n        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [o] LT';\n                    case 3:\n                        return '[v stredu o] LT';\n                    case 4:\n                        return '[vo štvrtok o] LT';\n                    case 5:\n                        return '[v piatok o] LT';\n                    case 6:\n                        return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulú nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[minulý] dddd [o] LT';\n                    case 3:\n                        return '[minulú stredu o] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [o] LT';\n                    case 6:\n                        return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'pred %s',\n            s : translate,\n            ss : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sk;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/sk.js?");

/***/ }),

/***/ "./node_modules/moment/locale/sl.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sl.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n            case 'ss':\n                if (number === 1) {\n                    result += withoutSuffix ? 'sekundo' : 'sekundi';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n                } else {\n                    result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'ena minuta' : 'eno minuto';\n            case 'mm':\n                if (number === 1) {\n                    result += withoutSuffix ? 'minuta' : 'minuto';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'ena ura' : 'eno uro';\n            case 'hh':\n                if (number === 1) {\n                    result += withoutSuffix ? 'ura' : 'uro';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'uri' : 'urama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'ure' : 'urami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'ur' : 'urami';\n                }\n                return result;\n            case 'd':\n                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n            case 'dd':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n                } else {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n                }\n                return result;\n            case 'M':\n                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n            case 'MM':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n                } else {\n                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n                }\n                return result;\n            case 'y':\n                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n            case 'yy':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'leto' : 'letom';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'leta' : 'leti';\n                } else {\n                    result += withoutSuffix || isFuture ? 'let' : 'leti';\n                }\n                return result;\n        }\n    }\n\n    var sl = moment.defineLocale('sl', {\n        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY H:mm',\n            LLLL : 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay  : '[danes ob] LT',\n            nextDay  : '[jutri ob] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[v] [sredo] [ob] LT';\n                    case 6:\n                        return '[v] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay  : '[včeraj ob] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prejšnjo] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[prejšnjo] [sredo] [ob] LT';\n                    case 6:\n                        return '[prejšnjo] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'čez %s',\n            past   : 'pred %s',\n            s      : processRelativeTime,\n            ss     : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : processRelativeTime,\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return sl;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/sl.js?");

/***/ }),

/***/ "./node_modules/moment/locale/sq.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sq.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var sq = moment.defineLocale('sq', {\n        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /PD|MD/,\n        isPM: function (input) {\n            return input.charAt(0) === 'M';\n        },\n        meridiem : function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Sot në] LT',\n            nextDay : '[Nesër në] LT',\n            nextWeek : 'dddd [në] LT',\n            lastDay : '[Dje në] LT',\n            lastWeek : 'dddd [e kaluar në] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'në %s',\n            past : '%s më parë',\n            s : 'disa sekonda',\n            ss : '%d sekonda',\n            m : 'një minutë',\n            mm : '%d minuta',\n            h : 'një orë',\n            hh : '%d orë',\n            d : 'një ditë',\n            dd : '%d ditë',\n            M : 'një muaj',\n            MM : '%d muaj',\n            y : 'një vit',\n            yy : '%d vite'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sq;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/sq.js?");

/***/ }),

/***/ "./node_modules/moment/locale/sr-cyrl.js":
/*!***********************************************!*\
  !*** ./node_modules/moment/locale/sr-cyrl.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['секунда', 'секунде', 'секунди'],\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var srCyrl = moment.defineLocale('sr-cyrl', {\n        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),\n        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[у] [недељу] [у] LT';\n                    case 3:\n                        return '[у] [среду] [у] LT';\n                    case 6:\n                        return '[у] [суботу] [у] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[у] dddd [у] LT';\n                }\n            },\n            lastDay  : '[јуче у] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past   : 'пре %s',\n            s      : 'неколико секунди',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'дан',\n            dd     : translator.translate,\n            M      : 'месец',\n            MM     : translator.translate,\n            y      : 'годину',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return srCyrl;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/sr-cyrl.js?");

/***/ }),

/***/ "./node_modules/moment/locale/sr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var translator = {\n        words: { //Different grammatical cases\n            ss: ['sekunda', 'sekunde', 'sekundi'],\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    var sr = moment.defineLocale('sr', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedelju] [u] LT';\n                    case 3:\n                        return '[u] [sredu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'pre %s',\n            s      : 'nekoliko sekundi',\n            ss     : translator.translate,\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return sr;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/sr.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ss.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ss.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ss = moment.defineLocale('ss', {\n        months : \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split('_'),\n        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),\n        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Namuhla nga] LT',\n            nextDay : '[Kusasa nga] LT',\n            nextWeek : 'dddd [nga] LT',\n            lastDay : '[Itolo nga] LT',\n            lastWeek : 'dddd [leliphelile] [nga] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'nga %s',\n            past : 'wenteka nga %s',\n            s : 'emizuzwana lomcane',\n            ss : '%d mzuzwana',\n            m : 'umzuzu',\n            mm : '%d emizuzu',\n            h : 'lihora',\n            hh : '%d emahora',\n            d : 'lilanga',\n            dd : '%d emalanga',\n            M : 'inyanga',\n            MM : '%d tinyanga',\n            y : 'umnyaka',\n            yy : '%d iminyaka'\n        },\n        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'ekuseni';\n            } else if (hours < 15) {\n                return 'emini';\n            } else if (hours < 19) {\n                return 'entsambama';\n            } else {\n                return 'ebusuku';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ekuseni') {\n                return hour;\n            } else if (meridiem === 'emini') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n                if (hour === 0) {\n                    return 0;\n                }\n                return hour + 12;\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : '%d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ss;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ss.js?");

/***/ }),

/***/ "./node_modules/moment/locale/sv.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sv.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var sv = moment.defineLocale('sv', {\n        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [kl.] HH:mm',\n            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: '[På] dddd LT',\n            lastWeek: '[I] dddd[s] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'för %s sedan',\n            s : 'några sekunder',\n            ss : '%d sekunder',\n            m : 'en minut',\n            mm : '%d minuter',\n            h : 'en timme',\n            hh : '%d timmar',\n            d : 'en dag',\n            dd : '%d dagar',\n            M : 'en månad',\n            MM : '%d månader',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'e' :\n                (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                (b === 3) ? 'e' : 'e';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return sv;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/sv.js?");

/***/ }),

/***/ "./node_modules/moment/locale/sw.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/sw.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var sw = moment.defineLocale('sw', {\n        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),\n        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[leo saa] LT',\n            nextDay : '[kesho saa] LT',\n            nextWeek : '[wiki ijayo] dddd [saat] LT',\n            lastDay : '[jana] LT',\n            lastWeek : '[wiki iliyopita] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s baadaye',\n            past : 'tokea %s',\n            s : 'hivi punde',\n            ss : 'sekunde %d',\n            m : 'dakika moja',\n            mm : 'dakika %d',\n            h : 'saa limoja',\n            hh : 'masaa %d',\n            d : 'siku moja',\n            dd : 'masiku %d',\n            M : 'mwezi mmoja',\n            MM : 'miezi %d',\n            y : 'mwaka mmoja',\n            yy : 'miaka %d'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return sw;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/sw.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ta.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ta.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var symbolMap = {\n        '1': '௧',\n        '2': '௨',\n        '3': '௩',\n        '4': '௪',\n        '5': '௫',\n        '6': '௬',\n        '7': '௭',\n        '8': '௮',\n        '9': '௯',\n        '0': '௦'\n    }, numberMap = {\n        '௧': '1',\n        '௨': '2',\n        '௩': '3',\n        '௪': '4',\n        '௫': '5',\n        '௬': '6',\n        '௭': '7',\n        '௮': '8',\n        '௯': '9',\n        '௦': '0'\n    };\n\n    var ta = moment.defineLocale('ta', {\n        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, HH:mm',\n            LLLL : 'dddd, D MMMM YYYY, HH:mm'\n        },\n        calendar : {\n            sameDay : '[இன்று] LT',\n            nextDay : '[நாளை] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[நேற்று] LT',\n            lastWeek : '[கடந்த வாரம்] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s இல்',\n            past : '%s முன்',\n            s : 'ஒரு சில விநாடிகள்',\n            ss : '%d விநாடிகள்',\n            m : 'ஒரு நிமிடம்',\n            mm : '%d நிமிடங்கள்',\n            h : 'ஒரு மணி நேரம்',\n            hh : '%d மணி நேரம்',\n            d : 'ஒரு நாள்',\n            dd : '%d நாட்கள்',\n            M : 'ஒரு மாதம்',\n            MM : '%d மாதங்கள்',\n            y : 'ஒரு வருடம்',\n            yy : '%d ஆண்டுகள்'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n        ordinal : function (number) {\n            return number + 'வது';\n        },\n        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // refer http://ta.wikipedia.org/s/1er1\n        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 2) {\n                return ' யாமம்';\n            } else if (hour < 6) {\n                return ' வைகறை';  // வைகறை\n            } else if (hour < 10) {\n                return ' காலை'; // காலை\n            } else if (hour < 14) {\n                return ' நண்பகல்'; // நண்பகல்\n            } else if (hour < 18) {\n                return ' எற்பாடு'; // எற்பாடு\n            } else if (hour < 22) {\n                return ' மாலை'; // மாலை\n            } else {\n                return ' யாமம்';\n            }\n        },\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'யாமம்') {\n                return hour < 2 ? hour : hour + 12;\n            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n                return hour;\n            } else if (meridiem === 'நண்பகல்') {\n                return hour >= 10 ? hour : hour + 12;\n            } else {\n                return hour + 12;\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ta;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ta.js?");

/***/ }),

/***/ "./node_modules/moment/locale/te.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/te.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var te = moment.defineLocale('te', {\n        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),\n        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),\n        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'A h:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, A h:mm',\n            LLLL : 'dddd, D MMMM YYYY, A h:mm'\n        },\n        calendar : {\n            sameDay : '[నేడు] LT',\n            nextDay : '[రేపు] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[నిన్న] LT',\n            lastWeek : '[గత] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s లో',\n            past : '%s క్రితం',\n            s : 'కొన్ని క్షణాలు',\n            ss : '%d సెకన్లు',\n            m : 'ఒక నిమిషం',\n            mm : '%d నిమిషాలు',\n            h : 'ఒక గంట',\n            hh : '%d గంటలు',\n            d : 'ఒక రోజు',\n            dd : '%d రోజులు',\n            M : 'ఒక నెల',\n            MM : '%d నెలలు',\n            y : 'ఒక సంవత్సరం',\n            yy : '%d సంవత్సరాలు'\n        },\n        dayOfMonthOrdinalParse : /\\d{1,2}వ/,\n        ordinal : '%dవ',\n        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'రాత్రి') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ఉదయం') {\n                return hour;\n            } else if (meridiem === 'మధ్యాహ్నం') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'సాయంత్రం') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'రాత్రి';\n            } else if (hour < 10) {\n                return 'ఉదయం';\n            } else if (hour < 17) {\n                return 'మధ్యాహ్నం';\n            } else if (hour < 20) {\n                return 'సాయంత్రం';\n            } else {\n                return 'రాత్రి';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return te;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/te.js?");

/***/ }),

/***/ "./node_modules/moment/locale/tet.js":
/*!*******************************************!*\
  !*** ./node_modules/moment/locale/tet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var tet = moment.defineLocale('tet', {\n        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Ohin iha] LT',\n            nextDay: '[Aban iha] LT',\n            nextWeek: 'dddd [iha] LT',\n            lastDay: '[Horiseik iha] LT',\n            lastWeek: 'dddd [semana kotuk] [iha] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'iha %s',\n            past : '%s liuba',\n            s : 'minutu balun',\n            ss : 'minutu %d',\n            m : 'minutu ida',\n            mm : 'minutu %d',\n            h : 'oras ida',\n            hh : 'oras %d',\n            d : 'loron ida',\n            dd : 'loron %d',\n            M : 'fulan ida',\n            MM : 'fulan %d',\n            y : 'tinan ida',\n            yy : 'tinan %d'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tet;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/tet.js?");

/***/ }),

/***/ "./node_modules/moment/locale/tg.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/tg.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var suffixes = {\n        0: '-ум',\n        1: '-ум',\n        2: '-юм',\n        3: '-юм',\n        4: '-ум',\n        5: '-ум',\n        6: '-ум',\n        7: '-ум',\n        8: '-ум',\n        9: '-ум',\n        10: '-ум',\n        12: '-ум',\n        13: '-ум',\n        20: '-ум',\n        30: '-юм',\n        40: '-ум',\n        50: '-ум',\n        60: '-ум',\n        70: '-ум',\n        80: '-ум',\n        90: '-ум',\n        100: '-ум'\n    };\n\n    var tg = moment.defineLocale('tg', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),\n        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[Имрӯз соати] LT',\n            nextDay : '[Пагоҳ соати] LT',\n            lastDay : '[Дирӯз соати] LT',\n            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',\n            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'баъди %s',\n            past : '%s пеш',\n            s : 'якчанд сония',\n            m : 'як дақиқа',\n            mm : '%d дақиқа',\n            h : 'як соат',\n            hh : '%d соат',\n            d : 'як рӯз',\n            dd : '%d рӯз',\n            M : 'як моҳ',\n            MM : '%d моҳ',\n            y : 'як сол',\n            yy : '%d сол'\n        },\n        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'шаб') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'субҳ') {\n                return hour;\n            } else if (meridiem === 'рӯз') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'бегоҳ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'шаб';\n            } else if (hour < 11) {\n                return 'субҳ';\n            } else if (hour < 16) {\n                return 'рӯз';\n            } else if (hour < 19) {\n                return 'бегоҳ';\n            } else {\n                return 'шаб';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1th is the first week of the year.\n        }\n    });\n\n    return tg;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/tg.js?");

/***/ }),

/***/ "./node_modules/moment/locale/th.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/th.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var th = moment.defineLocale('th', {\n        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n        monthsParseExact: true,\n        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'H:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY เวลา H:mm',\n            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'\n        },\n        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n        isPM: function (input) {\n            return input === 'หลังเที่ยง';\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar : {\n            sameDay : '[วันนี้ เวลา] LT',\n            nextDay : '[พรุ่งนี้ เวลา] LT',\n            nextWeek : 'dddd[หน้า เวลา] LT',\n            lastDay : '[เมื่อวานนี้ เวลา] LT',\n            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'อีก %s',\n            past : '%sที่แล้ว',\n            s : 'ไม่กี่วินาที',\n            ss : '%d วินาที',\n            m : '1 นาที',\n            mm : '%d นาที',\n            h : '1 ชั่วโมง',\n            hh : '%d ชั่วโมง',\n            d : '1 วัน',\n            dd : '%d วัน',\n            M : '1 เดือน',\n            MM : '%d เดือน',\n            y : '1 ปี',\n            yy : '%d ปี'\n        }\n    });\n\n    return th;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/th.js?");

/***/ }),

/***/ "./node_modules/moment/locale/tl-ph.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/tl-ph.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var tlPh = moment.defineLocale('tl-ph', {\n        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'MM/D/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY HH:mm',\n            LLLL : 'dddd, MMMM DD, YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'sa loob ng %s',\n            past : '%s ang nakalipas',\n            s : 'ilang segundo',\n            ss : '%d segundo',\n            m : 'isang minuto',\n            mm : '%d minuto',\n            h : 'isang oras',\n            hh : '%d oras',\n            d : 'isang araw',\n            dd : '%d araw',\n            M : 'isang buwan',\n            MM : '%d buwan',\n            y : 'isang taon',\n            yy : '%d taon'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tlPh;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/tl-ph.js?");

/***/ }),

/***/ "./node_modules/moment/locale/tlh.js":
/*!*******************************************!*\
  !*** ./node_modules/moment/locale/tlh.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'leS' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'waQ' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'nem' :\n        time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time = (output.indexOf('jaj') !== -1) ?\n        time.slice(0, -3) + 'Hu’' :\n        (output.indexOf('jar') !== -1) ?\n        time.slice(0, -3) + 'wen' :\n        (output.indexOf('DIS') !== -1) ?\n        time.slice(0, -3) + 'ben' :\n        time + ' ret';\n        return time;\n    }\n\n    function translate(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n        ten = Math.floor((number % 100) / 10),\n        one = number % 10,\n        word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += ((word !== '') ? ' ' : '') + numbersNouns[one];\n        }\n        return (word === '') ? 'pagh' : word;\n    }\n\n    var tlh = moment.defineLocale('tlh', {\n        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : translateFuture,\n            past : translatePast,\n            s : 'puS lup',\n            ss : translate,\n            m : 'wa’ tup',\n            mm : translate,\n            h : 'wa’ rep',\n            hh : translate,\n            d : 'wa’ jaj',\n            dd : translate,\n            M : 'wa’ jar',\n            MM : translate,\n            y : 'wa’ DIS',\n            yy : translate\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return tlh;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/tlh.js?");

/***/ }),

/***/ "./node_modules/moment/locale/tr.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/tr.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n    var suffixes = {\n        1: '\\'inci',\n        5: '\\'inci',\n        8: '\\'inci',\n        70: '\\'inci',\n        80: '\\'inci',\n        2: '\\'nci',\n        7: '\\'nci',\n        20: '\\'nci',\n        50: '\\'nci',\n        3: '\\'üncü',\n        4: '\\'üncü',\n        100: '\\'üncü',\n        6: '\\'ncı',\n        9: '\\'uncu',\n        10: '\\'uncu',\n        30: '\\'uncu',\n        60: '\\'ıncı',\n        90: '\\'ıncı'\n    };\n\n    var tr = moment.defineLocale('tr', {\n        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[yarın saat] LT',\n            nextWeek : '[gelecek] dddd [saat] LT',\n            lastDay : '[dün] LT',\n            lastWeek : '[geçen] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s önce',\n            s : 'birkaç saniye',\n            ss : '%d saniye',\n            m : 'bir dakika',\n            mm : '%d dakika',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir yıl',\n            yy : '%d yıl'\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {  // special case for zero\n                        return number + '\\'ıncı';\n                    }\n                    var a = number % 10,\n                        b = number % 100 - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return tr;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/tr.js?");

/***/ }),

/***/ "./node_modules/moment/locale/tzl.js":
/*!*******************************************!*\
  !*** ./node_modules/moment/locale/tzl.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n    // This is currently too difficult (maybe even impossible) to add.\n    var tzl = moment.defineLocale('tzl', {\n        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),\n        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM [dallas] YYYY',\n            LLL : 'D. MMMM [dallas] YYYY HH.mm',\n            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'\n        },\n        meridiemParse: /d\\'o|d\\'a/i,\n        isPM : function (input) {\n            return 'd\\'o' === input.toLowerCase();\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'd\\'o' : 'D\\'O';\n            } else {\n                return isLower ? 'd\\'a' : 'D\\'A';\n            }\n        },\n        calendar : {\n            sameDay : '[oxhi à] LT',\n            nextDay : '[demà à] LT',\n            nextWeek : 'dddd [à] LT',\n            lastDay : '[ieiri à] LT',\n            lastWeek : '[sür el] dddd [lasteu à] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'osprei %s',\n            past : 'ja%s',\n            s : processRelativeTime,\n            ss : processRelativeTime,\n            m : processRelativeTime,\n            mm : processRelativeTime,\n            h : processRelativeTime,\n            hh : processRelativeTime,\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's': ['viensas secunds', '\\'iensas secunds'],\n            'ss': [number + ' secunds', '' + number + ' secunds'],\n            'm': ['\\'n míut', '\\'iens míut'],\n            'mm': [number + ' míuts', '' + number + ' míuts'],\n            'h': ['\\'n þora', '\\'iensa þora'],\n            'hh': [number + ' þoras', '' + number + ' þoras'],\n            'd': ['\\'n ziua', '\\'iensa ziua'],\n            'dd': [number + ' ziuas', '' + number + ' ziuas'],\n            'M': ['\\'n mes', '\\'iens mes'],\n            'MM': [number + ' mesen', '' + number + ' mesen'],\n            'y': ['\\'n ar', '\\'iens ar'],\n            'yy': [number + ' ars', '' + number + ' ars']\n        };\n        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);\n    }\n\n    return tzl;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/tzl.js?");

/***/ }),

/***/ "./node_modules/moment/locale/tzm-latn.js":
/*!************************************************!*\
  !*** ./node_modules/moment/locale/tzm-latn.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var tzmLatn = moment.defineLocale('tzm-latn', {\n        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dadkh s yan %s',\n            past : 'yan %s',\n            s : 'imik',\n            ss : '%d imik',\n            m : 'minuḍ',\n            mm : '%d minuḍ',\n            h : 'saɛa',\n            hh : '%d tassaɛin',\n            d : 'ass',\n            dd : '%d ossan',\n            M : 'ayowr',\n            MM : '%d iyyirn',\n            y : 'asgas',\n            yy : '%d isgasn'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return tzmLatn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/tzm-latn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/tzm.js":
/*!*******************************************!*\
  !*** ./node_modules/moment/locale/tzm.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var tzm = moment.defineLocale('tzm', {\n        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past : 'ⵢⴰⵏ %s',\n            s : 'ⵉⵎⵉⴽ',\n            ss : '%d ⵉⵎⵉⴽ',\n            m : 'ⵎⵉⵏⵓⴺ',\n            mm : '%d ⵎⵉⵏⵓⴺ',\n            h : 'ⵙⴰⵄⴰ',\n            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d : 'ⴰⵙⵙ',\n            dd : '%d oⵙⵙⴰⵏ',\n            M : 'ⴰⵢoⵓⵔ',\n            MM : '%d ⵉⵢⵢⵉⵔⵏ',\n            y : 'ⴰⵙⴳⴰⵙ',\n            yy : '%d ⵉⵙⴳⴰⵙⵏ'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return tzm;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/tzm.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ug-cn.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/ug-cn.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js language configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var ugCn = moment.defineLocale('ug-cn', {\n        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(\n            '_'\n        ),\n        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'\n        },\n        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                meridiem === 'يېرىم كېچە' ||\n                meridiem === 'سەھەر' ||\n                meridiem === 'چۈشتىن بۇرۇن'\n            ) {\n                return hour;\n            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n                return hour + 12;\n            } else {\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return 'يېرىم كېچە';\n            } else if (hm < 900) {\n                return 'سەھەر';\n            } else if (hm < 1130) {\n                return 'چۈشتىن بۇرۇن';\n            } else if (hm < 1230) {\n                return 'چۈش';\n            } else if (hm < 1800) {\n                return 'چۈشتىن كېيىن';\n            } else {\n                return 'كەچ';\n            }\n        },\n        calendar: {\n            sameDay: '[بۈگۈن سائەت] LT',\n            nextDay: '[ئەتە سائەت] LT',\n            nextWeek: '[كېلەركى] dddd [سائەت] LT',\n            lastDay: '[تۆنۈگۈن] LT',\n            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%s كېيىن',\n            past: '%s بۇرۇن',\n            s: 'نەچچە سېكونت',\n            ss: '%d سېكونت',\n            m: 'بىر مىنۇت',\n            mm: '%d مىنۇت',\n            h: 'بىر سائەت',\n            hh: '%d سائەت',\n            d: 'بىر كۈن',\n            dd: '%d كۈن',\n            M: 'بىر ئاي',\n            MM: '%d ئاي',\n            y: 'بىر يىل',\n            yy: '%d يىل'\n        },\n\n        dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '-كۈنى';\n                case 'w':\n                case 'W':\n                    return number + '-ھەپتە';\n                default:\n                    return number;\n            }\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 7 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return ugCn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ug-cn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/uk.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/uk.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        };\n\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        var nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months : {\n            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n        },\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., HH:mm',\n            LLLL : 'dddd, D MMMM YYYY р., HH:mm'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            ss : relativeTimeWithPlural,\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'годину',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'місяць',\n            MM : relativeTimeWithPlural,\n            y : 'рік',\n            yy : relativeTimeWithPlural\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return uk;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/uk.js?");

/***/ }),

/***/ "./node_modules/moment/locale/ur.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/ur.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var months = [\n        'جنوری',\n        'فروری',\n        'مارچ',\n        'اپریل',\n        'مئی',\n        'جون',\n        'جولائی',\n        'اگست',\n        'ستمبر',\n        'اکتوبر',\n        'نومبر',\n        'دسمبر'\n    ];\n    var days = [\n        'اتوار',\n        'پیر',\n        'منگل',\n        'بدھ',\n        'جمعرات',\n        'جمعہ',\n        'ہفتہ'\n    ];\n\n    var ur = moment.defineLocale('ur', {\n        months : months,\n        monthsShort : months,\n        weekdays : days,\n        weekdaysShort : days,\n        weekdaysMin : days,\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd، D MMMM YYYY HH:mm'\n        },\n        meridiemParse: /صبح|شام/,\n        isPM : function (input) {\n            return 'شام' === input;\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar : {\n            sameDay : '[آج بوقت] LT',\n            nextDay : '[کل بوقت] LT',\n            nextWeek : 'dddd [بوقت] LT',\n            lastDay : '[گذشتہ روز بوقت] LT',\n            lastWeek : '[گذشتہ] dddd [بوقت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s بعد',\n            past : '%s قبل',\n            s : 'چند سیکنڈ',\n            ss : '%d سیکنڈ',\n            m : 'ایک منٹ',\n            mm : '%d منٹ',\n            h : 'ایک گھنٹہ',\n            hh : '%d گھنٹے',\n            d : 'ایک دن',\n            dd : '%d دن',\n            M : 'ایک ماہ',\n            MM : '%d ماہ',\n            y : 'ایک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return ur;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/ur.js?");

/***/ }),

/***/ "./node_modules/moment/locale/uz-latn.js":
/*!***********************************************!*\
  !*** ./node_modules/moment/locale/uz-latn.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var uzLatn = moment.defineLocale('uz-latn', {\n        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),\n        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),\n        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Bugun soat] LT [da]',\n            nextDay : '[Ertaga] LT [da]',\n            nextWeek : 'dddd [kuni soat] LT [da]',\n            lastDay : '[Kecha soat] LT [da]',\n            lastWeek : '[O\\'tgan] dddd [kuni soat] LT [da]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Yaqin %s ichida',\n            past : 'Bir necha %s oldin',\n            s : 'soniya',\n            ss : '%d soniya',\n            m : 'bir daqiqa',\n            mm : '%d daqiqa',\n            h : 'bir soat',\n            hh : '%d soat',\n            d : 'bir kun',\n            dd : '%d kun',\n            M : 'bir oy',\n            MM : '%d oy',\n            y : 'bir yil',\n            yy : '%d yil'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n\n    return uzLatn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/uz-latn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/uz.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/uz.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var uz = moment.defineLocale('uz', {\n        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'D MMMM YYYY, dddd HH:mm'\n        },\n        calendar : {\n            sameDay : '[Бугун соат] LT [да]',\n            nextDay : '[Эртага] LT [да]',\n            nextWeek : 'dddd [куни соат] LT [да]',\n            lastDay : '[Кеча соат] LT [да]',\n            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Якин %s ичида',\n            past : 'Бир неча %s олдин',\n            s : 'фурсат',\n            ss : '%d фурсат',\n            m : 'бир дакика',\n            mm : '%d дакика',\n            h : 'бир соат',\n            hh : '%d соат',\n            d : 'бир кун',\n            dd : '%d кун',\n            M : 'бир ой',\n            MM : '%d ой',\n            y : 'бир йил',\n            yy : '%d йил'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return uz;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/uz.js?");

/***/ }),

/***/ "./node_modules/moment/locale/vi.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/vi.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var vi = moment.defineLocale('vi', {\n        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysParseExact : true,\n        meridiemParse: /sa|ch/i,\n        isPM : function (input) {\n            return /^ch$/i.test(input);\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'sa' : 'SA';\n            } else {\n                return isLower ? 'ch' : 'CH';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [năm] YYYY',\n            LLL : 'D MMMM [năm] YYYY HH:mm',\n            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',\n            l : 'DD/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY HH:mm',\n            llll : 'ddd, D MMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần rồi lúc] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s tới',\n            past : '%s trước',\n            s : 'vài giây',\n            ss : '%d giây' ,\n            m : 'một phút',\n            mm : '%d phút',\n            h : 'một giờ',\n            hh : '%d giờ',\n            d : 'một ngày',\n            dd : '%d ngày',\n            M : 'một tháng',\n            MM : '%d tháng',\n            y : 'một năm',\n            yy : '%d năm'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return vi;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/vi.js?");

/***/ }),

/***/ "./node_modules/moment/locale/x-pseudo.js":
/*!************************************************!*\
  !*** ./node_modules/moment/locale/x-pseudo.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var xPseudo = moment.defineLocale('x-pseudo', {\n        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n        monthsParseExact : true,\n        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n        weekdaysParseExact : true,\n        longDateFormat : {\n            LT : 'HH:mm',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY HH:mm',\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\n        },\n        calendar : {\n            sameDay : '[T~ódá~ý át] LT',\n            nextDay : '[T~ómó~rró~w át] LT',\n            nextWeek : 'dddd [át] LT',\n            lastDay : '[Ý~ést~érdá~ý át] LT',\n            lastWeek : '[L~ást] dddd [át] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'í~ñ %s',\n            past : '%s á~gó',\n            s : 'á ~féw ~sécó~ñds',\n            ss : '%d s~écóñ~ds',\n            m : 'á ~míñ~úté',\n            mm : '%d m~íñú~tés',\n            h : 'á~ñ hó~úr',\n            hh : '%d h~óúrs',\n            d : 'á ~dáý',\n            dd : '%d d~áýs',\n            M : 'á ~móñ~th',\n            MM : '%d m~óñt~hs',\n            y : 'á ~ýéár',\n            yy : '%d ý~éárs'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return xPseudo;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/x-pseudo.js?");

/***/ }),

/***/ "./node_modules/moment/locale/yo.js":
/*!******************************************!*\
  !*** ./node_modules/moment/locale/yo.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var yo = moment.defineLocale('yo', {\n        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),\n        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY h:mm A',\n            LLLL : 'dddd, D MMMM YYYY h:mm A'\n        },\n        calendar : {\n            sameDay : '[Ònì ni] LT',\n            nextDay : '[Ọ̀la ni] LT',\n            nextWeek : 'dddd [Ọsẹ̀ tón\\'bọ] [ni] LT',\n            lastDay : '[Àna ni] LT',\n            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'ní %s',\n            past : '%s kọjá',\n            s : 'ìsẹjú aayá die',\n            ss :'aayá %d',\n            m : 'ìsẹjú kan',\n            mm : 'ìsẹjú %d',\n            h : 'wákati kan',\n            hh : 'wákati %d',\n            d : 'ọjọ́ kan',\n            dd : 'ọjọ́ %d',\n            M : 'osù kan',\n            MM : 'osù %d',\n            y : 'ọdún kan',\n            yy : 'ọdún %d'\n        },\n        dayOfMonthOrdinalParse : /ọjọ́\\s\\d{1,2}/,\n        ordinal : 'ọjọ́ %d',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return yo;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/yo.js?");

/***/ }),

/***/ "./node_modules/moment/locale/zh-cn.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-cn.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var zhCn = moment.defineLocale('zh-cn', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日Ah点mm分',\n            LLLL : 'YYYY年M月D日ddddAh点mm分',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' ||\n                    meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            } else {\n                // '中午'\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '周';\n                default:\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s内',\n            past : '%s前',\n            s : '几秒',\n            ss : '%d 秒',\n            m : '1 分钟',\n            mm : '%d 分钟',\n            h : '1 小时',\n            hh : '%d 小时',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 个月',\n            MM : '%d 个月',\n            y : '1 年',\n            yy : '%d 年'\n        },\n        week : {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n\n    return zhCn;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/zh-cn.js?");

/***/ }),

/***/ "./node_modules/moment/locale/zh-hk.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-hk.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var zhHk = moment.defineLocale('zh-hk', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    return zhHk;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/zh-hk.js?");

/***/ }),

/***/ "./node_modules/moment/locale/zh-tw.js":
/*!*********************************************!*\
  !*** ./node_modules/moment/locale/zh-tw.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//! moment.js locale configuration\n\n;(function (global, factory) {\n    true ? factory(__webpack_require__(/*! ../moment */ \"./node_modules/moment/moment.js\")) :\n   undefined\n}(this, (function (moment) { 'use strict';\n\n\n    var zhTw = moment.defineLocale('zh-tw', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日 HH:mm',\n            LLLL : 'YYYY年M月D日dddd HH:mm',\n            l : 'YYYY/M/D',\n            ll : 'YYYY年M月D日',\n            lll : 'YYYY年M月D日 HH:mm',\n            llll : 'YYYY年M月D日dddd HH:mm'\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour : function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天] LT',\n            nextDay : '[明天] LT',\n            nextWeek : '[下]dddd LT',\n            lastDay : '[昨天] LT',\n            lastWeek : '[上]dddd LT',\n            sameElse : 'L'\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n                case 'd' :\n                case 'D' :\n                case 'DDD' :\n                    return number + '日';\n                case 'M' :\n                    return number + '月';\n                case 'w' :\n                case 'W' :\n                    return number + '週';\n                default :\n                    return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            ss : '%d 秒',\n            m : '1 分鐘',\n            mm : '%d 分鐘',\n            h : '1 小時',\n            hh : '%d 小時',\n            d : '1 天',\n            dd : '%d 天',\n            M : '1 個月',\n            MM : '%d 個月',\n            y : '1 年',\n            yy : '%d 年'\n        }\n    });\n\n    return zhTw;\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/moment/locale/zh-tw.js?");

/***/ }),

/***/ "./node_modules/moment/moment.js":
/*!***************************************!*\
  !*** ./node_modules/moment/moment.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    undefined\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                __webpack_require__(\"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\")(\"./\" + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/moment/moment.js?");

/***/ }),

/***/ "./node_modules/papaparse/papaparse.js":
/*!*********************************************!*\
  !*** ./node_modules/papaparse/papaparse.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*@license\n\tPapa Parse\n\tv4.6.0\n\thttps://github.com/mholt/PapaParse\n\tLicense: MIT\n*/\n(function(root, factory)\n{\n\t/* globals define */\n\tif (true)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\n\telse {}\n}(this, function()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = IS_WORKER && /(\\?|&)papaworker(=|&|$)/.test(global.location.search),\n\t\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.SCRIPT_PATH = null;\t// Must be set by your code if you use workers and this lib is loaded asynchronously\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\telse if (Papa.WORKERS_SUPPORTED)\n\t{\n\t\tAUTO_SCRIPT_PATH = getScriptPath();\n\n\t\t// Check if the script was loaded synchronously\n\t\tif (!document.body)\n\t\t{\n\t\t\t// Body doesn't exist yet, must be synchronous\n\t\t\tLOADED_SYNC = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\tLOADED_SYNC = true;\n\t\t\t}, true);\n\t\t}\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT)\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (_input instanceof Array)\n\t\t{\n\t\t\tif (!_input.length || _input[0] instanceof Array)\n\t\t\t\treturn serialize(null, _input);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(objectKeys(_input[0]), _input);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (_input.data instanceof Array)\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.data[0] instanceof Array\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: objectKeys(_input.data[0]);\n\n\t\t\t\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || []);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow 'exception: Unable to serialize unrecognized input';\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| _config.quotes instanceof Array)\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\t\t}\n\n\n\t\t/** Turns an object's keys into an array */\n\t\tfunction objectKeys(obj)\n\t\t{\n\t\t\tif (typeof obj !== 'object')\n\t\t\t\treturn [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in obj)\n\t\t\t\tkeys.push(key);\n\t\t\treturn keys;\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = fields instanceof Array && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(data[0] instanceof Array);\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t{\n\t\t\t\t\tif (col > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t}\n\n\t\t\t\tif (row < data.length - 1)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tstr = str.toString().replace(quoteCharRegex, _quoteChar + _quoteChar);\n\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t|| (_quotes instanceof Array && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(str, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| str.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| str.charAt(0) === ' '\n\t\t\t\t\t\t\t|| str.charAt(str.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\treturn;\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\t\treturn;\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open('GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t\telse\n\t\t\t\tthis._start += this._config.chunkSize;\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk = size ? remaining.substr(0, size) : remaining;\n\t\t\tremaining = size ? remaining.substr(size) : '';\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = __webpack_require__(/*! stream */ \"stream\").Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tif (!stream.push(data[i]) && !this._handle.paused()) {\n\t\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t\t// so we need to pause until more items\n\t\t\t\t\t// can be processed\n\t\t\t\t\tthis._handle.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\n\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\n\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\t\t\t_input = _input.substr(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\t_paused = false;\n\t\t\tself.streamer.parseChunk(_input, true);\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\tif (testEmptyLine(_results.data[i]))\n\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar header = _results.data[i][j];\n\n\t\t\t\t\tif (_config.trimHeaders) {\n\t\t\t\t\t\theader = header.trim();\n\t\t\t\t\t}\n\n\t\t\t\t\t_fields.push(header);\n\t\t\t\t}\n\t\t\t_results.data.splice(0, 1);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (FLOAT.test(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = _results.data[i][j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\t\t\t\t_results.data[i] = row;\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += _results.data.length;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments)\n\t\t{\n\t\t\tvar delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow;\n\n\t\t\tfor (var i = 0; i < delimChoices.length; i++)\n\t\t\t{\n\t\t\t\tvar delim = delimChoices[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\n\t\t\t\t\t&& avgFieldCount > 1.99)\n\t\t\t\t{\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction guessLineEndings(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substr(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\t_results.errors.push({\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg,\n\t\t\t\trow: row\n\t\t\t});\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\tif (config.quoteChar === undefined) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow 'Comment character same as delimiter';\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow 'Input must be a string';\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substr(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeChar.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&') + quoteChar, 'g');\n\t\t\tvar quoteSearch;\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substr(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\n\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\n\tfunction getScriptPath()\n\t{\n\t\tvar scripts = document.getElementsByTagName('script');\n\t\treturn scripts.length ? scripts[scripts.length - 1].src : '';\n\t}\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\t\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\n\t\t\tthrow new Error(\n\t\t\t\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\n\t\t\t\t'You need to set Papa.SCRIPT_PATH manually.'\n\t\t\t);\n\t\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\n\t\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\n\t\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: [msg.results.data[i]],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow 'Not implemented.';\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = obj instanceof Array ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n\n\n//# sourceURL=webpack:///./node_modules/papaparse/papaparse.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const FileController = __webpack_require__(/*! ./lib/file-controller.js */ \"./src/lib/file-controller.js\")\r\nconst DataController = __webpack_require__(/*! ./lib/data-controller.js */ \"./src/lib/data-controller.js\")\r\n\r\nconst dataFile = process.argv[2] || 'data.json'\r\nconst paramsFile = process.argv[3] || 'params.json'\r\nconst configFile = process.argv[4] || 'config.json'\r\n\r\nif (!dataFile) {\r\n  console.log('You should provide a filename with words for checking data')\r\n} else {\r\n  try {\r\n    let sourceData = FileController.readData(dataFile)\r\n    console.log('1 Source data is uploaded')\r\n\r\n    let configData = FileController.readData(configFile)\r\n    console.log('2 Config data is uploaded')\r\n\r\n    let paramsData = FileController.readData(paramsFile)\r\n    console.log('3 Params data is uploaded')\r\n\r\n    new DataController(sourceData, configData, paramsData)\r\n\r\n  } catch (err1) {\r\n    console.error('Some error occurred', err1.stack)\r\n  }\r\n}\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/lib/check-table.js":
/*!********************************!*\
  !*** ./src/lib/check-table.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const LexicalQuery = __webpack_require__(/*! ./lexical-query.js */ \"./src/lib/lexical-query.js\")\r\nconst parallel = __webpack_require__(/*! async-await-parallel */ \"./node_modules/async-await-parallel/index.js\")\r\n\r\nclass CheckTable {\r\n  constructor () {\r\n    this.data = []\r\n  }\r\n\r\n  async getData (sourceData, params) {\r\n    const res = await parallel(\r\n      sourceData.data.map(dataItem => async () => { await this.getDataWord(dataItem, params) })\r\n      , sourceData.queue_max)\r\n    console.info('finish to collect data')\r\n  }\r\n\r\n  async getDataWord (dataItem, params) {\r\n    let lexQuery = new LexicalQuery()\r\n    let res1 = await lexQuery.getMorphData(dataItem)\r\n    let rowData = this.formatHomonymData(dataItem, params)\r\n    this.data.push(rowData)\r\n\r\n    if (dataItem.homonym && dataItem.homonym.lexemes && rowData.lexiconShortOpts.allow && !params.skipShortDefs) {\r\n      dataItem.homonym.lexemes.forEach(lex => { lex.meaning.shortDefs = [] })\r\n\r\n      let res2 = await lexQuery.prepareShortDefsRequests(dataItem, rowData)\r\n\r\n      if (rowData.definitionShortRequests && rowData.definitionShortRequests.length > 0) {\r\n        let res3 = await lexQuery.getDefs(rowData.definitionShortRequests)\r\n      }\r\n\r\n      this.formatShortDefsData(dataItem, rowData)\r\n    }\r\n\r\n    if (dataItem.homonym && dataItem.homonym.lexemes && rowData.lexiconFullOpts.allow && !params.skipFullDefs) {\r\n      let res2 = await lexQuery.prepareFullDefsRequests(dataItem, rowData)\r\n\r\n      if (rowData.definitionFullRequests && rowData.definitionFullRequests.length > 0) {\r\n        let res3 = await lexQuery.getDefs(rowData.definitionFullRequests)\r\n      }\r\n\r\n      this.formatFullDefsData(dataItem, rowData)\r\n    }\r\n\r\n    if (dataItem.homonym && dataItem.homonym.lexemes && params.langs && params.langs.length > 0) {\r\n      let langs = params.langs.map(lang => lang.code)\r\n      let res4 = await lexQuery.getLemmaTranslations(langs, dataItem, rowData)\r\n\r\n      this.formatTranslationsData(params.langs, dataItem, rowData)\r\n    }\r\n  }\r\n\r\n  formatHomonymData (dataItem, params) {\r\n    let rowData = {\r\n      targetWord: dataItem.targetWord,\r\n      languageID: dataItem.languageID,\r\n      languageName: dataItem.languageName,\r\n      lexiconShortOpts: dataItem.lexiconShortOpts,\r\n      lexiconFullOpts: dataItem.lexiconFullOpts,\r\n\r\n      skipShortDefs: params.skipShortDefs,\r\n      skipFullDefs: params.skipFullDefs,\r\n      langs: params.langs,\r\n\r\n      morphClient: false\r\n    }\r\n\r\n    if (dataItem.homonym && dataItem.homonym.lexemes) {\r\n      rowData.morphClient = true\r\n\r\n      rowData.lexemes = []\r\n      dataItem.homonym.lexemes.forEach(lexeme => {\r\n        let lexemeData = { lemmaWord: lexeme.lemma.word, morphData: {} }\r\n        lexemeData.morphData.principalParts = lexeme.lemma.principalParts.join('; ')\r\n        for (let feature in lexeme.lemma.features) {\r\n          lexemeData.morphData[feature] = lexeme.lemma.features[feature].value\r\n        }\r\n\r\n        if (lexeme.meaning.shortDefs.length > 0) {\r\n          lexemeData.morphShortDefs = lexeme.meaning.shortDefs.map(def => def.text)\r\n        }\r\n        rowData.lexemes.push(lexemeData)\r\n      })\r\n    }\r\n    return rowData\r\n  }\r\n\r\n  formatShortDefsData (dataItem, rowData) {\r\n    dataItem.homonym.lexemes.forEach((lexeme, index) => {\r\n      rowData.lexemes[index].shortDefData = { lexClient: false }\r\n      if (lexeme.meaning.shortDefs.length > 0) {\r\n        rowData.lexemes[index].shortDefData.lexClient = true\r\n        rowData.lexemes[index].shortDefData.shortDefs = lexeme.meaning.shortDefs.map(def => { return { text: def.text, code: def.code, dict: def.dict } })\r\n      }\r\n    })\r\n  }\r\n\r\n  formatFullDefsData (dataItem, rowData) {\r\n    dataItem.homonym.lexemes.forEach((lexeme, index) => {\r\n      rowData.lexemes[index].fullDefData = { lexClient: false }\r\n      if (lexeme.meaning.fullDefs.length > 0) {\r\n        rowData.lexemes[index].fullDefData.lexClient = true\r\n        rowData.lexemes[index].fullDefData.fullDefs = lexeme.meaning.fullDefs.map(def => { return { text: def.text, code: def.code, dict: def.dict } })\r\n      }\r\n    })\r\n  }\r\n\r\n  formatTranslationsData (langs, dataItem, rowData) {\r\n    dataItem.homonym.lexemes.forEach((lexeme, index) => {\r\n      rowData.lexemes[index].translations = {}\r\n      for (let lang of langs) {\r\n        let curTrans = lexeme.lemma.translations.filter(trans => trans.languageCode === lang.property)\r\n\r\n        if (curTrans.length === 0) {\r\n          rowData.lexemes[index].translations[lang.property] = { languageCode: lang.property }\r\n        } else {\r\n          rowData.lexemes[index].translations[lang.property] = curTrans[0]\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  clearUnprinted(str) {\r\n    return str ? str.replace(/\\r/g, ' ').replace(/\\n/g, ' ') : null\r\n  }\r\n\r\n\r\n\r\n  getFeaturesList () {\r\n    let featuresList = []\r\n    this.data.forEach(homonym => {\r\n      if (homonym.lexemes) {\r\n        homonym.lexemes.forEach(lexeme => {\r\n          for (let feature in lexeme.morphData) {\r\n            if (featuresList.indexOf(feature) === -1) { featuresList.push(feature) }\r\n          }\r\n        })\r\n      }\r\n    })\r\n    return featuresList\r\n  }\r\n\r\n  createMorphDataDownload () {\r\n    let table = []\r\n    let featuresList = this.getFeaturesList()\r\n\r\n    let header = ['TargetWord', 'Language', 'MorphClient', 'LemmaWord']\r\n    header = header.concat(featuresList)\r\n    header.push('MorphShortDef')\r\n    table.push(header)\r\n\r\n    this.data.forEach(homonym => {\r\n      let targetWord = homonym.targetWord\r\n      let langCode = homonym.languageName\r\n      let hasMorphData = homonym.morphClient ? 'yes' : 'no'\r\n\r\n      if (homonym.lexemes) {\r\n        homonym.lexemes.forEach(lexeme => {\r\n          let row = []\r\n          row.push(targetWord, langCode, hasMorphData)\r\n          row.push(lexeme.lemmaWord)\r\n\r\n          for (let feature of featuresList) {\r\n            row.push(lexeme.morphData[feature])\r\n          }\r\n\r\n          let defs = lexeme.morphShortDefs ? lexeme.morphShortDefs.map((item, index) => (lexeme.morphShortDefs.length > 1 ? ((index + 1) + '. ') : '') + item).join('; ') : 'no'\r\n          row.push(defs)\r\n          table.push(row)\r\n        })\r\n      } else {\r\n        let row = []\r\n        row.push(targetWord, langCode, hasMorphData)\r\n        table.push(row)\r\n      }\r\n    })\r\n\r\n    this.morphData = table\r\n  }\r\n\r\n  getDictsList (subArr1, subArr2) {\r\n    let dictsList = []\r\n\r\n    this.data.forEach(homonym => {\r\n      if (homonym.lexemes) {\r\n        homonym.lexemes.forEach(lexeme => {\r\n          if (lexeme[subArr1] && lexeme[subArr1][subArr2]) {\r\n            lexeme[subArr1][subArr2].forEach(def => {\r\n              if (dictsList.indexOf(def.dict) === -1) {\r\n                dictsList.push(def.dict)\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    return dictsList\r\n  }\r\n\r\n  createShortDefDownload () {\r\n    let table = []\r\n\r\n    let dictsList = this.getDictsList('shortDefData', 'shortDefs')\r\n\r\n    let header = ['TargetWord', 'Language', 'LexClient', 'LemmaWord']\r\n    header = header.concat(dictsList)\r\n    table.push(header)\r\n\r\n    this.data.forEach(homonym => {\r\n      let targetWord = homonym.targetWord\r\n      let langCode = homonym.languageName\r\n\r\n      if (homonym.lexemes) {\r\n        homonym.lexemes.forEach(lexeme => {\r\n          let row = []\r\n          row.push(targetWord)\r\n          row.push(langCode)\r\n          row.push(lexeme.shortDefData && lexeme.shortDefData.lexClient ? 'yes' : 'no')\r\n          row.push(lexeme.lemmaWord)\r\n\r\n          if (lexeme.shortDefData && lexeme.shortDefData.shortDefs) {\r\n            dictsList.forEach(dict => {\r\n              let dictValue = []\r\n              lexeme.shortDefData.shortDefs.forEach(def => {\r\n                if (def.dict === dict) { dictValue.push(def.text ? def.text : 'no') }\r\n              })\r\n              row.push(dictValue.length > 0 ? dictValue.map((item, index) => (dictValue.length > 1 ? (index + 1) + '. ' : '') + item).join('; ') : null)\r\n            })\r\n            table.push(row)\r\n          }\r\n        })\r\n      } else {\r\n        let row = []\r\n        row.push(targetWord)\r\n        row.push(langCode)\r\n        row.push('no')\r\n        table.push(row)\r\n      }\r\n    })\r\n\r\n    this.shortDefData = table\r\n  }\r\n\r\n  createFullDefDownload () {\r\n    let dictsList = this.getDictsList('fullDefData', 'fullDefs')\r\n    let dictsTables = {}\r\n\r\n    for (let dict of dictsList) {\r\n      let table = ''\r\n      let allWords = ''\r\n      this.data.forEach(homonym => {\r\n        let checkDict = homonym.lexemes ? homonym.lexemes.some(lexeme => lexeme.fullDefData && lexeme.fullDefData.fullDefs.some(def => def.dict === dict)) : false\r\n\r\n        if (checkDict) {\r\n          allWords = allWords + `<li><a href=\"#${homonym.targetWord}\">${homonym.targetWord}</a></li>`\r\n          table = table + `<h1 id=\"${homonym.targetWord}\">${homonym.targetWord} - ${homonym.languageName}</h1>`\r\n\r\n          if (homonym.lexemes) {\r\n            homonym.lexemes.forEach((lexeme, index) => {\r\n              let curIndex = homonym.lexemes.length > 1 ? (index + 1) + '. ' : ''\r\n              table = table + `<h2>${curIndex}${lexeme.lemmaWord}</h2>`\r\n              if (lexeme.fullDefData.fullDefs) {\r\n                lexeme.fullDefData.fullDefs.filter(fullDef => fullDef.dict === dict).forEach(fullDef => { table = table + (fullDef.text ? fullDef.text : 'No data') })\r\n              }\r\n            })\r\n          } else {\r\n            table = table + `<h2>No data</h2>`\r\n          }\r\n          table = table + `<p><a href=\"#content\">to start</a></p>`\r\n        }\r\n      })\r\n\r\n      table = '<!doctype html><html><head></head><body><ol id=\"content\">' + allWords + '</ol>' + table + '</body></html>'\r\n      dictsTables[dict] = table\r\n    }\r\n\r\n    this.fullDefData = dictsTables\r\n  }\r\n\r\n  createTranslationsDataDownload (langsS) {\r\n    let table = []\r\n    if (langsS && langsS.length > 0) {\r\n      let langs = langsS.map(lang => lang.property)\r\n\r\n      let header = ['TargetWord', 'Language', 'Lemma', ...langs]\r\n\r\n      table.push(header)\r\n\r\n      this.data.forEach(homonym => {\r\n        let targetWord = homonym.targetWord\r\n        let langCode = homonym.languageName\r\n\r\n        if (homonym.lexemes) {\r\n          homonym.lexemes.forEach(lexeme => {\r\n            let langsData = []\r\n            let lemma = lexeme.lemmaWord\r\n            for (let lang of langs) {\r\n              if (lexeme.translations[lang].glosses) {\r\n                langsData.push(lexeme.translations[lang].glosses.join('; '))\r\n              }\r\n            }\r\n            table.push([targetWord, langCode, lemma, ...langsData])\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      table.push(['TargetWord', 'Language', 'Lemma'])\r\n    }\r\n    this.translationsData = table\r\n  }\r\n  \r\n  createFailedMorphDownload () {\r\n    let table = []\r\n    let header = ['TargetWord', 'Language', 'MorphClient']\r\n    table.push(header)\r\n\r\n    this.data.forEach(homonym => {\r\n      let targetWord = homonym.targetWord\r\n      let langCode = homonym.languageName\r\n      let hasMorphData = homonym.morphClient ? 'yes' : 'no'\r\n\r\n      if (!homonym.morphClient) {\r\n        table.push([targetWord, langCode, hasMorphData])\r\n      }\r\n    })\r\n\r\n    this.failedMorph = table\r\n  }\r\n\r\n  createFailedShortDefDownload () {\r\n    let table = []\r\n\r\n    let dictsList = this.getDictsList('shortDefData', 'shortDefs')\r\n\r\n    let header = ['TargetWord', 'Language', 'LexClient', 'LemmaWord']\r\n    header = header.concat(dictsList)\r\n    table.push(header)\r\n\r\n    this.data.forEach(homonym => {\r\n      let targetWord = homonym.targetWord\r\n      let langCode = homonym.languageName\r\n\r\n      if (homonym.lexemes) {\r\n        homonym.lexemes.forEach(lexeme => {\r\n          let row = []\r\n          row.push(targetWord)\r\n          row.push(langCode)\r\n          row.push(lexeme.shortDefData && lexeme.shortDefData.lexClient ? 'yes' : 'no')\r\n          row.push(lexeme.lemmaWord)\r\n\r\n          if (lexeme.shortDefData && lexeme.shortDefData.shortDefs) {\r\n            dictsList.forEach(dict => {\r\n              let dictValue = []\r\n              lexeme.shortDefData.shortDefs.forEach(def => {\r\n                if (def.dict === dict && !def.text) { dictValue.push('no') }\r\n              })\r\n              if (dictValue.length > 0) {\r\n                row.push(dictValue.length > 0 ? dictValue.map((item, index) => (dictValue.length > 1 ? (index + 1) + '. ' : '') + item).join('; ') : null)\r\n              }\r\n            })\r\n          }\r\n          if (row.length > 4) {\r\n            table.push(row)\r\n          }\r\n        })\r\n      } else {\r\n        let row = []\r\n        row.push(targetWord)\r\n        row.push(langCode)\r\n        row.push('no')\r\n        table.push(row)\r\n      }\r\n    })\r\n\r\n    this.failedShortDef = table\r\n  }\r\n\r\n  createFailedFullDefDownload () {\r\n    let table = []\r\n\r\n    let dictsList = this.getDictsList('fullDefData', 'fullDefs')\r\n\r\n    let header = ['TargetWord', 'Language', 'LexClient', 'LemmaWord']\r\n    header = header.concat(dictsList)\r\n    table.push(header)\r\n\r\n    this.data.forEach(homonym => {\r\n      let targetWord = homonym.targetWord\r\n      let langCode = homonym.languageName\r\n\r\n      if (homonym.lexemes) {\r\n        homonym.lexemes.forEach(lexeme => {\r\n          let row = []\r\n          row.push(targetWord)\r\n          row.push(langCode)\r\n          row.push(lexeme.fullDefData && lexeme.fullDefData.lexClient ? 'yes' : 'no')\r\n          row.push(lexeme.lemmaWord)\r\n\r\n          if (lexeme.fullDefData && lexeme.fullDefData.shortDefs) {\r\n            dictsList.forEach(dict => {\r\n              let dictValue = []\r\n              lexeme.fullDefData.shortDefs.forEach(def => {\r\n                if (def.dict === dict && !def.text) { dictValue.push('no') }\r\n              })\r\n              if (dictValue.length > 0) {\r\n                row.push(dictValue.map((item, index) => (dictValue.length > 1 ? (index + 1) + '. ' : '') + item).join('; '))\r\n              }\r\n            })\r\n          }\r\n          if (row.length > 4) {\r\n            table.push(row)\r\n          }\r\n        })\r\n      } else {\r\n        let row = []\r\n        row.push(targetWord)\r\n        row.push(langCode)\r\n        row.push('no')\r\n        table.push(row)\r\n      }\r\n    })\r\n\r\n    this.failedFullDef = table\r\n  }\r\n\r\n  createFailedTranslationsDownload (langsS) {\r\n    let langs = langsS.map(lang => lang.property)\r\n\r\n    let table = []\r\n    let header = ['TargetWord', 'Language', 'Lemma', ...langs]\r\n\r\n    table.push(header)\r\n\r\n    this.data.forEach(homonym => {\r\n      let targetWord = homonym.targetWord\r\n      let langCode = homonym.languageName\r\n\r\n      if (homonym.lexemes) {\r\n        homonym.lexemes.forEach(lexeme => {\r\n          let langsData = []\r\n          let lemma = lexeme.lemmaWord\r\n          for (let lang of langs) {\r\n            if (!lexeme.translations[lang].glosses) {\r\n              langsData.push('no')\r\n            } else {\r\n              langsData.push(null)\r\n            }\r\n          }\r\n          if (langsData.filter(val => val === 'no').length > 0) {\r\n            table.push([targetWord, langCode, lemma, ...langsData])\r\n          }\r\n        })\r\n      }\r\n    })\r\n    this.failedTranslations = table\r\n  }\r\n\r\n  createFailedAnythingDownload () {\r\n    let table = []\r\n    let header = ['TargetWord', 'Language', 'MorphClient', 'LemmaWord', 'ShortLexical', 'FullLexical']\r\n    table.push(header)\r\n\r\n    let dictsListShort = this.getDictsList('shortDefData', 'shortDefs')\r\n    let dictsListFull = this.getDictsList('fullDefData', 'fullDefs')\r\n\r\n    this.data.forEach(homonym => {\r\n      let targetWord = homonym.targetWord\r\n      let langCode = homonym.languageName\r\n      let hasMorphData = homonym.morphClient ? 'yes' : 'no'\r\n\r\n      if (!homonym.morphClient) {\r\n        table.push([targetWord, langCode, hasMorphData])\r\n      } else {\r\n        homonym.lexemes.forEach(lexeme => {\r\n          let shortDefsResult = []\r\n          let fullDefsResult = []\r\n\r\n          if ((lexeme.shortDefData && lexeme.shortDefData.shortDefs) || (lexeme.fullDefData && lexeme.fullDefData.fullDefs)) {\r\n            dictsListShort.forEach(dict => {\r\n              let dictValue = []\r\n              if (lexeme.shortDefData && lexeme.shortDefData.shortDefs) {\r\n                lexeme.shortDefData.shortDefs.forEach(def => {\r\n                  if (def.dict === dict && !def.text) { shortDefsResult.push(dict + ' - no') }\r\n                })\r\n              }\r\n              if (lexeme.fullDefData && lexeme.fullDefData.fullDefs) {\r\n                lexeme.fullDefData.fullDefs.forEach(def => {\r\n                  if (def.dict === dict && !def.text) { fullDefsResult.push(dict + ' - no') }\r\n                })\r\n              }\r\n            })\r\n          }\r\n\r\n          if (shortDefsResult.length > 0 || fullDefsResult.length > 0) {\r\n            table.push([targetWord, langCode, hasMorphData, lexeme.lemmaWord, shortDefsResult.join(', '), fullDefsResult.join(', ')])\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    this.failedAnything = table\r\n  }\r\n}\r\n\r\nmodule.exports = CheckTable\n\n//# sourceURL=webpack:///./src/lib/check-table.js?");

/***/ }),

/***/ "./src/lib/config-controller.js":
/*!**************************************!*\
  !*** ./src/lib/config-controller.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("class ConfigController {\r\n  constructor (configFile, paramsFile) {\r\n    this.configFile = JSON.parse(configFile)\r\n    this.paramsFile = JSON.parse(paramsFile)\r\n  }\r\n\r\n  prepareConfigData () {\r\n    if (!this.configFile.languages || !Array.isArra(this.configFile.languages)) {\r\n      this.languages = []\r\n    } else {\r\n      this.languages = this.prepareLanguagesConfig(this.configFile.languages)\r\n    }\r\n    \r\n    this.dictionaries = this.configFile.dictionaries\r\n    this.translationlangs = this.configFile.translationlangs\r\n  }\r\n\r\n  prepareLanguagesConfig (languagesRaw) {\r\n    let langRes = {}\r\n    for (let lang in languagesRaw) {\r\n      langRes[lang] = {\r\n        const: languagesRaw[lang],\r\n        name: languagesRaw[lang]\r\n      }\r\n    }\r\n    return langRes\r\n  }\r\n\r\n  prepareLexicalConfigs (defOpts, languageCode) {\r\n    if (defOpts) {\r\n      if (!defOpts.codes) { defOpts.codes = [] }\r\n      if (defOpts.codes.length === 0) {\r\n        defOpts.codes = Object.keys(this.dictionaries).filter(key => this.dictionaries[key].languageCode === languageCode)\r\n      }\r\n\r\n      defOpts.allow = defOpts.codes.map(code => this.dictionaries[code].url)\r\n      defOpts.dicts = defOpts.codes.map(code => `${code} (${this.dictionaries[code].name})`)\r\n    }\r\n  }\r\n\r\n\r\n  prepareParamsData () {\r\n    this.tabDelimiter = this.checkIfUndefined(this.paramsFile.tabDelimiter, '\\t')\r\n    this.langs = this.prepareLangs(this.paramsFile.langs)\r\n\r\n    this.skipShortDefs = this.checkIfUndefined(this.paramsFile.skipShortDefs, false)\r\n    this.skipFullDefs = this.checkIfUndefined(this.paramsFile.skipFullDefs, false)\r\n\r\n    this.downloadMorphFlag = this.checkIfUndefined(this.paramsFile.downloadMorph, true)\r\n    this.downloadShortDefFlag = this.checkIfUndefined(this.paramsFile.downloadShortDef, true)\r\n    this.downloadFullDefFlag = this.checkIfUndefined(this.paramsFile.downloadFullDef, true)\r\n\r\n    this.downloadFailedShortDefFlag = this.checkIfUndefined(this.paramsFile.downloadFailedShortDef, true)\r\n    this.downloadFailedFullDefFlag = this.checkIfUndefined(this.paramsFile.downloadFailedFullDef, true)\r\n\r\n    this.downloadTranslationsFlag = this.checkIfUndefined(this.paramsFile.downloadTranslations, true)\r\n    this.downloadFailedTranslationsFlag = this.checkIfUndefined(this.paramsFile.downloadFailedTranslations, true)\r\n\r\n    this.downloadFailedAnythingFlag = this.checkIfUndefined(this.paramsFile.downloadFailedAnything, true)\r\n  }\r\n\r\n  prepareLangs (langs) {\r\n    return langs.map(lang => { return { code: lang, property: this.configFile.translationlangs[lang] } })\r\n  }\r\n\r\n  checkIfUndefined (data, defaultVal) {\r\n    return (typeof data !== 'undefined') ? data : defaultVal\r\n  }\r\n}\r\n\r\nmodule.exports = ConfigController\n\n//# sourceURL=webpack:///./src/lib/config-controller.js?");

/***/ }),

/***/ "./src/lib/data-controller.js":
/*!************************************!*\
  !*** ./src/lib/data-controller.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const CheckTable = __webpack_require__(/*! ./check-table.js */ \"./src/lib/check-table.js\")\r\nconst DownloadController = __webpack_require__(/*! ./download-controller.js */ \"./src/lib/download-controller.js\")\r\nconst ConfigController = __webpack_require__(/*! ./config-controller.js */ \"./src/lib/config-controller.js\")\r\n\r\nclass DataController {\r\n  constructor (sourceFile, configFile, paramsFile) {\r\n  \ttry {\r\n      this.sourceData = JSON.parse(sourceFile)\r\n      this.configC = new ConfigController(configFile, paramsFile)\r\n\r\n      console.log('4 JSON files are parsed')\r\n    } catch (err) {\r\n      console.error('Some problems with parsing json files:', err.message)\r\n    }\r\n\r\n    this.configC.prepareConfigData()\r\n    this.configC.prepareParamsData()\r\n\r\n    this.defaultQueueMax = 2\r\n\r\n    if (this.checkSourceData()) {\r\n      this.prepareSourceData()\r\n\r\n      this.resultData = new CheckTable()\r\n\r\n      this.getData()\r\n    }\r\n  }\r\n\r\n  async getData () {\r\n  \tawait this.resultData.getData(this.sourceData, this.configC) \r\n\r\n  \tthis.downloadData()\r\n  }\r\n\r\n  downloadData () {\r\n    DownloadController.downloadMorph(this)\r\n    DownloadController.downloadShortDef(this)\r\n    DownloadController.downloadFullDef(this)\r\n    DownloadController.downloadTranslations(this)\r\n\r\n    DownloadController.downloadFailedMorph(this)\r\n    DownloadController.downloadFailedShortDef(this)\r\n    DownloadController.downloadFailedFullDef(this)\r\n    DownloadController.downloadFailedTranslations(this)\r\n    DownloadController.downloadFailedAnything(this)\r\n  }\r\n\r\n  checkSourceData () {\r\n    if (!Array.isArray(this.sourceData) && (typeof this.sourceData !== 'object') && (typeof this.sourceData === 'object' && !this.sourceData.data)) {\r\n      this.uploadError = 'File should contain an array of words or an object with property data, that contains an array of words.'\r\n      this.sourceData = null\r\n      return false\r\n    }\r\n\r\n    if (Array.isArray(this.sourceData)) {\r\n      this.sourceData = { data: this.sourceData.slice(0) }\r\n    }\r\n\r\n    if (this.sourceData.data.some(word => !word.targetWord)) {\r\n      this.uploadError = 'Each word block in the file should contain targetWord property, you should reload data.'\r\n      this.sourceData = null\r\n      return false\r\n    }\r\n    if (this.sourceData.data.some(word => !word.languageCode)) {\r\n      this.uploadError = 'Each word block in the file should contain languageCode property, you should reload data.'\r\n      this.sourceData = null\r\n      return false\r\n    }\r\n\r\n    this.sourceData.data.forEach(word => {\r\n      if (word.lexiconShortOpts && !word.lexiconShortOpts.codes) {\r\n        word.lexiconShortOpts = { codes: [] }\r\n      }\r\n      if (word.lexiconFullOpts && !word.lexiconFullOpts.codes) {\r\n        word.lexiconFullOpts = { codes: [] }\r\n      }\r\n    })\r\n\r\n    this.sourceData.queue_max = this.sourceData.queue_max ? parseInt(this.sourceData.queue_max) : this.defaultQueueMax\r\n    return true\r\n  }\r\n\r\n  prepareSourceData () {\r\n    this.sourceData.data.forEach(dataItem => {\r\n      dataItem.languageID = Symbol.for(this.configC.languages[dataItem.languageCode].const)\r\n      dataItem.languageName = this.configC.languages[dataItem.languageCode].name\r\n      this.configC.prepareLexicalConfigs(dataItem.lexiconShortOpts, dataItem.languageCode)\r\n      this.configC.prepareLexicalConfigs(dataItem.lexiconFullOpts, dataItem.languageCode)\r\n    })\r\n    this.sourceData.data.sort(function (a, b) { return a.languageCode < b.languageCode })\r\n    \r\n  }\r\n}\r\n\r\nmodule.exports = DataController\n\n//# sourceURL=webpack:///./src/lib/data-controller.js?");

/***/ }),

/***/ "./src/lib/download-controller.js":
/*!****************************************!*\
  !*** ./src/lib/download-controller.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const FileController = __webpack_require__(/*! ./file-controller.js */ \"./src/lib/file-controller.js\")\r\n\r\nclass DownloadController {\r\n\r\n  static downloadMorph (dc) {\r\n  \tif (dc.configC.downloadMorphFlag) {\r\n      dc.resultData.createMorphDataDownload()\r\n      FileController.writeCSVData(dc.resultData.morphData, dc.configC.tabDelimiter, '-morphData.csv')\r\n    }\r\n  }\r\n\r\n  static downloadShortDef (dc) {\r\n  \tif (!dc.configC.skipShortDefs && dc.configC.downloadShortDefFlag) {\r\n      dc.resultData.createShortDefDownload()\r\n      FileController.writeCSVData(dc.resultData.shortDefData, dc.configC.tabDelimiter, '-shortDefData.csv')\r\n    }\r\n  }\r\n\r\n  static downloadFullDef (dc) {\r\n  \tif (!dc.configC.skipFullDefs && dc.configC.downloadFullDefFlag) {\r\n      dc.resultData.createFullDefDownload()\r\n\r\n      for (let tbl in dc.resultData.fullDefData) {\r\n        FileController.writeData(dc.resultData.fullDefData[tbl], `-fullDefData-${tbl}.html`)\r\n      }\r\n    }\r\n  }\r\n\r\n  static downloadTranslations (dc) {\r\n  \tif (dc.configC.downloadTranslationsFlag && dc.configC.langs) {\r\n      dc.resultData.createTranslationsDataDownload(dc.configC.langs)\r\n      FileController.writeCSVData(dc.resultData.translationsData, dc.configC.tabDelimiter, '-translationsData.csv')\r\n    }\r\n  }\r\n\r\n  static downloadFailedMorph (dc) {\r\n  \tif (dc.configC.downloadFailedMorphFlag) {\r\n      dc.resultData.createFailedMorphDownload()\r\n      FileController.writeCSVData(dc.resultData.failedMorph, dc.configC.tabDelimiter, '-failedMorph.csv')\r\n    }\r\n  }\r\n\r\n  static downloadFailedShortDef (dc) {\r\n  \tif (dc.configC.downloadFailedShortDefFlag) {\r\n      dc.resultData.createFailedShortDefDownload()\r\n      FileController.writeCSVData(dc.resultData.failedShortDef, dc.configC.tabDelimiter, '-failedShortDef.csv')\r\n    }\r\n  }\r\n\r\n  static downloadFailedFullDef (dc) {\r\n  \tif (dc.configC.downloadFailedFullDefFlag) {\r\n      dc.resultData.createFailedFullDefDownload()\r\n      FileController.writeCSVData(dc.resultData.failedFullDef, dc.configC.tabDelimiter, '-failedFullDef.csv')\r\n    }\r\n  }\r\n\r\n  static downloadFailedTranslations (dc) {\r\n  \tif (dc.configC.downloadFailedTranslationsFlag && dc.configC.langs) {\r\n      dc.resultData.createFailedTranslationsDownload(dc.configC.langs)\r\n      FileController.writeCSVData(dc.resultData.failedTranslations, dc.configC.tabDelimiter, '-failedTranslations.csv')\r\n    }\r\n  }\r\n\r\n  static downloadFailedAnything (dc) {\r\n  \tif (dc.downloadFailedAnythingFlag) {\r\n      dc.resultData.createFailedAnythingDownload()\r\n      FileController.writeCSVData(dc.resultData.failedAnything, dc.tabDelimiter, '-failedAnything.csv')\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = DownloadController\n\n//# sourceURL=webpack:///./src/lib/download-controller.js?");

/***/ }),

/***/ "./src/lib/file-controller.js":
/*!************************************!*\
  !*** ./src/lib/file-controller.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const fs = __webpack_require__(/*! fs */ \"fs\")\r\nconst path = __webpack_require__(/*! path */ \"path\")\r\nconst mkdirp = __webpack_require__(/*! mkdirp */ \"./node_modules/mkdirp/index.js\")\r\nconst moment = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\")\r\n\r\nconst csvParser = __webpack_require__(/*! papaparse */ \"./node_modules/papaparse/papaparse.js\")\r\n\r\nconst processDir = (process.execPath.search(/node.[a-z]+$/g) == -1) ? path.dirname(process.execPath) : __dirname\r\n\r\nlet writeFile = function writeData (data, filePath) {\r\n  'use strict'\r\n  fs.writeFileSync(filePath, '\\ufeff' + data, {encoding: 'utf8'})\r\n}\r\n\r\nlet readFile = function readFile (filePath) {\r\n  'use strict'\r\n  return fs.readFileSync(filePath, 'utf8')\r\n}\r\n\r\nclass FileController {\r\n  static readData (filename) {\r\n    let inputFN = path.join(processDir, filename)\r\n  \treturn readFile(inputFN)\r\n  }\r\n\r\n  static getPrintData () {\r\n    let dt = moment(new Date())\r\n    return dt.format('DD-MM-YYYY_HH-mm-ss')\r\n  }\r\n\r\n  static writeData (data, filename) {\r\n    FileController.checkFolder(path.join(processDir, '/results'))\r\n\r\n  \tlet printDt = FileController.getPrintData()\r\n  \tlet outputFN = path.join(processDir, '/results/'+printDt + filename)\r\n\r\n  \twriteFile(data, outputFN)\r\n  }\r\n\r\n  static writeCSVData (data, tabDelimiter, filename) {\r\n  \tFileController.writeData(csvParser.unparse(data, {delimiter: tabDelimiter, newline: '\\r\\n', encoding: \"utf8\"}), filename)\r\n  }\r\n\r\n  static checkFolder (folderPath) {\r\n    mkdirp(folderPath, function (err) {\r\n      if (err) console.error(err)\r\n    })\r\n  }\r\n}\r\n\r\nmodule.exports = FileController\n\n//# sourceURL=webpack:///./src/lib/file-controller.js?");

/***/ }),

/***/ "./src/lib/lexical-query.js":
/*!**********************************!*\
  !*** ./src/lib/lexical-query.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* eslint-env jest */\r\n/* eslint-disable no-unused-vars */\r\n\r\nconst AlpheiosTuftsAdapter = __webpack_require__(/*! alpheios-morph-client */ \"./node_modules/alpheios-morph-client/dist/alpheios-morph-client.node.js\").AlpheiosTuftsAdapter\r\nconst Lexicons = __webpack_require__(/*! alpheios-lexicon-client */ \"./node_modules/alpheios-lexicon-client/dist/alpheios-lexicon-client.node.js\").Lexicons\r\nconst LemmaTranslations = __webpack_require__(/*! alpheios-lemma-client */ \"./node_modules/alpheios-lemma-client/dist/alpheios-lemma-client.node.js\").LemmaTranslations\r\nconst LMF = __webpack_require__(/*! alpheios-data-models */ \"./node_modules/alpheios-data-models/dist/alpheios-data-models.node.js\").LanguageModelFactory\r\n\r\n\r\nclass LexicalQuery {\r\n  constructor () {\r\n    this.maAdapter = new AlpheiosTuftsAdapter()\r\n  }\r\n\r\n  async getMorphData (dataItem) {\r\n    try {\r\n      let homonym = await this.maAdapter.getHomonym(dataItem.languageID, dataItem.targetWord)\r\n      dataItem.homonym = homonym\r\n    } catch (error) {\r\n      // console.error(`Problems with fetching morph data - ${error.message}`)\r\n      return 'no'\r\n    }\r\n  }\r\n\r\n  async prepareShortDefsRequests (dataItem, rowData) {\r\n    let definitionRequests = []\r\n\r\n    for (let i = 0; i < rowData.lexiconShortOpts.allow.length; i++) {\r\n      let curOpts = { allow: [ rowData.lexiconShortOpts.allow[i] ], code: rowData.lexiconShortOpts.codes[i], dict: rowData.lexiconShortOpts.dicts[i] }\r\n\r\n      for (let lexeme of dataItem.homonym.lexemes) {\r\n        try {\r\n          let requests = await Lexicons.fetchShortDefs(lexeme.lemma, curOpts)\r\n          definitionRequests = definitionRequests.concat(requests.map(request => {\r\n            return {\r\n              request: request,\r\n              type: 'Short definition',\r\n              lexeme: lexeme,\r\n              appendFunction: 'appendShortDefs',\r\n              complete: false,\r\n              dict: curOpts.dict\r\n            }\r\n          }))\r\n        } catch (error) {\r\n          // console.error(`Problems with fetching shortDefsRequests - ${error.message}`)\r\n        }\r\n      }\r\n    }\r\n\r\n    rowData.definitionShortRequests = definitionRequests\r\n  }\r\n\r\n  async prepareFullDefsRequests (dataItem, rowData) {\r\n    let definitionRequests = []\r\n\r\n    for (let i = 0; i < rowData.lexiconFullOpts.allow.length; i++) {\r\n      let curOpts = { allow: [ rowData.lexiconFullOpts.allow[i] ], code: rowData.lexiconFullOpts.codes[i], dict: rowData.lexiconFullOpts.dicts[i] }\r\n\r\n      for (let lexeme of dataItem.homonym.lexemes) {\r\n        try {\r\n          let requests = await Lexicons.fetchFullDefs(lexeme.lemma, curOpts)\r\n          definitionRequests = definitionRequests.concat(requests.map(request => {\r\n            return {\r\n              request: request,\r\n              type: 'Full definition',\r\n              lexeme: lexeme,\r\n              appendFunction: 'appendFullDefs',\r\n              complete: false,\r\n              dict: curOpts.dict\r\n            }\r\n          }))\r\n        } catch (error) {\r\n          // console.error(`Problems with fetching fullDefsRequests - ${error.message}`)\r\n        }\r\n      }\r\n    }\r\n\r\n    rowData.definitionFullRequests = definitionRequests\r\n  }\r\n\r\n  async getDefs (definitionRequests) {\r\n    for (let definitionRequest of definitionRequests) {\r\n      try {\r\n        let definition = await definitionRequest.request\r\n        // console.log(`${definitionRequest.type}(s) received:`, definition)\r\n\r\n        definition.forEach(def => { def.dict = definitionRequest.dict })\r\n\r\n        definitionRequest.lexeme.meaning[definitionRequest.appendFunction](definition)\r\n      } catch (error) {\r\n        definitionRequest.lexeme.meaning.appendShortDefs({ dict: definitionRequest.dict })\r\n        // console.error(`${definitionRequest.type}(s) request failed: ${error.message}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  async getLemmaTranslations (langs, dataItem, rowData) {\r\n    let languageCode = LMF.getLanguageCodeFromId(rowData.languageID)\r\n\r\n    for (let lexeme of dataItem.homonym.lexemes) {\r\n      lexeme.lemma.translations = []\r\n      for (let lang of langs) {\r\n        try {\r\n          let resTranslations = await LemmaTranslations.fetchTranslations([ lexeme.lemma ], languageCode, lang)\r\n          lexeme.lemma.translations.push(lexeme.lemma.translation)\r\n        } catch (err) {\r\n          // console.error('Problems with fetching translations for', err.message)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = LexicalQuery\n\n//# sourceURL=webpack:///./src/lib/lexical-query.js?");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"assert\");\n\n//# sourceURL=webpack:///external_%22assert%22?");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"crypto\");\n\n//# sourceURL=webpack:///external_%22crypto%22?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"http\");\n\n//# sourceURL=webpack:///external_%22http%22?");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"https\");\n\n//# sourceURL=webpack:///external_%22https%22?");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");\n\n//# sourceURL=webpack:///external_%22path%22?");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"stream\");\n\n//# sourceURL=webpack:///external_%22stream%22?");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"tty\");\n\n//# sourceURL=webpack:///external_%22tty%22?");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"url\");\n\n//# sourceURL=webpack:///external_%22url%22?");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"util\");\n\n//# sourceURL=webpack:///external_%22util%22?");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"zlib\");\n\n//# sourceURL=webpack:///external_%22zlib%22?");

/***/ })

/******/ });